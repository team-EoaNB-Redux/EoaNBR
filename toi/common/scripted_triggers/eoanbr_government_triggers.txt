# General
	has_locked_constitution = {
		custom_trigger_tooltip = {
			tooltip = has_locked_constitution_tooltip
			check_variable = {
				var = modifier@government_constitution_unlocked_rule
				value = 0
				compare = greater_than
			}
		}
	}
	has_revolution = {
		OR = {
			AND = {
				check_variable = {
					var = political_stability
					value = -4
					compare = less_than
					tooltip = political_stability_is_less_than_value_tooltip
				}
				check_variable = {
					var = poltical_legitimacy
					value = constant:political_legitimacy_threshold.low
					compare = less_than
					tooltip = political_legitimacy_is_less_than_value_tooltip
				}
			}
			has_country_flag = eoanbr_ongoing_revolution_flag
		}
	}
#
# Autarchy
	has_locked_autarchy_article	= {
		custom_trigger_tooltip = {
			tooltip = has_locked_article_tooltip
			ARTICLE_TYPE = autarchy_token
			OR = {
				check_variable = {
					var = modifier@autarchy_article_locked_rule
					value = 0
					compare = greater_than
				}
				has_country_flag = reform_autarchy_paused_flag
			}
		}
	}
	# Absolutism
		has_autarchy_absolutism_enable = {
			always = yes
			# set_temp_variable = {
			# 	tech_temp = global.tech_unlock@token:autarchy_absolutism
			# }
			# has_tech = var:tech_temp
		}
		has_autarchy_absolutism_available = {
			if = {
				limit = {
					OR = {
						has_locked_constitution = yes
						has_locked_autarchy_article = yes
					}
					custom_trigger_tooltip = {
						tooltip = has_locked_article_tooltip
						ARTICLE_TYPE = autarchy_token
						always = no
					}
				}
			}
			else = {
				custom_override_tooltip = {
					tooltip = has_invalid_article_greater_than_threshold_tooltip
					ARTICLE_TYPE = "autarchy_token"
					MIN_VALUE = constant:autarchy_level.moderate
					check_variable = {
						var = coalition_autarchy_preference
						value = constant:autarchy_level.moderate
						compare = greater_than_or_equals
					}
				}
			}
		}
		has_autarchy_absolutism_selectable = {
			custom_override_tooltip = {
				tooltip = has_invalid_article_greater_than_threshold_tooltip
				ARTICLE_TYPE = "autarchy_token"
				MIN_VALUE = global.min@token:autarchy_absolutism
				check_variable = {
					var = modifier@government_autarchy_modifier
					value = global.min@token:autarchy_absolutism
					compare = greater_than_or_equals
				}
			}
		}
	#
	# Delegated Authority
		has_autarchy_delegated_authority_enable = {
			always = yes
			# set_temp_variable = {
			# 	tech_temp = global.tech_unlock@token:autarchy_delegated_authority
			# }
			# has_tech = var:tech_temp
		}
		has_autarchy_delegated_authority_available = {
			if = {
				limit = {
					OR = {
						has_locked_constitution = yes
						has_locked_autarchy_article = yes
					}
					custom_trigger_tooltip = {
						tooltip = has_locked_article_tooltip
						ARTICLE_TYPE = autarchy_token
						always = no
					}
				}
			}
			else = {
				custom_override_tooltip = {
					tooltip = has_invalid_article_greater_than_threshold_tooltip
					ARTICLE_TYPE = "autarchy_token"
					MIN_VALUE = constant:autarchy_level.moderate
					check_variable = {
						var = coalition_autarchy_preference
						value = constant:autarchy_level.moderate
						compare = greater_than_or_equals
					}
				}
			}
		}
		has_autarchy_delegated_authority_selectable = {
			custom_override_tooltip = {
				tooltip = has_invalid_article_between_threshold_tooltip
				ARTICLE_TYPE = "autarchy_token"
				MIN_VALUE = global.min@token:autarchy_delegated_authority
				MIN_VALUE = global.max@token:autarchy_delegated_authority
				check_variable = {
					var = modifier@government_autarchy_modifier
					value = global.min@token:autarchy_delegated_authority
					compare = greater_than_or_equals
				}
				check_variable = {
					var = modifier@government_autarchy_modifier
					value = global.max@token:autarchy_delegated_authority
					compare = less_than_or_equals
				}
			}
		}
	#
	# Delegated Representation
		has_autarchy_delegated_representation_enable = {
			set_temp_variable = {
				tech_temp = global.tech_unlock@token:autarchy_delegated_representation
			}
			has_tech = var:tech_temp
		}
		has_autarchy_delegated_representation_available = {
			if = {
				limit = {
					OR = {
						has_locked_constitution = yes
						has_locked_autarchy_article = yes
					}
					custom_trigger_tooltip = {
						tooltip = has_locked_article_tooltip
						ARTICLE_TYPE = autarchy_token
						always = no
					}
				}
			}
			else = {
				custom_override_tooltip = {
					tooltip = has_invalid_article_between_threshold_tooltip
					ARTICLE_TYPE = "autarchy_token"
					MIN_VALUE = constant:autarchy_level.low
					MAX_VALUE = constant:autarchy_level.very_high
					check_variable = {
						var = coalition_autarchy_preference
						value = constant:autarchy_level.very_high
						compare = less_than_or_equals
					}
					check_variable = {
						var = coalition_autarchy_preference
						value = constant:autarchy_level.moderate
						compare = greater_than_or_equals
					}
				}
			}
		}
		has_autarchy_delegated_representation_selectable = {
			custom_override_tooltip = {
				tooltip = has_invalid_article_between_threshold_tooltip
				ARTICLE_TYPE = "autarchy_token"
				MIN_VALUE = global.min@token:autarchy_delegated_representation
				MIN_VALUE = global.max@token:autarchy_delegated_representation
				check_variable = {
					var = modifier@government_autarchy_modifier
					value = global.min@token:autarchy_delegated_representation
					compare = greater_than_or_equals
				}
				check_variable = {
					var = modifier@government_autarchy_modifier
					value = global.max@token:autarchy_delegated_representation
					compare = less_than_or_equals
				}
			}
		}
	#
	# Delegated Centralization
		has_autarchy_democratic_centralization_enable = {
			set_temp_variable = {
				tech_temp = global.tech_unlock@token:autarchy_democratic_centralization
			}
			has_tech = var:tech_temp
		}
		has_autarchy_democratic_centralization_available = {
			if = {
				limit = {
					OR = {
						has_locked_constitution = yes
						has_locked_autarchy_article = yes
					}
					custom_trigger_tooltip = {
						tooltip = has_locked_article_tooltip
						ARTICLE_TYPE = autarchy_token
						always = no
					}
				}
			}
			else = {
				custom_override_tooltip = {
					tooltip = has_invalid_article_between_threshold_tooltip
					ARTICLE_TYPE = "autarchy_token"
					MIN_VALUE = constant:autarchy_level.low
					MAX_VALUE = constant:autarchy_level.very_high
					check_variable = {
						var = coalition_autarchy_preference
						value = constant:autarchy_level.very_high
						compare = less_than_or_equals
					}
					check_variable = {
						var = coalition_autarchy_preference
						value = constant:autarchy_level.moderate
						compare = greater_than_or_equals
					}
				}
			}
		}
		has_autarchy_democratic_centralization_selectable = {
			custom_override_tooltip = {
				tooltip = has_invalid_article_between_threshold_tooltip
				ARTICLE_TYPE = "autarchy_token"
				MIN_VALUE = global.min@token:autarchy_democratic_centralization
				MIN_VALUE = global.max@token:autarchy_democratic_centralization
				check_variable = {
					var = modifier@government_autarchy_modifier
					value = global.min@token:autarchy_democratic_centralization
					compare = greater_than_or_equals
				}
				check_variable = {
					var = modifier@government_autarchy_modifier
					value = global.max@token:autarchy_democratic_centralization
					compare = less_than_or_equals
				}
			}
		}
	#
	# Democratic Representation
		has_autarchy_democratic_representation_enable = {
			set_temp_variable = {
				tech_temp = global.tech_unlock@token:autarchy_democratic_representation
			}
			has_tech = var:tech_temp
		}
		has_autarchy_democratic_representation_available = {
			if = {
				limit = {
					OR = {
						has_locked_constitution = yes
						has_locked_autarchy_article = yes
					}
					custom_trigger_tooltip = {
						tooltip = has_locked_article_tooltip
						ARTICLE_TYPE = autarchy_token
						always = no
					}
				}
			}
			else = {
				custom_override_tooltip = {
					tooltip = has_invalid_article_between_threshold_tooltip
					ARTICLE_TYPE = "autarchy_token"
					MIN_VALUE = constant:autarchy_level.low
					MAX_VALUE = constant:autarchy_level.very_high
					check_variable = {
						var = coalition_autarchy_preference
						value = constant:autarchy_level.very_high
						compare = less_than_or_equals
					}
					check_variable = {
						var = coalition_autarchy_preference
						value = constant:autarchy_level.moderate
						compare = greater_than_or_equals
					}
				}
			}
		}
		has_autarchy_democratic_representation_selectable = {
			custom_override_tooltip = {
				tooltip = has_invalid_article_between_threshold_tooltip
				ARTICLE_TYPE = "autarchy_token"
				MIN_VALUE = global.min@token:autarchy_democratic_representation
				MIN_VALUE = global.max@token:autarchy_democratic_representation
				check_variable = {
					var = modifier@government_autarchy_modifier
					value = global.min@token:autarchy_democratic_representation
					compare = greater_than_or_equals
				}
				check_variable = {
					var = modifier@government_autarchy_modifier
					value = global.max@token:autarchy_democratic_representation
					compare = less_than_or_equals
				}
			}
		}
	#
	# Minarchy
		has_autarchy_minarchy_enable = {
			set_temp_variable = {
				tech_temp = global.tech_unlock@token:autarchy_minarchy
			}
			has_tech = var:tech_temp
		}
		has_autarchy_minarchy_available = {
			if = {
				limit = {
					OR = {
						has_locked_constitution = yes
						has_locked_autarchy_article = yes
					}
					custom_trigger_tooltip = {
						tooltip = has_locked_article_tooltip
						ARTICLE_TYPE = autarchy_token
						always = no
					}
				}
			}
			else = {
				custom_override_tooltip = {
					tooltip = has_invalid_article_between_threshold_tooltip
					ARTICLE_TYPE = "autarchy_token"
					MIN_VALUE = constant:autarchy_level.low
					MAX_VALUE = constant:autarchy_level.very_high
					check_variable = {
						var = coalition_autarchy_preference
						value = constant:autarchy_level.very_high
						compare = less_than_or_equals
					}
					check_variable = {
						var = coalition_autarchy_preference
						value = constant:autarchy_level.moderate
						compare = greater_than_or_equals
					}
				}
			}
		}
		has_autarchy_minarchy_selectable = {
			custom_override_tooltip = {
				tooltip = has_invalid_article_between_threshold_tooltip
				ARTICLE_TYPE = "autarchy_token"
				MIN_VALUE = global.min@token:autarchy_minarchy
				MIN_VALUE = global.max@token:autarchy_minarchy
				check_variable = {
					var = modifier@government_autarchy_modifier
					value = global.min@token:autarchy_minarchy
					compare = greater_than_or_equals
				}
				check_variable = {
					var = modifier@government_autarchy_modifier
					value = global.max@token:autarchy_minarchy
					compare = less_than_or_equals
				}
			}
		}
	#
#
