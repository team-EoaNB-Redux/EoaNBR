
#Pops
	pops_update = {
		set_variable = { pops_workforce_percentage = global.pops_workforce_participation }
		
		set_variable = { pops = pops_workforce }
		divide_variable = { pops = global.pops_workforce_participation }

		# Reset to 0
			set_variable = { pops_needs_spending = 0 }
			set_variable = { pops_employed = 0 }
			set_variable = { pops_sol = 0 }
			set_variable = { pops_income_tax_spending = 0 }
			set_variable = { pops_corporate_tax_spending = 0 }
			set_variable = { pops_sales_tax_spending = 0 }
			set_variable = { pops_debt_interest_spending = 0 }
			set_variable = { pops_spending_target = 0 }
			set_variable = { pops_earnings = 0 }
		#

		pops_workforce_update = yes

		set_temp_variable = { cons_conf_temp = controller:modifier@consumer_confidence_modifier }
		divide_temp_variable = { cons_conf_temp = 100 }

		set_temp_variable = { upper_earnings_limit = controller:pops_earnings_avg }
		multiply_temp_variable = { upper_earnings_limit = 3 }
		set_temp_variable = { lower_earnings_limit = controller:pops_earnings_avg }

		set_temp_variable = { upper_income_multiplier = controller:income_tax_upper_strata_percentage_actual }
		divide_temp_variable = { upper_income_multiplier = 100 }
		set_temp_variable = { middle_income_multiplier = controller:income_tax_middle_strata_percentage_actual }
		divide_temp_variable = { middle_income_multiplier = 100 }
		set_temp_variable = { lower_income_multiplier = controller:income_tax_lower_strata_percentage_actual }
		divide_temp_variable = { lower_income_multiplier = 100 }
		set_temp_variable = { sales_tax_multiplier = controller:sales_tax_percentage_actual }
		divide_temp_variable = { sales_tax_multiplier = 100 }
		set_temp_variable = { corporate_tax_multiplier = controller:corporate_tax_percentage_actual }
		divide_temp_variable = { corporate_tax_multiplier = 100 }

		# Slaves
			if = {
				limit = {
					check_variable = { slaves_workforce > 0 }
				}
				set_variable = { slaves = slaves_workforce }
				divide_variable = { slaves = pops_workforce_percentage }
				set_variable = { slaves_percentage = slaves }
				divide_variable = { slaves_percentage = pops }

				add_to_variable = { pops_employed = slaves_employed }

				set_variable = { slaves_unemployed = slaves_workforce }
				subtract_from_variable = { slaves_unemployed = slaves_employed }

				# Earnings/Spending
				set_variable = { slaves_earnings = slaves_employed }
				multiply_variable = { slaves_earnings = base_wage }
				add_to_variable = { pops_earnings = slaves_earnings }

				set_variable = { slaves_needs_spending = 0 }
				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					set_variable = { slaves_need_cost@var:r_token = slaves_need@var:r_token } 
					multiply_variable = { slaves_need_cost@var:r_token = controller:price@var:r_token }
					add_to_variable = { slaves_needs_spending = slaves_need_cost@var:r_token }
				}

				set_variable = { slaves_col = slaves_needs_spending }
				divide_variable = { slaves_col = slaves_workforce }
				
				#Standard of Living
				set_temp_variable = { sol_temp = slaves_sol }
				multiply_temp_variable = { sol_temp = slaves_workforce }
				add_to_variable = { pops_sol = sol_temp }

				add_to_variable = { pops_needs_spending = slaves_needs_spending }
				set_variable = { slaves_spending = slaves_needs_spending }

				#Income Tax
				set_temp_variable = { avg_earnings_temp = slaves_earnings }
				divide_temp_variable = { avg_earnings_temp = slaves }
				set_variable = { slaves_income_tax_spending = slaves_earnings }
				if = {
					limit = {
						check_variable = { avg_earnings_temp < lower_earnings_limit }
					}
					multiply_variable = { slaves_income_tax_spending = lower_income_multiplier }
				}
				else_if = {
					limit = {
						check_variable = { avg_earnings_temp < upper_earnings_limit }
					}
					multiply_variable = { slaves_income_tax_spending = middle_income_multiplier }
				}
				else = {
					multiply_variable = { slaves_income_tax_spending = upper_income_multiplier }
				}
				add_to_variable = { slaves_spending = slaves_income_tax_spending }
				add_to_variable = { pops_income_tax_spending = slaves_income_tax_spending }

				#Spending Target
				set_variable = { slaves_spending_target = slaves_earnings }
				subtract_from_variable = { slaves_spending_target = slaves_income_tax_spending }
				multiply_variable = { slaves_spending_target = cons_conf_temp }
				add_to_variable = { pops_spending_target = slaves_spending_target }

				#Sales Tax
				set_variable = { slaves_sales_tax_spending = slaves_needs_spending }
				multiply_variable = { slaves_sales_tax_spending = sales_tax_multiplier }
				add_to_variable = { slaves_spending = slaves_sales_tax_spending }
				add_to_variable = { pops_sales_tax_spending = slaves_sales_tax_spending }

				#Interest
				set_variable = { slaves_debt_interest_spending = slaves_debt }
				divide_variable = { slaves_debt_interest_spending = 12 }
				multiply_variable = { slaves_debt_interest_spending = controller:interest_rate }
				divide_variable = { slaves_debt_interest_spending = 100 }
				add_to_variable = { slaves_spending = slaves_debt_interest_spending }
				add_to_variable = { pops_debt_interest_spending = slaves_debt_interest_spending }
			}
			else = {
				set_variable = { slaves_spending = 0 }
				subtract_from_variable = { slaves_spending_target = 0 }
				set_variable = { slaves_income_tax_spending = 0 }
				set_variable = { slaves_sales_tax_spending = 0 }
				set_variable = { slaves_debt_interest_spending = 0 }
			}
		#
		# Peasants
			if = {
				limit = {
					check_variable = { peasants_workforce > 0 }
				}
				set_variable = { peasants = peasants_workforce }
				divide_variable = { peasants = pops_workforce_percentage }
				set_variable = { peasants_percentage = peasants }
				divide_variable = { peasants_percentage = pops }

				add_to_variable = { pops_employed = peasants_employed }

				set_variable = { peasants_unemployed = peasants_workforce }
				subtract_from_variable = { peasants_unemployed = peasants_employed }

				# Earnings/Spending
				set_variable = { peasants_earnings = expenses_payroll@token:subsistence_farm }
				add_to_variable = { pops_earnings = peasants_earnings }

				set_variable = { peasants_needs_spending = 0 }
				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					set_variable = { peasants_need_cost@var:r_token = peasants_need@var:r_token } 
					multiply_variable = { peasants_need_cost@var:r_token = controller:price@var:r_token }
					add_to_variable = { peasants_needs_spending = peasants_need_cost@var:r_token }
				}

				set_variable = { peasants_col = peasants_needs_spending }
				divide_variable = { peasants_col = peasants_workforce }
				
				#Standard of Living
				set_temp_variable = { sol_temp = peasants_sol }
				multiply_temp_variable = { sol_temp = peasants_workforce }
				add_to_variable = { pops_sol = sol_temp }

				add_to_variable = { pops_needs_spending = peasants_needs_spending }
				set_variable = { peasants_spending = peasants_needs_spending }

				#Income Tax
				set_temp_variable = { avg_earnings_temp = peasants_earnings }
				divide_temp_variable = { avg_earnings_temp = peasants }
				set_variable = { peasants_income_tax_spending = peasants_earnings }
				if = {
					limit = {
						check_variable = { avg_earnings_temp < lower_earnings_limit }
					}
					multiply_variable = { peasants_income_tax_spending = lower_income_multiplier }
				}
				else_if = {
					limit = {
						check_variable = { avg_earnings_temp < upper_earnings_limit }
					}
					multiply_variable = { peasants_income_tax_spending = middle_income_multiplier }
				}
				else = {
					multiply_variable = { peasants_income_tax_spending = upper_income_multiplier }
				}
				add_to_variable = { peasants_spending = peasants_income_tax_spending }
				add_to_variable = { pops_income_tax_spending = peasants_income_tax_spending }

				#Spending Target
				set_variable = { peasants_spending_target = peasants_earnings }
				subtract_from_variable = { peasants_spending_target = peasants_income_tax_spending }
				multiply_variable = { peasants_spending_target = cons_conf_temp }
				add_to_variable = { pops_spending_target = peasants_spending_target }

				#Sales Tax
				set_variable = { peasants_sales_tax_spending = peasants_needs_spending }
				multiply_variable = { peasants_sales_tax_spending = sales_tax_multiplier }
				add_to_variable = { peasants_spending = peasants_sales_tax_spending }
				add_to_variable = { pops_sales_tax_spending = peasants_sales_tax_spending }

				#Interest
				set_variable = { peasants_debt_interest_spending = peasants_debt }
				divide_variable = { peasants_debt_interest_spending = 12 }
				multiply_variable = { peasants_debt_interest_spending = controller:interest_rate }
				divide_variable = { peasants_debt_interest_spending = 100 }
				add_to_variable = { peasants_spending = peasants_debt_interest_spending }
				add_to_variable = { pops_debt_interest_spending = peasants_debt_interest_spending }
			}
			else = {
				set_variable = { peasants_spending = 0 }
				subtract_from_variable = { peasants_spending_target = 0 }
				set_variable = { peasants_income_tax_spending = 0 }
				set_variable = { peasants_sales_tax_spending = 0 }
				set_variable = { peasants_debt_interest_spending = 0 }
			}
		#
		# Laborers
			if = {
				limit = {
					check_variable = { laborers_workforce > 0 }
				}
				set_variable = { laborers = laborers_workforce }
				divide_variable = { laborers = pops_workforce_percentage }
				set_variable = { laborers_percentage = laborers }
				divide_variable = { laborers_percentage = pops }

				add_to_variable = { pops_employed = laborers_employed }

				set_variable = { laborers_unemployed = laborers_workforce }
				subtract_from_variable = { laborers_unemployed = laborers_employed }

				# Earnings/Spending
				set_variable = { laborers_earnings = laborers_employed }
				multiply_variable = { laborers_earnings = laborers_wage }
				add_to_variable = { pops_earnings = laborers_earnings }

				set_variable = { laborers_needs_spending = 0 }
				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					set_variable = { laborers_need_cost@var:r_token = laborers_need@var:r_token } 
					multiply_variable = { laborers_need_cost@var:r_token = controller:price@var:r_token }
					add_to_variable = { laborers_needs_spending = laborers_need_cost@var:r_token }
				}

				set_variable = { laborers_col = laborers_needs_spending }
				divide_variable = { laborers_col = laborers_workforce }
				
				#Standard of Living
				set_temp_variable = { sol_temp = laborers_sol }
				multiply_temp_variable = { sol_temp = laborers_workforce }
				add_to_variable = { pops_sol = sol_temp }

				add_to_variable = { pops_needs_spending = laborers_needs_spending }
				set_variable = { laborers_spending = laborers_needs_spending }

				#Income Tax
				set_temp_variable = { avg_earnings_temp = laborers_earnings }
				divide_temp_variable = { avg_earnings_temp = laborers }
				set_variable = { laborers_income_tax_spending = laborers_earnings }
				if = {
					limit = {
						check_variable = { avg_earnings_temp < lower_earnings_limit }
					}
					multiply_variable = { laborers_income_tax_spending = lower_income_multiplier }
				}
				else_if = {
					limit = {
						check_variable = { avg_earnings_temp < upper_earnings_limit }
					}
					multiply_variable = { laborers_income_tax_spending = middle_income_multiplier }
				}
				else = {
					multiply_variable = { laborers_income_tax_spending = upper_income_multiplier }
				}
				add_to_variable = { laborers_spending = laborers_income_tax_spending }
				add_to_variable = { pops_income_tax_spending = laborers_income_tax_spending }

				#Spending Target
				set_variable = { laborers_spending_target = laborers_earnings }
				subtract_from_variable = { laborers_spending_target = laborers_income_tax_spending }
				multiply_variable = { laborers_spending_target = cons_conf_temp }
				add_to_variable = { pops_spending_target = laborers_spending_target }

				#Sales Tax
				set_variable = { laborers_sales_tax_spending = laborers_needs_spending }
				multiply_variable = { laborers_sales_tax_spending = sales_tax_multiplier }
				add_to_variable = { laborers_spending = laborers_sales_tax_spending }
				add_to_variable = { pops_sales_tax_spending = laborers_sales_tax_spending }

				#Interest
				set_variable = { laborers_debt_interest_spending = laborers_debt }
				divide_variable = { laborers_debt_interest_spending = 12 }
				multiply_variable = { laborers_debt_interest_spending = controller:interest_rate }
				divide_variable = { laborers_debt_interest_spending = 100 }
				add_to_variable = { laborers_spending = laborers_debt_interest_spending }
				add_to_variable = { pops_debt_interest_spending = laborers_debt_interest_spending }
			}
			else = {
				set_variable = { laborers_spending = 0 }
				subtract_from_variable = { laborers_spending_target = 0 }
				set_variable = { laborers_income_tax_spending = 0 }
				set_variable = { laborers_sales_tax_spending = 0 }
				set_variable = { laborers_debt_interest_spending = 0 }
			}
		#
		# Workers
			if = {
				limit = {
					check_variable = { workers_workforce > 0 }
				}
				set_variable = { workers = workers_workforce }
				divide_variable = { workers = pops_workforce_percentage }
				set_variable = { workers_percentage = workers }
				divide_variable = { workers_percentage = pops }

				add_to_variable = { pops_employed = workers_employed }

				set_variable = { workers_unemployed = workers_workforce }
				subtract_from_variable = { workers_unemployed = workers_employed }

				# Earnings/Spending
				set_variable = { workers_earnings = workers_employed }
				multiply_variable = { workers_earnings = workers_wage }
				add_to_variable = { pops_earnings = workers_earnings }

				set_variable = { workers_needs_spending = 0 }
				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					set_variable = { workers_need_cost@var:r_token = workers_need@var:r_token } 
					multiply_variable = { workers_need_cost@var:r_token = controller:price@var:r_token }
					add_to_variable = { workers_needs_spending = workers_need_cost@var:r_token }
				}

				set_variable = { workers_col = workers_needs_spending }
				divide_variable = { workers_col = workers_workforce }
				
				#Standard of Living
				set_temp_variable = { sol_temp = workers_sol }
				multiply_temp_variable = { sol_temp = workers_workforce }
				add_to_variable = { pops_sol = sol_temp }

				add_to_variable = { pops_needs_spending = workers_needs_spending }
				set_variable = { workers_spending = workers_needs_spending }

				#Income Tax
				set_temp_variable = { avg_earnings_temp = workers_earnings }
				divide_temp_variable = { avg_earnings_temp = workers }
				set_variable = { workers_income_tax_spending = workers_earnings }
				if = {
					limit = {
						check_variable = { avg_earnings_temp < lower_earnings_limit }
					}
					multiply_variable = { workers_income_tax_spending = lower_income_multiplier }
				}
				else_if = {
					limit = {
						check_variable = { avg_earnings_temp < upper_earnings_limit }
					}
					multiply_variable = { workers_income_tax_spending = middle_income_multiplier }
				}
				else = {
					multiply_variable = { workers_income_tax_spending = upper_income_multiplier }
				}
				add_to_variable = { workers_spending = workers_income_tax_spending }
				add_to_variable = { pops_income_tax_spending = workers_income_tax_spending }

				#Spending Target
				set_variable = { workers_spending_target = workers_earnings }
				subtract_from_variable = { workers_spending_target = workers_income_tax_spending }
				multiply_variable = { workers_spending_target = cons_conf_temp }
				add_to_variable = { pops_spending_target = workers_spending_target }

				#Sales Tax
				set_variable = { workers_sales_tax_spending = workers_needs_spending }
				multiply_variable = { workers_sales_tax_spending = sales_tax_multiplier }
				add_to_variable = { workers_spending = workers_sales_tax_spending }
				add_to_variable = { pops_sales_tax_spending = workers_sales_tax_spending }

				#Interest
				set_variable = { workers_debt_interest_spending = workers_debt }
				divide_variable = { workers_debt_interest_spending = 12 }
				multiply_variable = { workers_debt_interest_spending = controller:interest_rate }
				divide_variable = { workers_debt_interest_spending = 100 }
				add_to_variable = { workers_spending = workers_debt_interest_spending }
				add_to_variable = { pops_debt_interest_spending = workers_debt_interest_spending }
			}
			else = {
				set_variable = { workers_spending = 0 }
				subtract_from_variable = { workers_spending_target = 0 }
				set_variable = { workers_income_tax_spending = 0 }
				set_variable = { workers_sales_tax_spending = 0 }
				set_variable = { workers_debt_interest_spending = 0 }
			}
		#
		# Professionals
			if = {
				limit = {
					check_variable = { professionals_workforce > 0 }
				}
				set_variable = { professionals = professionals_workforce }
				divide_variable = { professionals = pops_workforce_percentage }
				set_variable = { professionals_percentage = professionals }
				divide_variable = { professionals_percentage = pops }

				add_to_variable = { pops_employed = professionals_employed }

				set_variable = { professionals_unemployed = professionals_workforce }
				subtract_from_variable = { professionals_unemployed = professionals_employed }

				# Earnings/Spending
				set_variable = { professionals_earnings = professionals_employed }
				multiply_variable = { professionals_earnings = professionals_wage }
				add_to_variable = { pops_earnings = professionals_earnings }

				set_variable = { professionals_needs_spending = 0 }
				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					set_variable = { professionals_need_cost@var:r_token = professionals_need@var:r_token } 
					multiply_variable = { professionals_need_cost@var:r_token = controller:price@var:r_token }
					add_to_variable = { professionals_needs_spending = professionals_need_cost@var:r_token }
				}

				set_variable = { professionals_col = professionals_needs_spending }
				divide_variable = { professionals_col = professionals_workforce }
				
				#Standard of Living
				set_temp_variable = { sol_temp = professionals_sol }
				multiply_temp_variable = { sol_temp = professionals_workforce }
				add_to_variable = { pops_sol = sol_temp }

				add_to_variable = { pops_needs_spending = professionals_needs_spending }
				set_variable = { professionals_spending = professionals_needs_spending }

				#Income Tax
				set_temp_variable = { avg_earnings_temp = professionals_earnings }
				divide_temp_variable = { avg_earnings_temp = professionals }
				set_variable = { professionals_income_tax_spending = professionals_earnings }
				if = {
					limit = {
						check_variable = { avg_earnings_temp < lower_earnings_limit }
					}
					multiply_variable = { professionals_income_tax_spending = lower_income_multiplier }
				}
				else_if = {
					limit = {
						check_variable = { avg_earnings_temp < upper_earnings_limit }
					}
					multiply_variable = { professionals_income_tax_spending = middle_income_multiplier }
				}
				else = {
					multiply_variable = { professionals_income_tax_spending = upper_income_multiplier }
				}
				add_to_variable = { professionals_spending = professionals_income_tax_spending }
				add_to_variable = { pops_income_tax_spending = professionals_income_tax_spending }

				#Spending Target
				set_variable = { professionals_spending_target = professionals_earnings }
				subtract_from_variable = { professionals_spending_target = professionals_income_tax_spending }
				multiply_variable = { professionals_spending_target = cons_conf_temp }
				add_to_variable = { pops_spending_target = professionals_spending_target }

				#Sales Tax
				set_variable = { professionals_sales_tax_spending = professionals_needs_spending }
				multiply_variable = { professionals_sales_tax_spending = sales_tax_multiplier }
				add_to_variable = { professionals_spending = professionals_sales_tax_spending }
				add_to_variable = { pops_sales_tax_spending = professionals_sales_tax_spending }

				#Interest
				set_variable = { professionals_debt_interest_spending = professionals_debt }
				divide_variable = { professionals_debt_interest_spending = 12 }
				multiply_variable = { professionals_debt_interest_spending = controller:interest_rate }
				divide_variable = { professionals_debt_interest_spending = 100 }
				add_to_variable = { professionals_spending = professionals_debt_interest_spending }
				add_to_variable = { pops_debt_interest_spending = professionals_debt_interest_spending }
			}
			else = {
				set_variable = { professionals_spending = 0 }
				subtract_from_variable = { professionals_spending_target = 0 }
				set_variable = { professionals_income_tax_spending = 0 }
				set_variable = { professionals_sales_tax_spending = 0 }
				set_variable = { professionals_debt_interest_spending = 0 }
			}
		#
		# Specialists
			if = {
				limit = {
					check_variable = { specialists_workforce > 0 }
				}
				set_variable = { specialists = specialists_workforce }
				divide_variable = { specialists = pops_workforce_percentage }
				set_variable = { specialists_percentage = specialists }
				divide_variable = { specialists_percentage = pops }

				add_to_variable = { pops_employed = specialists_employed }

				set_variable = { specialists_unemployed = specialists_workforce }
				subtract_from_variable = { specialists_unemployed = specialists_employed }

				# Earnings/Spending
				set_variable = { specialists_earnings = specialists_employed }
				multiply_variable = { specialists_earnings = specialists_wage }
				add_to_variable = { pops_earnings = specialists_earnings }

				set_variable = { specialists_needs_spending = 0 }
				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					set_variable = { specialists_need_cost@var:r_token = specialists_need@var:r_token } 
					multiply_variable = { specialists_need_cost@var:r_token = controller:price@var:r_token }
					add_to_variable = { specialists_needs_spending = specialists_need_cost@var:r_token }
				}

				set_variable = { specialists_col = specialists_needs_spending }
				divide_variable = { specialists_col = specialists_workforce }
				
				#Standard of Living
				set_temp_variable = { sol_temp = specialists_sol }
				multiply_temp_variable = { sol_temp = specialists_workforce }
				add_to_variable = { pops_sol = sol_temp }

				add_to_variable = { pops_needs_spending = specialists_needs_spending }
				set_variable = { specialists_spending = specialists_needs_spending }

				#Income Tax
				set_temp_variable = { avg_earnings_temp = specialists_earnings }
				divide_temp_variable = { avg_earnings_temp = specialists }
				set_variable = { specialists_income_tax_spending = specialists_earnings }
				if = {
					limit = {
						check_variable = { avg_earnings_temp < lower_earnings_limit }
					}
					multiply_variable = { specialists_income_tax_spending = lower_income_multiplier }
				}
				else_if = {
					limit = {
						check_variable = { avg_earnings_temp < upper_earnings_limit }
					}
					multiply_variable = { specialists_income_tax_spending = middle_income_multiplier }
				}
				else = {
					multiply_variable = { specialists_income_tax_spending = upper_income_multiplier }
				}
				add_to_variable = { specialists_spending = specialists_income_tax_spending }
				add_to_variable = { pops_income_tax_spending = specialists_income_tax_spending }

				#Spending Target
				set_variable = { specialists_spending_target = specialists_earnings }
				subtract_from_variable = { specialists_spending_target = specialists_income_tax_spending }
				multiply_variable = { specialists_spending_target = cons_conf_temp }
				add_to_variable = { pops_spending_target = specialists_spending_target }

				#Sales Tax
				set_variable = { specialists_sales_tax_spending = specialists_needs_spending }
				multiply_variable = { specialists_sales_tax_spending = sales_tax_multiplier }
				add_to_variable = { specialists_spending = specialists_sales_tax_spending }
				add_to_variable = { pops_sales_tax_spending = specialists_sales_tax_spending }

				#Interest
				set_variable = { specialists_debt_interest_spending = specialists_debt }
				divide_variable = { specialists_debt_interest_spending = 12 }
				multiply_variable = { specialists_debt_interest_spending = controller:interest_rate }
				divide_variable = { specialists_debt_interest_spending = 100 }
				add_to_variable = { specialists_spending = specialists_debt_interest_spending }
				add_to_variable = { pops_debt_interest_spending = specialists_debt_interest_spending }
			}
			else = {
				set_variable = { specialists_spending = 0 }
				subtract_from_variable = { specialists_spending_target = 0 }
				set_variable = { specialists_income_tax_spending = 0 }
				set_variable = { specialists_sales_tax_spending = 0 }
				set_variable = { specialists_debt_interest_spending = 0 }
			}
		#
		# Aristocrats
			if = {
				limit = {
					check_variable = { aristocrats_workforce > 0 }
				}
				set_variable = { aristocrats = aristocrats_workforce }
				divide_variable = { aristocrats = pops_workforce_percentage }
				set_variable = { aristocrats_percentage = aristocrats }
				divide_variable = { aristocrats_percentage = pops }

				add_to_variable = { pops_employed = aristocrats_employed }

				set_variable = { aristocrats_unemployed = aristocrats_workforce }
				subtract_from_variable = { aristocrats_unemployed = aristocrats_employed }

				# Earnings/Spending
				set_variable = { aristocrats_earnings = aristocrats_employed }
				multiply_variable = { aristocrats_earnings = aristocrats_wage }
				add_to_variable = { aristocrats_earnings = aristocrats_dividends }
				if = {
					limit = {
						check_variable = { aristocrats_earnings > 0 }
					}
					set_variable = { aristocrats_investment = controller:modifier@aristocrats_investment_contribution_factor }
					if = {
						limit = {
							check_variable = { aristocrats_investment < 0 }
						}
						set_variable = { aristocrats_investment = 0 }
					}
					multiply_variable = { aristocrats_investment = aristocrats_earnings }
					subtract_from_variable = { aristocrats_earnings = aristocrats_investment }
				}
				else = {
					set_variable = { aristocrats_earnings = 0 }
				}
				if = {
					limit = {
						check_variable = { aristocrats_earnings < 0 }
					}
					set_variable = { aristocrats_earnings = 0 }
				}
				add_to_variable = { pops_earnings = aristocrats_earnings }

				set_variable = { aristocrats_needs_spending = 0 }
				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					set_variable = { aristocrats_need_cost@var:r_token = aristocrats_need@var:r_token } 
					multiply_variable = { aristocrats_need_cost@var:r_token = controller:price@var:r_token }
					add_to_variable = { aristocrats_needs_spending = aristocrats_need_cost@var:r_token }
				}

				set_variable = { aristocrats_col = aristocrats_needs_spending }
				divide_variable = { aristocrats_col = aristocrats_workforce }
				
				#Standard of Living
				set_temp_variable = { sol_temp = aristocrats_sol }
				multiply_temp_variable = { sol_temp = aristocrats_workforce }
				add_to_variable = { pops_sol = sol_temp }

				add_to_variable = { pops_needs_spending = aristocrats_needs_spending }
				set_variable = { aristocrats_spending = aristocrats_needs_spending }

				#Income Tax
				set_temp_variable = { avg_earnings_temp = aristocrats_earnings }
				divide_temp_variable = { avg_earnings_temp = aristocrats }
				set_variable = { aristocrats_income_tax_spending = aristocrats_earnings }
				if = {
					limit = {
						check_variable = { avg_earnings_temp < lower_earnings_limit }
					}
					multiply_variable = { aristocrats_income_tax_spending = lower_income_multiplier }

					set_temp_variable = { ic_temp = 1 }
					subtract_from_temp_variable = { ic_temp = lower_income_multiplier }
					multiply_variable = { capitalists_investment = ic_temp }
				}
				else_if = {
					limit = {
						check_variable = { avg_earnings_temp < upper_earnings_limit }
					}
					multiply_variable = { aristocrats_income_tax_spending = middle_income_multiplier }

					set_temp_variable = { ic_temp = 1 }
					subtract_from_temp_variable = { ic_temp = middle_income_multiplier }
					multiply_variable = { capitalists_investment = ic_temp }
				}
				else = {
					multiply_variable = { aristocrats_income_tax_spending = upper_income_multiplier }

					set_temp_variable = { ic_temp = 1 }
					subtract_from_temp_variable = { ic_temp = upper_income_multiplier }
					multiply_variable = { capitalists_investment = ic_temp }
				}
				add_to_variable = { aristocrats_spending = aristocrats_income_tax_spending }
				add_to_variable = { pops_income_tax_spending = aristocrats_income_tax_spending }
				
				#Corporate Tax
				set_variable = { aristocrats_corporate_tax_spending = aristocrats_dividends }
				multiply_variable = { aristocrats_corporate_tax_spending = corporate_tax_multiplier }
				
				set_temp_variable = { investment_reduction_temp = 0.25 } # What % of corp tax spending go into reducing investment
				add_to_temp_variable = { investment_reduction_temp = controller:modifier@aristocrats_investment_contribution_factor }
				if = {
					limit = {
						check_variable = { investment_reduction_temp < 0 }
					}
					set_temp_variable = { investment_reduction_temp = 0 }
				}
				if = { limit = { check_variable = { investment_reduction_temp > 1 } } set_variable = { investment_reduction_temp = 1 } }
				set_variable = { aristocrats_investment_tax = aristocrats_corporate_tax_spending }
				multiply_variable = { aristocrats_investment_tax = investment_reduction_temp }
				if = { limit = { check_variable = { aristocrats_investment_tax > aristocrats_investment } } set_variable = { aristocrats_investment_tax = aristocrats_investment }  }
				subtract_from_variable = { aristocrats_corporate_tax_spending = aristocrats_investment_tax }

				add_to_variable = { aristocrats_spending = aristocrats_corporate_tax_spending }
				add_to_variable = { pops_corporate_tax_spending = aristocrats_corporate_tax_spending }

				#Spending Target
				set_variable = { aristocrats_spending_target = aristocrats_earnings }
				subtract_from_variable = { aristocrats_spending_target = aristocrats_income_tax_spending }
				multiply_variable = { aristocrats_spending_target = cons_conf_temp }
				add_to_variable = { pops_spending_target = aristocrats_spending_target }

				#Sales Tax
				set_variable = { aristocrats_sales_tax_spending = aristocrats_needs_spending }
				multiply_variable = { aristocrats_sales_tax_spending = sales_tax_multiplier }
				add_to_variable = { aristocrats_spending = aristocrats_sales_tax_spending }
				add_to_variable = { pops_sales_tax_spending = aristocrats_sales_tax_spending }

				#Interest
				set_variable = { aristocrats_debt_interest_spending = aristocrats_debt }
				divide_variable = { aristocrats_debt_interest_spending = 12 }
				multiply_variable = { aristocrats_debt_interest_spending = controller:interest_rate }
				divide_variable = { aristocrats_debt_interest_spending = 100 }
				add_to_variable = { aristocrats_spending = aristocrats_debt_interest_spending }
				add_to_variable = { pops_debt_interest_spending = aristocrats_debt_interest_spending }
			}
			else = {
				set_variable = { aristocrats_spending = 0 }
				subtract_from_variable = { aristocrats_spending_target = 0 }
				set_variable = { aristocrats_income_tax_spending = 0 }
				set_variable = { aristocrats_sales_tax_spending = 0 }
				set_variable = { aristocrats_debt_interest_spending = 0 }
			}
		#
		# Capitalists
			if = {
				limit = {
					check_variable = { capitalists_workforce > 0 }
				}
				set_variable = { capitalists = capitalists_workforce }
				divide_variable = { capitalists = pops_workforce_percentage }
				set_variable = { capitalists_percentage = capitalists }
				divide_variable = { capitalists_percentage = pops }

				add_to_variable = { pops_employed = capitalists_employed }

				set_variable = { capitalists_unemployed = capitalists_workforce }
				subtract_from_variable = { capitalists_unemployed = capitalists_employed }

				# Earnings/Spending
				set_variable = { capitalists_earnings = capitalists_employed }
				multiply_variable = { capitalists_earnings = capitalists_wage }
				add_to_variable = { capitalists_earnings = capitalists_dividends }
				if = {
					limit = {
						check_variable = { capitalists_dividends > 0 }
					}
					set_variable = { capitalists_investment = controller:modifier@capitalists_investment_contribution_factor }
					if = {
						limit = {
							check_variable = { capitalists_investment < 0 }
						}
						set_variable = { capitalists_investment = 0 }
					}
					multiply_variable = { capitalists_investment = capitalists_dividends }
					subtract_from_variable = { capitalists_earnings = capitalists_investment }
				}
				else = {
					set_variable = { capitalists_dividends = 0 }
				}
				if = {
					limit = {
						check_variable = { capitalists_earnings < 0 }
					}
					set_variable = { capitalists_earnings = 0 }
				}
				add_to_variable = { pops_earnings = capitalists_earnings }

				set_variable = { capitalists_needs_spending = 0 }
				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					set_variable = { capitalists_need_cost@var:r_token = capitalists_need@var:r_token } 
					multiply_variable = { capitalists_need_cost@var:r_token = controller:price@var:r_token }
					add_to_variable = { capitalists_needs_spending = capitalists_need_cost@var:r_token }
				}

				set_variable = { capitalists_col = capitalists_needs_spending }
				divide_variable = { capitalists_col = capitalists_workforce }
				
				#Standard of Living
				set_temp_variable = { sol_temp = capitalists_sol }
				multiply_temp_variable = { sol_temp = capitalists_workforce }
				add_to_variable = { pops_sol = sol_temp }

				add_to_variable = { pops_needs_spending = capitalists_needs_spending }
				set_variable = { capitalists_spending = capitalists_needs_spending }

				#Income Tax
				set_temp_variable = { avg_earnings_temp = capitalists_earnings }
				divide_temp_variable = { avg_earnings_temp = capitalists }
				set_variable = { capitalists_income_tax_spending = capitalists_earnings }
				if = {
					limit = {
						check_variable = { avg_earnings_temp < lower_earnings_limit }
					}
					multiply_variable = { capitalists_income_tax_spending = lower_income_multiplier }

					set_temp_variable = { ic_temp = 1 }
					subtract_from_temp_variable = { ic_temp = lower_income_multiplier }
					multiply_variable = { capitalists_investment = ic_temp }
				}
				else_if = {
					limit = {
						check_variable = { avg_earnings_temp < upper_earnings_limit }
					}
					multiply_variable = { capitalists_income_tax_spending = middle_income_multiplier }

					set_temp_variable = { ic_temp = 1 }
					subtract_from_temp_variable = { ic_temp = middle_income_multiplier }
					multiply_variable = { capitalists_investment = ic_temp }
				}
				else = {
					multiply_variable = { capitalists_income_tax_spending = upper_income_multiplier }

					set_temp_variable = { ic_temp = 1 }
					subtract_from_temp_variable = { ic_temp = upper_income_multiplier }
					multiply_variable = { capitalists_investment = ic_temp }
				}
				
				add_to_variable = { capitalists_spending = capitalists_income_tax_spending }
				add_to_variable = { pops_income_tax_spending = capitalists_income_tax_spending }

				#Corporate Tax
				set_variable = { capitalists_corporate_tax_spending = capitalists_dividends }
				multiply_variable = { capitalists_corporate_tax_spending = corporate_tax_multiplier }
				
				set_temp_variable = { investment_reduction_temp = 0.25 } # What % of corp tax spending go into reducing investment
				add_to_temp_variable = { investment_reduction_temp = controller:modifier@capitalists_investment_contribution_factor }
				if = {
					limit = {
						check_variable = { investment_reduction_temp < 0 }
					}
					set_temp_variable = { investment_reduction_temp = 0 }
				}
				if = { limit = { check_variable = { investment_reduction_temp > 1 } } set_variable = { investment_reduction_temp = 1 } }
				set_variable = { capitalists_investment_tax = capitalists_corporate_tax_spending }
				multiply_variable = { capitalists_investment_tax = investment_reduction_temp }
				if = { limit = { check_variable = { capitalists_investment_tax > capitalists_investment } } set_variable = { capitalists_investment_tax = capitalists_investment }  }
				subtract_from_variable = { capitalists_corporate_tax_spending = capitalists_investment_tax }

				add_to_variable = { capitalists_spending = capitalists_corporate_tax_spending }
				add_to_variable = { pops_corporate_tax_spending = capitalists_corporate_tax_spending }

				#Spending Target
				set_variable = { capitalists_spending_target = capitalists_earnings }
				subtract_from_variable = { capitalists_spending_target = capitalists_income_tax_spending }
				multiply_variable = { capitalists_spending_target = cons_conf_temp }
				add_to_variable = { pops_spending_target = capitalists_spending_target }

				#Sales Tax
				set_variable = { capitalists_sales_tax_spending = capitalists_needs_spending }
				multiply_variable = { capitalists_sales_tax_spending = sales_tax_multiplier }
				add_to_variable = { capitalists_spending = capitalists_sales_tax_spending }
				add_to_variable = { pops_sales_tax_spending = capitalists_sales_tax_spending }

				#Interest
				set_variable = { capitalists_debt_interest_spending = capitalists_debt }
				divide_variable = { capitalists_debt_interest_spending = 12 }
				multiply_variable = { capitalists_debt_interest_spending = controller:interest_rate }
				divide_variable = { capitalists_debt_interest_spending = 100 }
				add_to_variable = { capitalists_spending = capitalists_debt_interest_spending }
				add_to_variable = { pops_debt_interest_spending = capitalists_debt_interest_spending }
			}
			else = {
				set_variable = { capitalists_spending = 0 }
				subtract_from_variable = { capitalists_spending_target = 0 }
				set_variable = { capitalists_income_tax_spending = 0 }
				set_variable = { capitalists_sales_tax_spending = 0 }
				set_variable = { capitalists_debt_interest_spending = 0 }
			}
		#
		# Bureaucrats
			if = {
				limit = {
					check_variable = { bureaucrats_workforce > 0 }
				}
				set_variable = { bureaucrats = bureaucrats_workforce }
				divide_variable = { bureaucrats = pops_workforce_percentage }
				set_variable = { bureaucrats_percentage = bureaucrats }
				divide_variable = { bureaucrats_percentage = pops }

				add_to_variable = { pops_employed = bureaucrats_employed }

				set_variable = { bureaucrats_unemployed = bureaucrats_workforce }
				subtract_from_variable = { bureaucrats_unemployed = bureaucrats_employed }

				# Earnings/Spending
				set_variable = { bureaucrats_earnings = bureaucrats_employed }
				multiply_variable = { bureaucrats_earnings = professionals_wage }
				add_to_variable = { pops_earnings = bureaucrats_earnings }

				set_variable = { bureaucrats_needs_spending = 0 }
				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					set_variable = { bureaucrats_need_cost@var:r_token = bureaucrats_need@var:r_token } 
					multiply_variable = { bureaucrats_need_cost@var:r_token = controller:price@var:r_token }
					add_to_variable = { bureaucrats_needs_spending = bureaucrats_need_cost@var:r_token }
				}

				set_variable = { bureaucrats_col = bureaucrats_needs_spending }
				divide_variable = { bureaucrats_col = bureaucrats_workforce }
				
				#Standard of Living
				set_temp_variable = { sol_temp = bureaucrats_sol }
				multiply_temp_variable = { sol_temp = bureaucrats_workforce }
				add_to_variable = { pops_sol = sol_temp }

				add_to_variable = { pops_needs_spending = bureaucrats_needs_spending }
				set_variable = { bureaucrats_spending = bureaucrats_needs_spending }

				#Income Tax
				set_temp_variable = { avg_earnings_temp = bureaucrats_earnings }
				divide_temp_variable = { avg_earnings_temp = bureaucrats }
				set_variable = { bureaucrats_income_tax_spending = bureaucrats_earnings }
				if = {
					limit = {
						check_variable = { avg_earnings_temp < lower_earnings_limit }
					}
					multiply_variable = { bureaucrats_income_tax_spending = lower_income_multiplier }
				}
				else_if = {
					limit = {
						check_variable = { avg_earnings_temp < upper_earnings_limit }
					}
					multiply_variable = { bureaucrats_income_tax_spending = middle_income_multiplier }
				}
				else = {
					multiply_variable = { bureaucrats_income_tax_spending = upper_income_multiplier }
				}
				add_to_variable = { bureaucrats_spending = bureaucrats_income_tax_spending }
				add_to_variable = { pops_income_tax_spending = bureaucrats_income_tax_spending }

				#Spending Target
				set_variable = { bureaucrats_spending_target = bureaucrats_earnings }
				subtract_from_variable = { bureaucrats_spending_target = bureaucrats_income_tax_spending }
				multiply_variable = { bureaucrats_spending_target = cons_conf_temp }
				add_to_variable = { pops_spending_target = bureaucrats_spending_target }

				#Sales Tax
				set_variable = { bureaucrats_sales_tax_spending = bureaucrats_needs_spending }
				multiply_variable = { bureaucrats_sales_tax_spending = sales_tax_multiplier }
				add_to_variable = { bureaucrats_spending = bureaucrats_sales_tax_spending }
				add_to_variable = { pops_sales_tax_spending = bureaucrats_sales_tax_spending }

				#Interest
				set_variable = { bureaucrats_debt_interest_spending = bureaucrats_debt }
				divide_variable = { bureaucrats_debt_interest_spending = 12 }
				multiply_variable = { bureaucrats_debt_interest_spending = controller:interest_rate }
				divide_variable = { bureaucrats_debt_interest_spending = 100 }
				add_to_variable = { bureaucrats_spending = bureaucrats_debt_interest_spending }
				add_to_variable = { pops_debt_interest_spending = bureaucrats_debt_interest_spending }
			}
			else = {
				set_variable = { bureaucrats_spending = 0 }
				subtract_from_variable = { bureaucrats_spending_target = 0 }
				set_variable = { bureaucrats_income_tax_spending = 0 }
				set_variable = { bureaucrats_sales_tax_spending = 0 }
				set_variable = { bureaucrats_debt_interest_spending = 0 }
			}
		#
		# Soldiers
			if = {
				limit = {
					check_variable = { soldiers_workforce > 0 }
				}
				set_variable = { soldiers = soldiers_workforce }
				divide_variable = { soldiers = pops_workforce_percentage }
				set_variable = { soldiers_percentage = soldiers }
				divide_variable = { soldiers_percentage = pops }

				add_to_variable = { pops_employed = soldiers_employed }

				set_variable = { soldiers_unemployed = soldiers_workforce }
				subtract_from_variable = { soldiers_unemployed = soldiers_employed }

				# Earnings/Spending
				set_variable = { soldiers_earnings = soldiers_employed }
				multiply_variable = { soldiers_earnings = workers_wage }
				add_to_variable = { pops_earnings = soldiers_earnings }

				set_variable = { soldiers_needs_spending = 0 }
				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					set_variable = { soldiers_need_cost@var:r_token = soldiers_need@var:r_token } 
					multiply_variable = { soldiers_need_cost@var:r_token = controller:price@var:r_token }
					add_to_variable = { soldiers_needs_spending = soldiers_need_cost@var:r_token }
				}

				set_variable = { soldiers_col = soldiers_needs_spending }
				divide_variable = { soldiers_col = soldiers_workforce }
				
				#Standard of Living
				set_temp_variable = { sol_temp = soldiers_sol }
				multiply_temp_variable = { sol_temp = soldiers_workforce }
				add_to_variable = { pops_sol = sol_temp }

				add_to_variable = { pops_needs_spending = soldiers_needs_spending }
				set_variable = { soldiers_spending = soldiers_needs_spending }

				#Income Tax
				set_temp_variable = { avg_earnings_temp = soldiers_earnings }
				divide_temp_variable = { avg_earnings_temp = soldiers }
				set_variable = { soldiers_income_tax_spending = soldiers_earnings }
				if = {
					limit = {
						check_variable = { avg_earnings_temp < lower_earnings_limit }
					}
					multiply_variable = { soldiers_income_tax_spending = lower_income_multiplier }
				}
				else_if = {
					limit = {
						check_variable = { avg_earnings_temp < upper_earnings_limit }
					}
					multiply_variable = { soldiers_income_tax_spending = middle_income_multiplier }
				}
				else = {
					multiply_variable = { soldiers_income_tax_spending = upper_income_multiplier }
				}
				add_to_variable = { soldiers_spending = soldiers_income_tax_spending }
				add_to_variable = { pops_income_tax_spending = soldiers_income_tax_spending }

				#Spending Target
				set_variable = { soldiers_spending_target = soldiers_earnings }
				subtract_from_variable = { soldiers_spending_target = soldiers_income_tax_spending }
				multiply_variable = { soldiers_spending_target = cons_conf_temp }
				add_to_variable = { pops_spending_target = soldiers_spending_target }

				#Sales Tax
				set_variable = { soldiers_sales_tax_spending = soldiers_needs_spending }
				multiply_variable = { soldiers_sales_tax_spending = sales_tax_multiplier }
				add_to_variable = { soldiers_spending = soldiers_sales_tax_spending }
				add_to_variable = { pops_sales_tax_spending = soldiers_sales_tax_spending }

				#Interest
				set_variable = { soldiers_debt_interest_spending = soldiers_debt }
				divide_variable = { soldiers_debt_interest_spending = 12 }
				multiply_variable = { soldiers_debt_interest_spending = controller:interest_rate }
				divide_variable = { soldiers_debt_interest_spending = 100 }
				add_to_variable = { soldiers_spending = soldiers_debt_interest_spending }
				add_to_variable = { pops_debt_interest_spending = soldiers_debt_interest_spending }
			}
			else = {
				set_variable = { soldiers_spending = 0 }
				subtract_from_variable = { soldiers_spending_target = 0 }
				set_variable = { soldiers_income_tax_spending = 0 }
				set_variable = { soldiers_sales_tax_spending = 0 }
				set_variable = { soldiers_debt_interest_spending = 0 }
			}
		#

		clamp_variable = { var = pops_employed min = 0 max = pops_workforce }

		set_variable = { pops_employed_percentage = pops_employed }
		divide_variable = { pops_employed_percentage = pops_workforce }

		set_variable = { pops_unemployed = pops_workforce }
		subtract_from_variable = { pops_unemployed = pops_employed }

		set_variable = { pops_unemployed_percentage = pops_unemployed }
		divide_variable = { pops_unemployed_percentage = pops_workforce }
		
		set_variable = { excess_workforce = pops_workforce }
		subtract_from_variable = { excess_workforce = non_subs_jobs_buildings }

		set_variable = { pops_spending = pops_needs_spending }
		add_to_variable = { pops_spending = pops_income_tax_spending }
		add_to_variable = { pops_spending = pops_sales_tax_spending }
		add_to_variable = { pops_spending = pops_corporate_tax_spending }
		add_to_variable = { pops_spending = pops_debt_interest_spending }

		divide_variable = { pops_sol = pops_workforce }
	}

	pops_workforce_update = {
		set_variable = { slaves_employed = 0 }
		set_variable = { peasants_employed = peasants_workforce }
		set_variable = { laborers_employed = 0 }
		set_variable = { workers_employed = 0 }
		set_variable = { professionals_employed = 0 }
		set_variable = { specialists_employed = 0 }
		set_variable = { aristocrats_employed = 0 }
		set_variable = { capitalists_employed = 0 }
		set_variable = { bureaucrats_employed = 0 }
		set_variable = { soldiers_employed = 0 }

		set_variable = { slaves_jobs = 0 }
		set_variable = { peasants_jobs = peasants_workforce }
		set_variable = { laborers_jobs = 0 }
		set_variable = { workers_jobs = 0 }
		set_variable = { professionals_jobs = 0 }
		set_variable = { specialists_jobs = 0 }
		set_variable = { bureaucrats_jobs = 0 }
		set_variable = { soldiers_jobs = 0 }

		set_variable = { slaves_jobs_available = 0 }
		set_variable = { peasants_jobs_available = 0 }
		set_variable = { laborers_jobs_available = 0 }
		set_variable = { workers_jobs_available = 0 }
		set_variable = { professionals_jobs_available = 0 }
		set_variable = { specialists_jobs_available = 0 }
		set_variable = { bureaucrats_jobs_available = 0 }
		set_variable = { soldiers_jobs_available = 0 }

		set_variable = { capitalists_jobs = 0 }
		set_variable = { aristocrats_jobs = 0 }
		set_variable = { capitalists_dividends = 0 }
		set_variable = { aristocrats_dividends = 0 }

		set_variable = { total_industry_size = 0 }
		for_each_loop = {
			array = buildings
			value = pops_bld_token
			add_to_variable = { total_industry_size = size@var:pops_bld_token }
		}
		add_to_variable = { total_industry_size = size@token:railway }
		add_to_variable = { total_industry_size = size@token:port }
		add_to_variable = { total_industry_size = size@token:industrial_complex }
		add_to_variable = { total_industry_size = size@token:arms_factory }
		add_to_variable = { total_industry_size = size@token:dockyard }

		#Industries
		for_each_loop = {
			array = industries
			value = pops_bld_token

			add_to_variable = { laborers_employed = laborers_employed@var:pops_bld_token }
			add_to_variable = { workers_employed = workers_employed@var:pops_bld_token }
			add_to_variable = { professionals_employed = professionals_employed@var:pops_bld_token }
			add_to_variable = { specialists_employed = specialists_employed@var:pops_bld_token }

			add_to_variable = { laborers_jobs = laborers_jobs@var:pops_bld_token }
			add_to_variable = { workers_jobs = workers_jobs@var:pops_bld_token }
			add_to_variable = { professionals_jobs = professionals_jobs@var:pops_bld_token }
			add_to_variable = { specialists_jobs = specialists_jobs@var:pops_bld_token }

			if = {
				limit = {
					check_variable = { jobs@var:pops_bld_token > 10000 }
				}
				set_temp_variable = { jobs_available_temp = peasants_jobs@var:pops_bld_token }
				divide_temp_variable = { jobs_available_temp = 100 }
				multiply_temp_variable = { jobs_available_temp = employment_target@var:pops_bld_token }
				add_to_variable = { peasants_jobs_available = jobs_available_temp }

				set_temp_variable = { jobs_available_temp = laborers_jobs@var:pops_bld_token }
				divide_temp_variable = { jobs_available_temp = 100 }
				multiply_temp_variable = { jobs_available_temp = employment_target@var:pops_bld_token }
				add_to_variable = { laborers_jobs_available = jobs_available_temp }
				
				set_temp_variable = { jobs_available_temp = workers_jobs@var:pops_bld_token }
				divide_temp_variable = { jobs_available_temp = 100 }
				multiply_temp_variable = { jobs_available_temp = employment_target@var:pops_bld_token }
				add_to_variable = { workers_jobs_available = jobs_available_temp }
				
				set_temp_variable = { jobs_available_temp = professionals_jobs@var:pops_bld_token }
				divide_temp_variable = { jobs_available_temp = 100 }
				multiply_temp_variable = { jobs_available_temp = employment_target@var:pops_bld_token }
				add_to_variable = { professionals_jobs_available = jobs_available_temp }
				
				set_temp_variable = { jobs_available_temp = specialists_jobs@var:pops_bld_token }
				divide_temp_variable = { jobs_available_temp = 100 }
				multiply_temp_variable = { jobs_available_temp = employment_target@var:pops_bld_token }
				add_to_variable = { specialists_jobs_available = jobs_available_temp }
			}
			else = {
				set_temp_variable = { jobs_available_temp = peasants_jobs@var:pops_bld_token }
				multiply_temp_variable = { jobs_available_temp = employment_target@var:pops_bld_token }
				divide_temp_variable = { jobs_available_temp = 100 }
				add_to_variable = { peasants_jobs_available = jobs_available_temp }

				set_temp_variable = { jobs_available_temp = laborers_jobs@var:pops_bld_token }
				multiply_temp_variable = { jobs_available_temp = employment_target@var:pops_bld_token }
				divide_temp_variable = { jobs_available_temp = 100 }
				add_to_variable = { laborers_jobs_available = jobs_available_temp }
				
				set_temp_variable = { jobs_available_temp = workers_jobs@var:pops_bld_token }
				multiply_temp_variable = { jobs_available_temp = employment_target@var:pops_bld_token }
				divide_temp_variable = { jobs_available_temp = 100 }
				add_to_variable = { workers_jobs_available = jobs_available_temp }
				
				set_temp_variable = { jobs_available_temp = professionals_jobs@var:pops_bld_token }
				multiply_temp_variable = { jobs_available_temp = employment_target@var:pops_bld_token }
				divide_temp_variable = { jobs_available_temp = 100 }
				add_to_variable = { professionals_jobs_available = jobs_available_temp }
				
				set_temp_variable = { jobs_available_temp = specialists_jobs@var:pops_bld_token }
				multiply_temp_variable = { jobs_available_temp = employment_target@var:pops_bld_token }
				divide_temp_variable = { jobs_available_temp = 100 }
				add_to_variable = { specialists_jobs_available = jobs_available_temp }
			}
			
			set_temp_variable = { jobs_temp = owner_jobs@var:pops_bld_token }
			multiply_temp_variable = { jobs_temp = employment_target@var:pops_bld_token }
			divide_temp_variable = { jobs_temp = 100 }
			if = {
				limit = {
					is_in_array = { buildings = pops_bld_token }
				}
				add_to_variable = { capitalists_jobs = jobs_temp }
				add_to_variable = { capitalists_dividends = dividends@var:pops_bld_token }
			}
			else_if = {
				limit = {
					check_variable = { pops_bld_token = token:railway }
				}
				add_to_variable = { capitalists_jobs = jobs_temp }
				add_to_variable = { capitalists_dividends = dividends@var:pops_bld_token }
			}
			else = {
				add_to_variable = { aristocrats_jobs = jobs_temp }
				add_to_variable = { aristocrats_dividends = dividends@var:pops_bld_token }
			}
		}

		if = {
			limit = { NOT = { has_variable = capitalists_workforce } }
			set_variable = { capitalists_workforce = 0 }
		}
		if = {
			limit = { NOT = { has_variable = aristocrats_workforce } }
			set_variable = { aristocrats_workforce = 0 }
		}

		set_variable = { capitalists_employed = capitalists_jobs }
		set_variable = { aristocrats_employed = aristocrats_jobs }
		clamp_variable = { var = capitalists_employed max = capitalists_workforce }
		clamp_variable = { var = aristocrats_employed max = aristocrats_workforce }

		if = {
			limit = {
				check_variable = { peasants_workforce > peasants_jobs_available }
			}
			set_variable = { peasants_job_fulfillment = 100 }
		}
		else_if = {
			limit = {
				check_variable = { peasants_jobs_available > 10000 }
			}
			set_temp_variable = { peasant_j_temp = peasants_jobs_available }
			divide_temp_variable = { peasant_j_temp = 100 }

			set_variable = { peasants_job_fulfillment = peasants_workforce }
			divide_variable = { peasants_job_fulfillment = peasant_j_temp }
		}
		else_if = {
			limit = {
				check_variable = { peasants_jobs_available > 0 }
			}
			set_variable = { peasants_job_fulfillment = peasants_workforce }
			multiply_variable = { peasants_job_fulfillment = 100 }
			divide_variable = { peasants_job_fulfillment = peasants_jobs_available }
		}
		else = {
			set_variable = { peasants_job_fulfillment = 0 }
		}

		if = {
			limit = {
				check_variable = { laborers_workforce > laborers_jobs_available }
			}
			set_variable = { laborers_job_fulfillment = 100 }
		}
		else_if = {
			limit = {
				check_variable = { laborers_jobs_available > 10000 }
			}
			set_temp_variable = { peasant_j_temp = laborers_jobs_available }
			divide_temp_variable = { peasant_j_temp = 100 }

			set_variable = { laborers_job_fulfillment = laborers_workforce }
			divide_variable = { laborers_job_fulfillment = peasant_j_temp }
		}
		else_if = {
			limit = {
				check_variable = { laborers_jobs_available > 0 }
			}
			set_variable = { laborers_job_fulfillment = laborers_workforce }
			multiply_variable = { laborers_job_fulfillment = 100 }
			divide_variable = { laborers_job_fulfillment = laborers_jobs_available }
		}
		else = {
			set_variable = { laborers_job_fulfillment = 0 }
		}

		if = {
			limit = {
				check_variable = { workers_workforce > workers_jobs_available }
			}
			set_variable = { workers_job_fulfillment = 100 }
		}
		else_if = {
			limit = {
				check_variable = { workers_jobs_available > 10000 }
			}
			set_temp_variable = { peasant_j_temp = workers_jobs_available }
			divide_temp_variable = { peasant_j_temp = 100 }

			set_variable = { workers_job_fulfillment = workers_workforce }
			divide_variable = { workers_job_fulfillment = peasant_j_temp }
		}
		else_if = {
			limit = {
				check_variable = { workers_jobs_available > 0 }
			}
			set_variable = { workers_job_fulfillment = workers_workforce }
			multiply_variable = { workers_job_fulfillment = 100 }
			divide_variable = { workers_job_fulfillment = workers_jobs_available }
		}
		else = {
			set_variable = { workers_job_fulfillment = 0 }
		}

		if = {
			limit = {
				check_variable = { professionals_workforce > professionals_jobs_available }
			}
			set_variable = { professionals_job_fulfillment = 100 }
		}
		else_if = {
			limit = {
				check_variable = { professionals_jobs_available > 10000 }
			}
			set_temp_variable = { peasant_j_temp = professionals_jobs_available }
			divide_temp_variable = { peasant_j_temp = 100 }

			set_variable = { professionals_job_fulfillment = professionals_workforce }
			divide_variable = { professionals_job_fulfillment = peasant_j_temp }
		}
		else_if = {
			limit = {
				check_variable = { professionals_jobs_available > 0 }
			}
			set_variable = { professionals_job_fulfillment = professionals_workforce }
			multiply_variable = { professionals_job_fulfillment = 100 }
			divide_variable = { professionals_job_fulfillment = professionals_jobs_available }
		}
		else = {
			set_variable = { professionals_job_fulfillment = 0 }
		}

		if = {
			limit = {
				check_variable = { specialists_workforce > specialists_jobs_available }
			}
			set_variable = { specialists_job_fulfillment = 100 }
		}
		else_if = {
			limit = {
				check_variable = { specialists_jobs_available > 10000 }
			}
			set_temp_variable = { peasant_j_temp = specialists_jobs_available }
			divide_temp_variable = { peasant_j_temp = 100 }

			set_variable = { specialists_job_fulfillment = specialists_workforce }
			divide_variable = { specialists_job_fulfillment = peasant_j_temp }
		}
		else_if = {
			limit = {
				check_variable = { specialists_jobs_available > 0 }
			}
			set_variable = { specialists_job_fulfillment = specialists_workforce }
			multiply_variable = { specialists_job_fulfillment = 100 }
			divide_variable = { specialists_job_fulfillment = specialists_jobs_available }
		}
		else = {
			set_variable = { specialists_job_fulfillment = 0 }
		}

		set_variable = { peasants_workforce_balance = peasants_workforce }
		# subtract_from_variable = { peasants_workforce_balance = peasants_jobs_available }
		set_variable = { laborers_workforce_balance = laborers_workforce }
		subtract_from_variable = { laborers_workforce_balance = laborers_jobs_available }
		set_variable = { workers_workforce_balance = workers_workforce }
		subtract_from_variable = { workers_workforce_balance = workers_jobs_available }
		set_variable = { professionals_workforce_balance = professionals_workforce }
		subtract_from_variable = { professionals_workforce_balance = professionals_jobs_available }
		set_variable = { specialists_workforce_balance = specialists_workforce }
		subtract_from_variable = { specialists_workforce_balance = specialists_jobs_available }
		
		set_variable = { jobs_available = laborers_jobs_available }
		add_to_variable = { jobs_available = workers_jobs_available }
		add_to_variable = { jobs_available = professionals_jobs_available }
		add_to_variable = { jobs_available = specialists_jobs_available }
		add_to_variable = { jobs_available = capitalists_jobs }
		add_to_variable = { jobs_available = aristocrats_jobs }
		
		set_variable = { jobs = slaves_jobs }
		add_to_variable = { jobs = laborers_jobs }
		add_to_variable = { jobs = workers_jobs }
		add_to_variable = { jobs = professionals_jobs }
		add_to_variable = { jobs = specialists_jobs }
		add_to_variable = { jobs = bureaucrats_jobs }
		add_to_variable = { jobs = soldiers_jobs }
		add_to_variable = { jobs = capitalists_jobs }
		add_to_variable = { jobs = aristocrats_jobs }

		set_variable = { available_workforce = pops_workforce }
		subtract_from_variable = { available_workforce = jobs_available }
		
		set_variable = { net_workforce = pops_workforce }
		add_to_variable = { net_workforce = peasants_jobs }
		subtract_from_variable = { net_workforce = jobs }
		
		
		set_variable = { employed = slaves_employed }
		add_to_variable = { employed = laborers_employed }
		add_to_variable = { employed = workers_employed }
		add_to_variable = { employed = professionals_employed }
		add_to_variable = { employed = specialists_employed }
		add_to_variable = { employed = bureaucrats_employed }
		add_to_variable = { employed = soldiers_employed }
		add_to_variable = { employed = capitalists_employed }
		add_to_variable = { employed = aristocrats_employed }
	}

	calculate_pop_needs = {
		# Calculates Pops Needs
		# NOTE: This does need magnitude_temp
		set_temp_variable = { magnitude_temp = 1 }

		for_each_loop = {
			array = global.pop_needs_resources
			value = r_token
			set_variable = { pops_need@var:r_token = 0 } 
		}

		#Slaves
			if = {
				limit = {
					check_variable = { slaves_workforce > 0 }
				}

				set_temp_variable = { sol_temp = slaves_sol }
				set_temp_variable = { pop_temp = slaves }
				get_pop_needs = yes

				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					set_variable = { slaves_need@var:r_token = need_variable@var:r_token } 
					add_to_variable = { pops_need@var:r_token = need_variable@var:r_token } 
				}
			}
			else = {
				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					clear_variable = slaves_need@var:r_token
				}
			}
		#
		#Peasants
			if = {
				limit = {
					check_variable = { peasants_workforce > 0 }
				}

				set_temp_variable = { sol_temp = peasants_sol }
				set_temp_variable = { pop_temp = peasants }
				get_pop_needs = yes

				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					set_variable = { peasants_need@var:r_token = need_variable@var:r_token } 
					add_to_variable = { pops_need@var:r_token = need_variable@var:r_token } 
				}
			}
			else = {
				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					clear_variable = peasants_need@var:r_token
				}
			}
		#
		#Laborers
			if = {
				limit = {
					check_variable = { laborers_workforce > 0 }
				}

				set_temp_variable = { sol_temp = laborers_sol }
				set_temp_variable = { pop_temp = laborers }
				get_pop_needs = yes

				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					set_variable = { laborers_need@var:r_token = need_variable@var:r_token } 
					add_to_variable = { pops_need@var:r_token = need_variable@var:r_token } 
				}
			}
			else = {
				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					clear_variable = laborers_need@var:r_token
				}
			}
		#
		#Workers
			if = {
				limit = {
					check_variable = { workers_workforce > 0 }
				}

				set_temp_variable = { sol_temp = workers_sol }
				set_temp_variable = { pop_temp = workers }
				get_pop_needs = yes

				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					set_variable = { workers_need@var:r_token = need_variable@var:r_token } 
					add_to_variable = { pops_need@var:r_token = need_variable@var:r_token } 
				}
			}
			else = {
				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					clear_variable = workers_need@var:r_token
				}
			}
		#
		#Professionals
			if = {
				limit = {
					check_variable = { professionals_workforce > 0 }
				}

				set_temp_variable = { sol_temp = professionals_sol }
				set_temp_variable = { pop_temp = professionals }
				get_pop_needs = yes

				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					set_variable = { professionals_need@var:r_token = need_variable@var:r_token } 
					add_to_variable = { pops_need@var:r_token = need_variable@var:r_token } 
				}
			}
			else = {
				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					clear_variable = professionals_need@var:r_token
				}
			}
		#
		#Specialists
			if = {
				limit = {
					check_variable = { specialists_workforce > 0 }
				}

				set_temp_variable = { sol_temp = specialists_sol }
				set_temp_variable = { pop_temp = specialists }
				get_pop_needs = yes

				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					set_variable = { specialists_need@var:r_token = need_variable@var:r_token } 
					add_to_variable = { pops_need@var:r_token = need_variable@var:r_token } 
				}
			}
			else = {
				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					clear_variable = specialists_need@var:r_token
				}
			}
		#
		#Capitalists
			if = {
				limit = {
					check_variable = { capitalists_workforce > 0 }
				}

				set_temp_variable = { sol_temp = capitalists_sol }
				set_temp_variable = { pop_temp = capitalists }
				get_pop_needs = yes

				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					set_variable = { capitalists_need@var:r_token = need_variable@var:r_token } 
					add_to_variable = { pops_need@var:r_token = need_variable@var:r_token } 
				}
			}
			else = {
				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					clear_variable = capitalists_need@var:r_token
				}
			}
		#
		#Aristocrats
			if = {
				limit = {
					check_variable = { aristocrats_workforce > 0 }
				}

				set_temp_variable = { sol_temp = aristocrats_sol }
				set_temp_variable = { pop_temp = aristocrats }
				get_pop_needs = yes

				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					set_variable = { aristocrats_need@var:r_token = need_variable@var:r_token } 
					add_to_variable = { pops_need@var:r_token = need_variable@var:r_token } 
				}
			}
			else = {
				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					clear_variable = aristocrats_need@var:r_token
				}
			}
		#
		#Bureaucrats
			if = {
				limit = {
					check_variable = { bureaucrats_workforce > 0 }
				}

				set_temp_variable = { sol_temp = bureaucrats_sol }
				set_temp_variable = { pop_temp = bureaucrats }
				get_pop_needs = yes

				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					set_variable = { bureaucrats_need@var:r_token = need_variable@var:r_token } 
					add_to_variable = { pops_need@var:r_token = need_variable@var:r_token } 
				}
			}
			else = {
				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					clear_variable = bureaucrats_need@var:r_token
				}
			}
		#
		#Soldiers
			if = {
				limit = {
					check_variable = { soldiers_workforce > 0 }
				}

				set_temp_variable = { sol_temp = soldiers_sol }
				set_temp_variable = { pop_temp = soldiers }
				get_pop_needs = yes

				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					set_variable = { soldiers_need@var:r_token = need_variable@var:r_token } 
					add_to_variable = { pops_need@var:r_token = need_variable@var:r_token } 
				}
			}
			else = {
				for_each_loop = {
					array = global.pop_needs_resources
					value = r_token
					clear_variable = soldiers_need@var:r_token
				}
			}
		#
	}
	get_pop_needs = {
		#Input:
		#	sol_temp
		#   pop_temp
		#	magnitude_temp
		#	state_electrification - is a variable statewide

		#Note: All these values should be taken as 1 resource every 1K WORKFORCE pops
		#Output:
		# need_variable@token:[good]

		for_each_loop = {
			array = global.pop_needs_resources
			value = pop_r_token
			set_variable = { need_variable@var:pop_r_token = 0 }
		}

		for_each_loop = {
			array = global.pop_needs_resources
			value = pop_r_token
			if = {
				limit = {
					NOT = { check_variable = { global.pops_spending_tech@var:pop_r_token = 0 } }
					set_temp_variable = { tech_temp = global.pops_spending_tech@var:pop_r_token }
					owner = { NOT = { has_tech = var:tech_temp } }
				}
				set_temp_variable = { replace_token = global.pops_spending_replacement@var:pop_r_token }

				set_temp_variable = { replace_amount = global.pops_spending_need_at_sol@var:pop_r_token^sol_temp }
				multiply_temp_variable = { replace_amount = global.base_price@var:pop_r_token }
				divide_temp_variable = { replace_amount = global.base_price@var:replace_token }
				#log = "Replacing [?global.pops_spending_need_at_sol@var:pop_r_token^sol_temp] [?pop_r_token.GetTokenLocalizedKey] with [?replace_amount] [?replace_token.GetTokenLocalizedKey]"
				add_to_variable = { need_variable@var:replace_token = replace_amount }
			}
			else_if = {
				limit = {
					check_variable = { global.pops_spending_electrification@var:pop_r_token = 1 }
					check_variable = { state_electrification < 100 }
				}
				set_temp_variable = { replace_token = global.pops_spending_replacement@var:pop_r_token }

				set_temp_variable = { removal_amount = 100 }
				subtract_from_temp_variable = { removal_amount = state_electrification }
				multiply_temp_variable = { removal_amount = global.pops_spending_need_at_sol@var:pop_r_token^sol_temp }
				divide_temp_variable = { removal_amount = 100 }

				set_temp_variable = { replace_amount = removal_amount }
				multiply_temp_variable = { replace_amount = global.base_price@var:pop_r_token }
				divide_temp_variable = { replace_amount = global.base_price@var:replace_token }

				#log = "Replacing [?removal_amount] [?pop_r_token.GetTokenLocalizedKey] with [?replace_amount] [?replace_token.GetTokenLocalizedKey] (Electrification: [?state_electrification|1]%)"
				add_to_variable = { need_variable@var:pop_r_token = global.pops_spending_need_at_sol@var:pop_r_token^sol_temp }
				subtract_from_variable = { need_variable@var:pop_r_token = removal_amount }
				add_to_variable = { need_variable@var:replace_token = replace_amount }
			}
			else_if = {
				limit = {
					check_variable = { global.pops_spending_electrification_reverse@var:pop_r_token = 1 }
					check_variable = { state_electrification > 0 }
				}
				set_temp_variable = { replace_token = global.pops_spending_replacement@var:pop_r_token }

				set_temp_variable = { removal_amount = state_electrification }
				multiply_temp_variable = { removal_amount = global.pops_spending_need_at_sol@var:pop_r_token^sol_temp }
				divide_temp_variable = { removal_amount = 100 }

				set_temp_variable = { replace_amount = removal_amount }
				multiply_temp_variable = { replace_amount = global.base_price@var:pop_r_token }
				divide_temp_variable = { replace_amount = global.base_price@var:replace_token }

				#log = "Replacing [?removal_amount] [?pop_r_token.GetTokenLocalizedKey] with [?replace_amount] [?replace_token.GetTokenLocalizedKey] (Electrification: [?state_electrification|1]%)"
				add_to_variable = { need_variable@var:pop_r_token = global.pops_spending_need_at_sol@var:pop_r_token^sol_temp }
				subtract_from_variable = { need_variable@var:pop_r_token = removal_amount }
				add_to_variable = { need_variable@var:replace_token = replace_amount }
			}
			else = {
				add_to_variable = { need_variable@var:pop_r_token = global.pops_spending_need_at_sol@var:pop_r_token^sol_temp }
			}
		}
		
		divide_temp_variable = { pop_temp = magnitude_temp }
		for_each_loop = {
			array = global.pop_needs_resources
			value = pop_r_token
			
			multiply_variable = { need_variable@var:pop_r_token = pop_temp }
			#log = "[?pop_r_token.GetTokenLocalizedKey]: [?need_variable@var:pop_r_token]"
		}
	}

	pops_balance = {
		# Balance pops according to jobs available
		# Uses pops_convert to do most of the heavy lifting
		# Sets workforce amount depending on ratio of unemployed to non-subsistence jobs		
		# Peasants & Subsistence Farms have to be handled seperately

		set_temp_variable = { laborers_change = laborers_workforce_balance }
		multiply_temp_variable = { laborers_change = -1 }
		
		set_temp_variable = { workers_change = workers_workforce_balance }
		multiply_temp_variable = { workers_change = -1 }

		set_temp_variable = { professionals_change = professionals_workforce_balance }
		multiply_temp_variable = { professionals_change = -1 }
		
		set_temp_variable = { specialists_change = specialists_workforce_balance }
		multiply_temp_variable = { specialists_change = -1 }

		set_temp_variable = { aristocrats_change = aristocrats_jobs }
		subtract_from_temp_variable = { aristocrats_change = aristocrats_workforce }
		
		set_temp_variable = { capitalists_change = capitalists_jobs }
		subtract_from_temp_variable = { capitalists_change = capitalists_workforce }

		pops_convert = yes
	}
	pops_convert = {
		# Changes pops from from one pop type to another. Defaults to workforce amounts. Accounts for qualifications.
		# Inputs:
		# slaves_change - Net Change. Positive is adding, Negative is removing
		# peasants_change
		# laborers_change
		# workers_change
		# professionals_change
		# specialists_change
		# aristocrats_change
		# capitalists_change
		# bureaucrats_change
		# soldiers_change
		#
		# Outputs:
		# percent_done - What % got converted

		## Making sure negatives don't go beyond actual amount ##
			if = {	
				limit = {
					check_variable = { slaves_change < 0 }
					set_temp_variable = { slaves_temp = slaves_change }
					multiply_temp_variable = { slaves_temp = -1 }
					check_variable = { slaves_temp > slaves_workforce }
				}
				set_temp_variable = { slaves_change = slaves_workforce }
				multiply_temp_variable = { slaves_change = -1 }
			}
			if = {	
				limit = {
					check_variable = { peasants_change < 0 }
					set_temp_variable = { peasants_temp = peasants_change }
					multiply_temp_variable = { peasants_temp = -1 }
					check_variable = { peasants_temp > peasants_workforce }
				}
				set_temp_variable = { peasants_change = peasants_workforce }
				multiply_temp_variable = { peasants_change = -1 }
			}
			if = {	
				limit = {
					check_variable = { laborers_change < 0 }
					set_temp_variable = { laborers_temp = laborers_change }
					multiply_temp_variable = { laborers_temp = -1 }
					check_variable = { laborers_temp > laborers_workforce }
				}
				set_temp_variable = { laborers_change = laborers_workforce }
				multiply_temp_variable = { laborers_change = -1 }
			}
			if = {	
				limit = {
					check_variable = { workers_change < 0 }
					set_temp_variable = { workers_temp = workers_change }
					multiply_temp_variable = { workers_temp = -1 }
					check_variable = { workers_temp > workers_workforce }
				}
				set_temp_variable = { workers_change = workers_workforce }
				multiply_temp_variable = { workers_change = -1 }
			}
			if = {	
				limit = {
					check_variable = { professionals_change < 0 }
					set_temp_variable = { professionals_temp = professionals_change }
					multiply_temp_variable = { professionals_temp = -1 }
					check_variable = { professionals_temp > professionals_workforce }
				}
				set_temp_variable = { professionals_change = professionals_workforce }
				multiply_temp_variable = { professionals_change = -1 }
			}
			if = {	
				limit = {
					check_variable = { specialists_change < 0 }
					set_temp_variable = { specialists_temp = specialists_change }
					multiply_temp_variable = { specialists_temp = -1 }
					check_variable = { specialists_temp > specialists_workforce }
				}
				set_temp_variable = { specialists_change = specialists_workforce }
				multiply_temp_variable = { specialists_change = -1 }
			}
			if = {	
				limit = {
					check_variable = { aristocrats_change < 0 }
					set_temp_variable = { aristocrats_temp = aristocrats_change }
					multiply_temp_variable = { aristocrats_temp = -1 }
					check_variable = { aristocrats_temp > aristocrats_workforce }
				}
				set_temp_variable = { aristocrats_change = aristocrats_workforce }
				multiply_temp_variable = { aristocrats_change = -1 }
			}
			if = {	
				limit = {
					check_variable = { capitalists_change < 0 }
					set_temp_variable = { capitalists_temp = capitalists_change }
					multiply_temp_variable = { capitalists_temp = -1 }
					check_variable = { capitalists_temp > capitalists_workforce }
				}
				set_temp_variable = { capitalists_change = capitalists_workforce }
				multiply_temp_variable = { capitalists_change = -1 }
			}
			if = {	
				limit = {
					check_variable = { bureaucrats_change < 0 }
					set_temp_variable = { bureaucrats_temp = bureaucrats_change }
					multiply_temp_variable = { bureaucrats_temp = -1 }
					check_variable = { bureaucrats_temp > bureaucrats_workforce }
				}
				set_temp_variable = { bureaucrats_change = bureaucrats_workforce }
				multiply_temp_variable = { bureaucrats_change = -1 }
			}
			if = {	
				limit = {
					check_variable = { soldiers_change < 0 }
					set_temp_variable = { soldiers_temp = soldiers_change }
					multiply_temp_variable = { soldiers_temp = -1 }
					check_variable = { soldiers_temp > soldiers_workforce }
				}
				set_temp_variable = { soldiers_change = soldiers_workforce }
				multiply_temp_variable = { soldiers_change = -1 }
			}
		#

		## Add up positive & negative change totals and see if they match ##
			set_temp_variable = { percent_done = 1 }
			set_temp_variable = { positive_change_total = 0 }
			set_temp_variable = { negative_change_total = 0 }

			if = { limit = { check_variable = { slaves_change > 0 } } add_to_temp_variable = { positive_change_total = slaves_change } }
			else = { subtract_from_temp_variable = { negative_change_total = slaves_change } }

			if = { limit = { check_variable = { peasants_change > 0 } } add_to_temp_variable = { positive_change_total = peasants_change } }
			else = { subtract_from_temp_variable = { negative_change_total = peasants_change } }

			if = { limit = { check_variable = { laborers_change > 0 } } add_to_temp_variable = { positive_change_total = laborers_change } }
			else = { subtract_from_temp_variable = { negative_change_total = laborers_change } }

			if = { limit = { check_variable = { workers_change > 0 } } add_to_temp_variable = { positive_change_total = workers_change } }
			else = { subtract_from_temp_variable = { negative_change_total = workers_change } }

			if = { limit = { check_variable = { professionals_change > 0 } } add_to_temp_variable = { positive_change_total = professionals_change } }
			else = { subtract_from_temp_variable = { negative_change_total = professionals_change } }

			if = { limit = { check_variable = { specialists_change > 0 } } add_to_temp_variable = { positive_change_total = specialists_change } }
			else = { subtract_from_temp_variable = { negative_change_total = specialists_change } }
			
			if = { limit = { check_variable = { aristocrats_change > 0 } } add_to_temp_variable = { positive_change_total = aristocrats_change } }
			else = { subtract_from_temp_variable = { negative_change_total = aristocrats_change } }
			
			if = { limit = { check_variable = { capitalists_change > 0 } } add_to_temp_variable = { positive_change_total = capitalists_change } }
			else = { subtract_from_temp_variable = { negative_change_total = capitalists_change } }

			if = { limit = { check_variable = { bureaucrats_change > 0 } } add_to_temp_variable = { positive_change_total = bureaucrats_change } }
			else = { subtract_from_temp_variable = { negative_change_total = bureaucrats_change } }

			if = { limit = { check_variable = { soldiers_change > 0 } } add_to_temp_variable = { positive_change_total = soldiers_change } }
			else = { subtract_from_temp_variable = { negative_change_total = soldiers_change } }

			if = {
				limit = {
					check_variable = { positive_change_total > negative_change_total }
				}
				set_temp_variable = { first_percent_done = negative_change_total }
				multiply_temp_variable = { first_percent_done = 10 }
				divide_temp_variable = { first_percent_done = positive_change_total }

				multiply_temp_variable = { percent_done = first_percent_done }
				divide_temp_variable = { percent_done = 10 }

				if = { limit = { check_variable = { slaves_change > 0 } } 
					multiply_temp_variable = { slaves_change = first_percent_done } 
					round_temp_variable = slaves_change
					divide_temp_variable = { slaves_change = 10 }
				}
				if = { limit = { check_variable = { peasants_change > 0 } } 
					multiply_temp_variable = { peasants_change = first_percent_done } 
					round_temp_variable = peasants_change
					divide_temp_variable = { peasants_change = 10 }
				}
				if = { limit = { check_variable = { laborers_change > 0 } } 
					multiply_temp_variable = { laborers_change = first_percent_done } 
					round_temp_variable = laborers_change
					divide_temp_variable = { laborers_change = 10 }
				}
				if = { limit = { check_variable = { workers_change > 0 } } 
					multiply_temp_variable = { workers_change = first_percent_done } 
					round_temp_variable = workers_change
					divide_temp_variable = { workers_change = 10 }
				}
				if = { limit = { check_variable = { professionals_change > 0 } } 
					multiply_temp_variable = { professionals_change = first_percent_done } 
					round_temp_variable = professionals_change
					divide_temp_variable = { professionals_change = 10 }
				}
				if = { limit = { check_variable = { specialists_change > 0 } } 
					multiply_temp_variable = { specialists_change = first_percent_done } 
					round_temp_variable = specialists_change
					divide_temp_variable = { specialists_change = 10 }
				}
				if = { limit = { check_variable = { aristocrats_change > 0 } } 
					multiply_temp_variable = { aristocrats_change = first_percent_done } 
					round_temp_variable = aristocrats_change
					divide_temp_variable = { aristocrats_change = 10 }
				}
				if = { limit = { check_variable = { capitalists_change > 0 } } 
					multiply_temp_variable = { capitalists_change = first_percent_done } 
					round_temp_variable = capitalists_change
					divide_temp_variable = { capitalists_change = 10 }
				}
				if = { limit = { check_variable = { bureaucrats_change > 0 } } 
					multiply_temp_variable = { bureaucrats_change = first_percent_done } 
					round_temp_variable = bureaucrats_change
					divide_temp_variable = { bureaucrats_change = 10 }
				}
				if = { limit = { check_variable = { soldiers_change > 0 } } 
					multiply_temp_variable = { soldiers_change = first_percent_done } 
					round_temp_variable = soldiers_change
					divide_temp_variable = { soldiers_change = 10 }

				# Redo totals
				set_temp_variable = { positive_change_total = 0 }
				set_temp_variable = { negative_change_total = 0 }
				if = { limit = { check_variable = { slaves_change > 0 } } add_to_temp_variable = { positive_change_total = slaves_change } }
				else = { subtract_from_temp_variable = { negative_change_total = slaves_change } }
				if = { limit = { check_variable = { peasants_change > 0 } } add_to_temp_variable = { positive_change_total = peasants_change } }
				else = { subtract_from_temp_variable = { negative_change_total = peasants_change } }
				if = { limit = { check_variable = { laborers_change > 0 } } add_to_temp_variable = { positive_change_total = laborers_change } }
				else = { subtract_from_temp_variable = { negative_change_total = laborers_change } }
				if = { limit = { check_variable = { workers_change > 0 } } add_to_temp_variable = { positive_change_total = workers_change } }
				else = { subtract_from_temp_variable = { negative_change_total = workers_change } }
				if = { limit = { check_variable = { professionals_change > 0 } } add_to_temp_variable = { positive_change_total = professionals_change } }
				else = { subtract_from_temp_variable = { negative_change_total = professionals_change } }
				if = { limit = { check_variable = { specialists_change > 0 } } add_to_temp_variable = { positive_change_total = specialists_change } }
				else = { subtract_from_temp_variable = { negative_change_total = specialists_change } }
				if = { limit = { check_variable = { aristocrats_change > 0 } } add_to_temp_variable = { positive_change_total = aristocrats_change } }
				else = { subtract_from_temp_variable = { negative_change_total = aristocrats_change } }
				if = { limit = { check_variable = { capitalists_change > 0 } } add_to_temp_variable = { positive_change_total = capitalists_change } }
				else = { subtract_from_temp_variable = { negative_change_total = capitalists_change } }
				if = { limit = { check_variable = { bureaucrats_change > 0 } } add_to_temp_variable = { positive_change_total = bureaucrats_change } }
				else = { subtract_from_temp_variable = { negative_change_total = bureaucrats_change } }
				if = { limit = { check_variable = { soldiers_change > 0 } } add_to_temp_variable = { positive_change_total = soldiers_change } }
				else = { subtract_from_temp_variable = { negative_change_total = soldiers_change } }
				}
			}
			else_if = {
				limit = {
					check_variable = { positive_change_total < negative_change_total }
				}
				set_temp_variable = { first_percent_done = positive_change_total }
				multiply_temp_variable = { first_percent_done = 10 }
				divide_temp_variable = { first_percent_done = negative_change_total }

				multiply_temp_variable = { percent_done = first_percent_done }
				divide_temp_variable = { percent_done = 10 }

				if = { limit = { check_variable = { slaves_change < 0 } } 
					multiply_temp_variable = { slaves_change = first_percent_done } 
					round_temp_variable = slaves_change
					divide_temp_variable = { slaves_change = 10 }
				}
				if = { limit = { check_variable = { peasants_change < 0 } } 
					multiply_temp_variable = { peasants_change = first_percent_done } 
					round_temp_variable = peasants_change
					divide_temp_variable = { peasants_change = 10 }
				}
				if = { limit = { check_variable = { laborers_change < 0 } } 
					multiply_temp_variable = { laborers_change = first_percent_done } 
					round_temp_variable = laborers_change
					divide_temp_variable = { laborers_change = 10 }
				}
				if = { limit = { check_variable = { workers_change < 0 } } 
					multiply_temp_variable = { workers_change = first_percent_done } 
					round_temp_variable = workers_change
					divide_temp_variable = { workers_change = 10 }
				}
				if = { limit = { check_variable = { professionals_change < 0 } } 
					multiply_temp_variable = { professionals_change = first_percent_done } 
					round_temp_variable = professionals_change
					divide_temp_variable = { professionals_change = 10 }
				}
				if = { limit = { check_variable = { specialists_change < 0 } } 
					multiply_temp_variable = { specialists_change = first_percent_done } 
					round_temp_variable = specialists_change
					divide_temp_variable = { specialists_change = 10 }
				}
				if = { limit = { check_variable = { aristocrats_change < 0 } } 
					multiply_temp_variable = { aristocrats_change = first_percent_done } 
					round_temp_variable = aristocrats_change
					divide_temp_variable = { aristocrats_change = 10 }
				}
				if = { limit = { check_variable = { capitalists_change < 0 } } 
					multiply_temp_variable = { capitalists_change = first_percent_done } 
					round_temp_variable = capitalists_change
					divide_temp_variable = { capitalists_change = 10 }
				}
				if = { limit = { check_variable = { bureaucrats_change < 0 } } 
					multiply_temp_variable = { bureaucrats_change = first_percent_done } 
					round_temp_variable = bureaucrats_change
					divide_temp_variable = { bureaucrats_change = 10 }
				}
				if = { limit = { check_variable = { soldiers_change < 0 } } 
					multiply_temp_variable = { soldiers_change = first_percent_done } 
					round_temp_variable = soldiers_change
					divide_temp_variable = { soldiers_change = 10 }
				}

				# Redo totals
				set_temp_variable = { positive_change_total = 0 }
				set_temp_variable = { negative_change_total = 0 }
				if = { limit = { check_variable = { slaves_change > 0 } } add_to_temp_variable = { positive_change_total = slaves_change } }
				else = { subtract_from_temp_variable = { negative_change_total = slaves_change } }
				if = { limit = { check_variable = { peasants_change > 0 } } add_to_temp_variable = { positive_change_total = peasants_change } }
				else = { subtract_from_temp_variable = { negative_change_total = peasants_change } }
				if = { limit = { check_variable = { laborers_change > 0 } } add_to_temp_variable = { positive_change_total = laborers_change } }
				else = { subtract_from_temp_variable = { negative_change_total = laborers_change } }
				if = { limit = { check_variable = { workers_change > 0 } } add_to_temp_variable = { positive_change_total = workers_change } }
				else = { subtract_from_temp_variable = { negative_change_total = workers_change } }
				if = { limit = { check_variable = { professionals_change > 0 } } add_to_temp_variable = { positive_change_total = professionals_change } }
				else = { subtract_from_temp_variable = { negative_change_total = professionals_change } }
				if = { limit = { check_variable = { specialists_change > 0 } } add_to_temp_variable = { positive_change_total = specialists_change } }
				else = { subtract_from_temp_variable = { negative_change_total = specialists_change } }
				if = { limit = { check_variable = { aristocrats_change > 0 } } add_to_temp_variable = { positive_change_total = aristocrats_change } }
				else = { subtract_from_temp_variable = { negative_change_total = aristocrats_change } }
				if = { limit = { check_variable = { capitalists_change > 0 } } add_to_temp_variable = { positive_change_total = capitalists_change } }
				else = { subtract_from_temp_variable = { negative_change_total = capitalists_change } }
				if = { limit = { check_variable = { bureaucrats_change > 0 } } add_to_temp_variable = { positive_change_total = bureaucrats_change } }
				else = { subtract_from_temp_variable = { negative_change_total = bureaucrats_change } }
				if = { limit = { check_variable = { soldiers_change > 0 } } add_to_temp_variable = { positive_change_total = soldiers_change } }
				else = { subtract_from_temp_variable = { negative_change_total = soldiers_change } }
			}
			else = {
				set_temp_variable = { first_percent_done = 1 }
			}
		#

		# log = "STATE: [THIS.GetName]"

		if = {
			limit = { check_variable = { percent_done > 0 } }
			# Note: Aristocrats & Capitalists don't count for qualification changes b/c they're required at every stage of tech. But they do count as literate + schooled.

			## Educated Qualifications (Just specialists) ##
				if = {
					limit = {
						check_variable = { specialists_change > 0 }
					}
					set_temp_variable = { education_change_cap = pops_workforce }
					multiply_temp_variable = { education_change_cap = pops_education_percentage }
					divide_temp_variable = { education_change_cap = 100 }
					subtract_from_temp_variable = { education_change_cap = specialists_workforce }
					# log = "Educated Change: [?specialists_change] / [?education_change_cap]"

					if = {
						limit = {
							check_variable = { education_change_cap < specialists_change }
						}
						set_temp_variable = { amount_temp = specialists_change }
						set_temp_variable = { max_amount_temp = education_change_cap }
						multiply_pops_change = yes
						set_temp_variable = { second_percent_done = temp_percent_done }
						multiply_temp_variable = { percent_done = second_percent_done }
					}
					else = {
						set_temp_variable = { second_percent_done = 1 }
					}
				}
			#
			## Schooled Qualifications ##
				set_temp_variable = { schooled_change = specialists_change }
				add_to_temp_variable = { schooled_change = professionals_change }
				if = {
					limit = {
						check_variable = { schooled_change > 0 }
					}
					set_temp_variable = { schooled_change_cap = pops_workforce }
					multiply_temp_variable = { schooled_change_cap = pops_schooling_percentage }
					divide_temp_variable = { schooled_change_cap = 100 }
					subtract_from_temp_variable = { schooled_change_cap = professionals_workforce }
					subtract_from_temp_variable = { schooled_change_cap = specialists_workforce }
					subtract_from_temp_variable = { schooled_change_cap = capitalists_workforce }
					subtract_from_temp_variable = { schooled_change_cap = aristocrats_workforce }
					# log = "Schooled Change: [?schooled_change] / [?schooled_change_cap]"

					if = {
						limit = {
							check_variable = { schooled_change_cap < professionals_change }
						}
						set_temp_variable = { amount_temp = schooled_change }
						set_temp_variable = { max_amount_temp = schooled_change_cap }
						multiply_pops_change = yes
						set_temp_variable = { third_percent_done = temp_percent_done }
						multiply_temp_variable = { percent_done = third_percent_done }
					}
					else = {
						set_temp_variable = { third_percent_done = 1 }
					}
				}
			#
			## Literates Qualifications ##
				set_temp_variable = { literates_change = workers_change }
				add_to_temp_variable = { literates_change = professionals_change }
				add_to_temp_variable = { literates_change = specialists_change }
				add_to_temp_variable = { literates_change = bureaucrats_change }
				if = {
					limit = {
						check_variable = { literates_change > 0 }
					}
					set_temp_variable = { literates_change_cap = pops_workforce }
					multiply_temp_variable = { literates_change_cap = pops_literacy_percentage }
					divide_temp_variable = { literates_change_cap = 100 }
					subtract_from_temp_variable = { literates_change_cap = workers_workforce }
					subtract_from_temp_variable = { literates_change_cap = professionals_workforce }
					subtract_from_temp_variable = { literates_change_cap = elites_workforce }
					subtract_from_temp_variable = { literates_change_cap = bureaucrats_workforce }
					# log = "Literates Change: [?literates_change] / [?literates_change_cap]"

					if = {
						limit = {
							check_variable = { literates_change_cap < literates_change }
						}
						set_temp_variable = { amount_temp = literates_change }
						set_temp_variable = { max_amount_temp = literates_change_cap }
						multiply_pops_change = yes
						set_temp_variable = { fourth_percent_done = temp_percent_done }
						multiply_temp_variable = { percent_done = fourth_percent_done }
					}
					else = {
						set_temp_variable = { fourth_percent_done = 1 }
					}
				}
			#

			# Debugging #
				# if = { limit = { NOT = { check_variable = { slaves_change = 0 } } }  log = "Slaves Change: [?slaves_change]" }
				# if = { limit = { NOT = { check_variable = { peasants_change = 0 } } }  log = "Peasants Change: [?peasants_change]" }
				# if = { limit = { NOT = { check_variable = { laborers_change = 0 } } }  log = "Laborers Change: [?laborers_change]" }
				# if = { limit = { NOT = { check_variable = { workers_change = 0 } } }  log = "Workers Change: [?workers_change]" }
				# if = { limit = { NOT = { check_variable = { professionals_change = 0 } } }  log = "Professionals Change: [?professionals_change]" }
				# if = { limit = { NOT = { check_variable = { specialists_change = 0 } } }  log = "Specialists Change: [?specialists_change]" }
				# if = { limit = { NOT = { check_variable = { aristocrats_change = 0 } } }  log = "Aristocrats Change: [?aristocrats_change]" }
				# if = { limit = { NOT = { check_variable = { capitalists_change = 0 } } }  log = "Capitalists Change: [?capitalists_change]" }
				# if = { limit = { NOT = { check_variable = { bureaucrats_change = 0 } } }  log = "Bureaucrats Change: [?bureaucrats_change]" }
				# if = { limit = { NOT = { check_variable = { soldiers_change = 0 } } }  log = "Soldiers Change: [?soldiers_change]" }
				# log = "BEFORE:"
				# if = { limit = { NOT = { check_variable = { slaves_workforce = 0 } } }  log = "Slaves Workforce: [?slaves_workforce]" }
				# if = { limit = { NOT = { check_variable = { peasants_workforce = 0 } } }  log = "Peasants Workforce: [?peasants_workforce]" }
				# if = { limit = { NOT = { check_variable = { laborers_workforce = 0 } } }  log = "Laborers Workforce: [?laborers_workforce]" }
				# if = { limit = { NOT = { check_variable = { workers_workforce = 0 } } }  log = "Workers Workforce: [?workers_workforce]" }
				# if = { limit = { NOT = { check_variable = { professionals_workforce = 0 } } }  log = "Professionals Workforce: [?professionals_workforce]" }
				# if = { limit = { NOT = { check_variable = { specialists_workforce = 0 } } }  log = "Specialists Workforce: [?specialists_workforce]" }
				# if = { limit = { NOT = { check_variable = { aristocrats_workforce = 0 } } }  log = "Aristocrats Workforce: [?aristocrats_workforce]" }
				# if = { limit = { NOT = { check_variable = { capitalists_workforce = 0 } } }  log = "Capitalists Workforce: [?capitalists_workforce]" }
				# if = { limit = { NOT = { check_variable = { bureaucrats_workforce = 0 } } }  log = "Bureaucrats Workforce: [?bureaucrats_workforce]" }
				# if = { limit = { NOT = { check_variable = { soldiers_workforce = 0 } } }  log = "Soldiers Workforce: [?soldiers_workforce]" }
				# log = "AFTER:"
			#

			## Changes to Workforce ##
				add_to_variable = { slaves_workforce = slaves_change }
				add_to_variable = { slaves_unemployed = slaves_change }
				
				add_to_variable = { peasants_workforce = peasants_change }
				add_to_variable = { peasants_unemployed = peasants_change }
				
				add_to_variable = { laborers_workforce = laborers_change }
				add_to_variable = { laborers_unemployed = laborers_change }
				
				add_to_variable = { workers_workforce = workers_change }
				add_to_variable = { workers_unemployed = workers_change }
				
				add_to_variable = { professionals_workforce = professionals_change }
				add_to_variable = { professionals_unemployed = professionals_change }
				
				add_to_variable = { specialists_workforce = specialists_change }
				add_to_variable = { specialists_unemployed = specialists_change }
				
				add_to_variable = { aristocrats_workforce = aristocrats_change }
				add_to_variable = { aristocrats_unemployed = aristocrats_change }
				
				add_to_variable = { capitalists_workforce = capitalists_change }
				add_to_variable = { capitalists_unemployed = capitalists_change }
				
				add_to_variable = { bureaucrats_workforce = bureaucrats_change }
				add_to_variable = { bureaucrats_unemployed = bureaucrats_change }
				
				add_to_variable = { soldiers_workforce = soldiers_change }
				add_to_variable = { soldiers_unemployed = soldiers_change }
			#
		}

		# More Debugging #
			# if = { limit = { NOT = { check_variable = { slaves_workforce = 0 } } }  log = "Slaves Workforce: [?slaves_workforce]" }
			# if = { limit = { NOT = { check_variable = { peasants_workforce = 0 } } }  log = "Peasants Workforce: [?peasants_workforce]" }
			# if = { limit = { NOT = { check_variable = { laborers_workforce = 0 } } }  log = "Laborers Workforce: [?laborers_workforce]" }
			# if = { limit = { NOT = { check_variable = { workers_workforce = 0 } } }  log = "Workers Workforce: [?workers_workforce]" }
			# if = { limit = { NOT = { check_variable = { professionals_workforce = 0 } } }  log = "Professionals Workforce: [?professionals_workforce]" }
			# if = { limit = { NOT = { check_variable = { specialists_workforce = 0 } } }  log = "Specialists Workforce: [?specialists_workforce]" }
			# if = { limit = { NOT = { check_variable = { aristocrats_workforce = 0 } } }  log = "Aristocrats Workforce: [?aristocrats_workforce]" }
			# if = { limit = { NOT = { check_variable = { capitalists_workforce = 0 } } }  log = "Capitalists Workforce: [?capitalists_workforce]" }
			# if = { limit = { NOT = { check_variable = { bureaucrats_workforce = 0 } } }  log = "Bureaucrats Workforce: [?bureaucrats_workforce]" }
			# if = { limit = { NOT = { check_variable = { soldiers_workforce = 0 } } }  log = "Soldiers Workforce: [?soldiers_workforce]" }
			# log = "PERCENT DONE: [?percent_done]"
		#

		## Reset Temp Vars ##
		set_temp_variable = { slaves_change = 0 }
		set_temp_variable = { peasants_change = 0 }
		set_temp_variable = { laborers_change = 0 }
		set_temp_variable = { workers_change = 0 }
		set_temp_variable = { professionals_change = 0 }
		set_temp_variable = { specialists_change = 0 }
		set_temp_variable = { aristocrats_change = 0 }
		set_temp_variable = { capitalists_change = 0 }
		set_temp_variable = { bureaucrats_change = 0 }
		set_temp_variable = { soldiers_change = 0 }
	}
	multiply_pops_change = {
		# Effect for pops_convert
		# amount_temp
		# max_amount_temp
	
		set_temp_variable = { temp_percent_done = max_amount_temp }
		multiply_temp_variable = { temp_percent_done = 10 }
		divide_temp_variable = { temp_percent_done = amount_temp }

		multiply_temp_variable = { slaves_change = temp_percent_done } 
		round_temp_variable = slaves_change
		divide_temp_variable = { slaves_change = 10 }
		multiply_temp_variable = { peasants_change = temp_percent_done } 
		round_temp_variable = peasants_change
		divide_temp_variable = { peasants_change = 10 }
		multiply_temp_variable = { laborers_change = temp_percent_done } 
		round_temp_variable = laborers_change
		divide_temp_variable = { laborers_change = 10 }
		multiply_temp_variable = { workers_change = temp_percent_done } 
		round_temp_variable = workers_change
		divide_temp_variable = { workers_change = 10 }
		multiply_temp_variable = { professionals_change = temp_percent_done } 
		round_temp_variable = professionals_change
		divide_temp_variable = { professionals_change = 10 }
		multiply_temp_variable = { specialists_change = temp_percent_done } 
		round_temp_variable = specialists_change
		divide_temp_variable = { specialists_change = 10 }
		multiply_temp_variable = { aristocrats_change = temp_percent_done } 
		round_temp_variable = aristocrats_change
		divide_temp_variable = { aristocrats_change = 10 }
		multiply_temp_variable = { capitalists_change = temp_percent_done } 
		round_temp_variable = capitalists_change
		divide_temp_variable = { capitalists_change = 10 }
		multiply_temp_variable = { bureaucrats_change = temp_percent_done } 
		round_temp_variable = bureaucrats_change
		divide_temp_variable = { bureaucrats_change = 10 }
		multiply_temp_variable = { soldiers_change = temp_percent_done } 
		round_temp_variable = soldiers_change
		divide_temp_variable = { soldiers_change = 10 }

		# Redo totals
		set_temp_variable = { positive_change_total = 0 }
		set_temp_variable = { negative_change_total = 0 }
		if = { limit = { check_variable = { slaves_change > 0 } } add_to_temp_variable = { positive_change_total = slaves_change } }
		else = { subtract_from_temp_variable = { negative_change_total = slaves_change } }
		if = { limit = { check_variable = { peasants_change > 0 } } add_to_temp_variable = { positive_change_total = peasants_change } }
		else = { subtract_from_temp_variable = { negative_change_total = peasants_change } }
		if = { limit = { check_variable = { laborers_change > 0 } } add_to_temp_variable = { positive_change_total = laborers_change } }
		else = { subtract_from_temp_variable = { negative_change_total = laborers_change } }
		if = { limit = { check_variable = { workers_change > 0 } } add_to_temp_variable = { positive_change_total = workers_change } }
		else = { subtract_from_temp_variable = { negative_change_total = workers_change } }
		if = { limit = { check_variable = { professionals_change > 0 } } add_to_temp_variable = { positive_change_total = professionals_change } }
		else = { subtract_from_temp_variable = { negative_change_total = professionals_change } }
		if = { limit = { check_variable = { specialists_change > 0 } } add_to_temp_variable = { positive_change_total = specialists_change } }
		else = { subtract_from_temp_variable = { negative_change_total = specialists_change } }
		if = { limit = { check_variable = { aristocrats_change > 0 } } add_to_temp_variable = { positive_change_total = aristocrats_change } }
		else = { subtract_from_temp_variable = { negative_change_total = aristocrats_change } }
		if = { limit = { check_variable = { capitalists_change > 0 } } add_to_temp_variable = { positive_change_total = capitalists_change } }
		else = { subtract_from_temp_variable = { negative_change_total = capitalists_change } }
		if = { limit = { check_variable = { bureaucrats_change > 0 } } add_to_temp_variable = { positive_change_total = bureaucrats_change } }
		else = { subtract_from_temp_variable = { negative_change_total = bureaucrats_change } }
		if = { limit = { check_variable = { soldiers_change > 0 } } add_to_temp_variable = { positive_change_total = soldiers_change } }
		else = { subtract_from_temp_variable = { negative_change_total = soldiers_change } }
	}
	fix_negative_workforce = {
		# Fixes negative aristocrats/capitalists by sourcing from peasants/laborers
		if = {
			limit = {
				check_variable = { aristocrats_workforce < 0 }
			}
			add_to_variable = { peasants_workforce = aristocrats_workforce }
			set_variable = { aristocrats_workforce = 0 }
		}
		if = {
			limit = {
				check_variable = { capitalists_workforce < 0 }
			}
			add_to_variable = { laborers_workforce = capitalists_workforce }
			set_variable = { capitalists_workforce = 0 }
		}

		# Fixes negative workforce by sourcing from higher-tier pops
		if = {
			limit = {
				check_variable = { peasants_workforce < 0 }
			}
			add_to_variable = { laborers_workforce = peasants_workforce }
			set_variable = { peasants_workforce = 0 }
		}
		if = {
			limit = {
				check_variable = { laborers_workforce < 0 }
			}
			add_to_variable = { workers_workforce = laborers_workforce }
			set_variable = { laborers_workforce = 0 }
		}
		if = {
			limit = {
				check_variable = { workers_workforce < 0 }
			}
			add_to_variable = { professionals_workforce = workers_workforce }
			set_variable = { workers_workforce = 0 }
		}
		if = {
			limit = {
				check_variable = { professionals_workforce < 0 }
			}
			add_to_variable = { specialists_workforce = professionals_workforce }
			set_variable = { professionals_workforce = 0 }
		}
		if = {
			limit = {
				check_variable = { specialists_workforce < 0 }
			}
			set_variable = { specialists_workforce = 0 }
		}
	}

	update_country_pop_stats = {
		set_variable = { pops = 0 }
		set_variable = { pops_workforce = 0 }
		set_variable = { pops_col = 0 }
		set_variable = { pops_sol = 0 }
		set_variable = { pops_earnings = 0 }

		set_variable = { capitalists_workforce = 0 }
		set_variable = { capitalists_dividends = 0 }
		set_variable = { aristocrats_workforce = 0 }
		set_variable = { aristocrats_dividends = 0 }

		every_controlled_state = {
			#Pops
			add_to_variable = { PREV.pops = pops }
			add_to_variable = { PREV.pops_workforce = pops_workforce }

			set_temp_variable = { stat_temp = pops_col }
			multiply_temp_variable = { stat_temp = pops }
			add_to_variable = { PREV.pops_col = stat_temp }

			set_temp_variable = { stat_temp = pops_sol }
			multiply_temp_variable = { stat_temp = pops }
			divide_temp_variable = { stat_temp = 1000 }
			add_to_variable = { PREV.pops_sol = stat_temp }

			add_to_variable = { PREV.pops_earnings = pops_earnings }
			
			add_to_variable = { PREV.capitalists_workforce = capitalists_workforce }
			add_to_variable = { PREV.capitalists_dividends = capitalists_dividends }
			add_to_variable = { PREV.aristocrats_workforce = aristocrats_workforce }
			add_to_variable = { PREV.aristocrats_dividends = aristocrats_dividends }
		}
		set_temp_variable = { pops_temp = pops }
		divide_temp_variable = { pops_temp = 1000 }

		divide_variable = { pops_sol = pops_temp }
		divide_variable = { pops_col = pops_temp }

		set_variable = { pops_earnings_avg = pops_earnings }
		divide_variable = { pops_earnings_avg = pops }

		set_variable = { workforce_earnings_avg = pops_earnings }
		divide_variable = { workforce_earnings_avg = pops_workforce }
	}


	create_pie_chart_pop_type = {
		# this creates a pie chart of popularities - can be easily adapted to show anything that adds up to 100%
		# This code is much different from Yard's, but I'll credit him anyway
		# State Scope

		clear_array = pie_chart_pop_type
		resize_array = {
			array = pie_chart_pop_type
			value = 1 # 1 is value for RGO frame
			size = 100 # 100 pieces, each percent is one piece
		}

		clear_temp_array = pop_types_percentage
		add_to_temp_array = { pop_types_percentage = 0 }
		add_to_temp_array = { pop_types_percentage = slaves_percentage }
		add_to_temp_array = { pop_types_percentage = peasants_percentage }
		add_to_temp_array = { pop_types_percentage = laborers_percentage }
		add_to_temp_array = { pop_types_percentage = workers_percentage }
		add_to_temp_array = { pop_types_percentage = professionals_percentage }
		add_to_temp_array = { pop_types_percentage = specialists_percentage }
		add_to_temp_array = { pop_types_percentage = aristocrats_percentage }
		add_to_temp_array = { pop_types_percentage = capitalists_percentage }
		add_to_temp_array = { pop_types_percentage = bureaucrats_percentage }
		add_to_temp_array = { pop_types_percentage = soldiers_percentage }

		set_temp_variable = { total_temp = 0 }
		set_temp_variable = { largest = 0 }
		for_each_loop = {
			array = pop_types_percentage
			index = rr
			if = {
				limit = {
					check_variable = { pop_types_percentage^rr > pop_types_percentage^largest }
				}
				set_temp_variable = { largest = rr }
			}

			multiply_temp_variable = { pop_types_percentage^rr = 100 }
			round_temp_variable = pop_types_percentage^rr
			add_to_temp_variable = { total_temp = pop_types_percentage^rr }
		}

		if = {
			limit = {
				NOT = { check_variable = { total_temp = 100 } }
			}
			add_to_temp_variable = { pop_types_percentage^largest = 100 }
			subtract_from_temp_variable = { pop_types_percentage^largest = total_temp }
		}

		set_temp_variable = { pie_pop = 0 }
		for_each_loop = {
			array = pop_types_percentage
			index = rr
			value = vv

			set_variable = { last_idx = pie_pop }
			set_temp_variable = { pie_pop = vv }

			add_to_temp_variable = { pie_pop = last_idx }
			#subtract_from_temp_variable = { pie_pop = 1 }
			if = {
				limit = {
					check_variable = { pie_pop > 100 }
				}
				set_temp_variable = { pie_pop = 100 }
			}
			for_loop_effect = {
				start = last_idx
				end = pie_pop
				set_variable = { pie_chart_pop_type^v = rr }
			}
			set_variable = { last_idx = pie_pop }
		}
		clear_variable = last_idx

		add_to_variable = { update_state_econ_window = 1 }
	}
#

#Buildings
	buildings_update_base_latest_vals = {
		# First Step: Figure out revenues & expenses -> productivity of each industry

		for_each_loop = {
			array = global.building_token_array
			value = bu_token


			set_temp_variable = { bu_resource_1 = global.building_output_resource_1@var:bu_token }
			set_temp_variable = { bu_resource_2 = global.building_output_resource_2@var:bu_token }
			set_temp_variable = { bu_resource_3 = global.building_output_resource_3@var:bu_token }
			set_temp_variable = { bu_resource_4 = global.building_output_resource_4@var:bu_token }
			set_temp_variable = { bu_resource_5 = global.building_output_resource_5@var:bu_token }
				
			# Building Era
				if = { #Basic
					limit = {
						check_variable = { latest_production_method@var:bu_token = 0 }
					}
					# Jobs
					set_variable = { peasants_jobs@var:bu_token = global.building_basic_peasants_employment@var:bu_token }
					set_variable = { laborers_jobs@var:bu_token = global.building_basic_laborers_employment@var:bu_token }
					set_variable = { workers_jobs@var:bu_token = global.building_basic_workers_employment@var:bu_token }
					set_variable = { professionals_jobs@var:bu_token = global.building_basic_professionals_employment@var:bu_token }
					set_variable = { specialists_jobs@var:bu_token = global.building_basic_specialists_employment@var:bu_token }
					set_variable = { aristocrats_jobs@var:bu_token = global.building_basic_aristocrats_employment@var:bu_token }
					set_variable = { capitalists_jobs@var:bu_token = global.building_basic_capitalists_employment@var:bu_token }
					set_variable = { payroll_multiplier@var:bu_token = global.building_basic_payroll_multiplier@var:bu_token }

					# Max Production
					set_variable = { max_production_1@var:bu_token = global.building_basic_output_1@var:bu_token }
					set_variable = { max_production_2@var:bu_token = global.building_basic_output_2@var:bu_token }
					set_variable = { max_production_3@var:bu_token = global.building_basic_output_3@var:bu_token }
					set_variable = { max_production_4@var:bu_token = global.building_basic_output_4@var:bu_token }
					set_variable = { max_production_5@var:bu_token = global.building_basic_output_5@var:bu_token }
					
					# Inputs
					set_variable = { input_1_type@var:bu_token = global.building_basic_input_resource_1@var:bu_token }
					set_variable = { input_2_type@var:bu_token = global.building_basic_input_resource_2@var:bu_token }
					set_variable = { input_3_type@var:bu_token = global.building_basic_input_resource_3@var:bu_token }
					set_variable = { input_4_type@var:bu_token = global.building_basic_input_resource_4@var:bu_token }
					set_variable = { input_5_type@var:bu_token = global.building_basic_input_resource_5@var:bu_token }

					set_variable = { input_1_amount@var:bu_token = global.building_basic_input_amount_1@var:bu_token }
					set_variable = { input_2_amount@var:bu_token = global.building_basic_input_amount_2@var:bu_token }
					set_variable = { input_3_amount@var:bu_token = global.building_basic_input_amount_3@var:bu_token }
					set_variable = { input_4_amount@var:bu_token = global.building_basic_input_amount_4@var:bu_token }
					set_variable = { input_5_amount@var:bu_token = global.building_basic_input_amount_5@var:bu_token }

					# Capacities
					set_variable = { industrial_capacity_use@var:bu_token = global.building_basic_industrial_capacity_use@var:bu_token }
					set_variable = { shipping_capacity@var:bu_token = global.building_basic_output_shipping_capacity@var:bu_token }
					set_variable = { industrial_capacity@var:bu_token = global.building_basic_output_industrial_capacity@var:bu_token }
				}
				else_if = { #Advanced
					limit = {
						check_variable = { latest_production_method@var:bu_token = 1 }
					}
					# Jobs
					set_variable = { peasants_jobs@var:bu_token = global.building_advanced_peasants_employment@var:bu_token }
					set_variable = { laborers_jobs@var:bu_token = global.building_advanced_laborers_employment@var:bu_token }
					set_variable = { workers_jobs@var:bu_token = global.building_advanced_workers_employment@var:bu_token }
					set_variable = { professionals_jobs@var:bu_token = global.building_advanced_professionals_employment@var:bu_token }
					set_variable = { specialists_jobs@var:bu_token = global.building_advanced_specialists_employment@var:bu_token }
					set_variable = { aristocrats_jobs@var:bu_token = global.building_advanced_aristocrats_employment@var:bu_token }
					set_variable = { capitalists_jobs@var:bu_token = global.building_advanced_capitalists_employment@var:bu_token }
					set_variable = { payroll_multiplier@var:bu_token = global.building_advanced_payroll_multiplier@var:bu_token }

					# Max Production
					set_variable = { max_production_1@var:bu_token = global.building_advanced_output_1@var:bu_token }
					set_variable = { max_production_2@var:bu_token = global.building_advanced_output_2@var:bu_token }
					set_variable = { max_production_3@var:bu_token = global.building_advanced_output_3@var:bu_token }
					set_variable = { max_production_4@var:bu_token = global.building_advanced_output_4@var:bu_token }
					set_variable = { max_production_5@var:bu_token = global.building_advanced_output_5@var:bu_token }
					
					# Inputs
					set_variable = { input_1_type@var:bu_token = global.building_advanced_input_resource_1@var:bu_token }
					set_variable = { input_2_type@var:bu_token = global.building_advanced_input_resource_2@var:bu_token }
					set_variable = { input_3_type@var:bu_token = global.building_advanced_input_resource_3@var:bu_token }
					set_variable = { input_4_type@var:bu_token = global.building_advanced_input_resource_4@var:bu_token }
					set_variable = { input_5_type@var:bu_token = global.building_advanced_input_resource_5@var:bu_token }

					set_variable = { input_1_amount@var:bu_token = global.building_advanced_input_amount_1@var:bu_token }
					set_variable = { input_2_amount@var:bu_token = global.building_advanced_input_amount_2@var:bu_token }
					set_variable = { input_3_amount@var:bu_token = global.building_advanced_input_amount_3@var:bu_token }
					set_variable = { input_4_amount@var:bu_token = global.building_advanced_input_amount_4@var:bu_token }
					set_variable = { input_5_amount@var:bu_token = global.building_advanced_input_amount_5@var:bu_token }

					# Capacities
					set_variable = { industrial_capacity_use@var:bu_token = global.building_advanced_industrial_capacity_use@var:bu_token }
					set_variable = { shipping_capacity@var:bu_token = global.building_advanced_output_shipping_capacity@var:bu_token }
					set_variable = { industrial_capacity@var:bu_token = global.building_advanced_output_industrial_capacity@var:bu_token }
				}
				else_if = { #Industrialized
					limit = {
						check_variable = { latest_production_method@var:bu_token = 2 }
					}
					# Jobs
					set_variable = { peasants_jobs@var:bu_token = global.building_industrialized_peasants_employment@var:bu_token }
					set_variable = { laborers_jobs@var:bu_token = global.building_industrialized_laborers_employment@var:bu_token }
					set_variable = { workers_jobs@var:bu_token = global.building_industrialized_workers_employment@var:bu_token }
					set_variable = { professionals_jobs@var:bu_token = global.building_industrialized_professionals_employment@var:bu_token }
					set_variable = { specialists_jobs@var:bu_token = global.building_industrialized_specialists_employment@var:bu_token }
					set_variable = { aristocrats_jobs@var:bu_token = global.building_industrialized_aristocrats_employment@var:bu_token }
					set_variable = { capitalists_jobs@var:bu_token = global.building_industrialized_capitalists_employment@var:bu_token }
					set_variable = { payroll_multiplier@var:bu_token = global.building_industrialized_payroll_multiplier@var:bu_token }

					# Max Production
					set_variable = { max_production_1@var:bu_token = global.building_industrialized_output_1@var:bu_token }
					set_variable = { max_production_2@var:bu_token = global.building_industrialized_output_2@var:bu_token }
					set_variable = { max_production_3@var:bu_token = global.building_industrialized_output_3@var:bu_token }
					set_variable = { max_production_4@var:bu_token = global.building_industrialized_output_4@var:bu_token }
					set_variable = { max_production_5@var:bu_token = global.building_industrialized_output_5@var:bu_token }
					
					# Inputs
					set_variable = { input_1_type@var:bu_token = global.building_industrialized_input_resource_1@var:bu_token }
					set_variable = { input_2_type@var:bu_token = global.building_industrialized_input_resource_2@var:bu_token }
					set_variable = { input_3_type@var:bu_token = global.building_industrialized_input_resource_3@var:bu_token }
					set_variable = { input_4_type@var:bu_token = global.building_industrialized_input_resource_4@var:bu_token }
					set_variable = { input_5_type@var:bu_token = global.building_industrialized_input_resource_5@var:bu_token }

					set_variable = { input_1_amount@var:bu_token = global.building_industrialized_input_amount_1@var:bu_token }
					set_variable = { input_2_amount@var:bu_token = global.building_industrialized_input_amount_2@var:bu_token }
					set_variable = { input_3_amount@var:bu_token = global.building_industrialized_input_amount_3@var:bu_token }
					set_variable = { input_4_amount@var:bu_token = global.building_industrialized_input_amount_4@var:bu_token }
					set_variable = { input_5_amount@var:bu_token = global.building_industrialized_input_amount_5@var:bu_token }

					# Capacities
					set_variable = { industrial_capacity_use@var:bu_token = global.building_industrialized_industrial_capacity_use@var:bu_token }
					set_variable = { shipping_capacity@var:bu_token = global.building_industrialized_output_shipping_capacity@var:bu_token }
					set_variable = { industrial_capacity@var:bu_token = global.building_industrialized_output_industrial_capacity@var:bu_token }
				}
				else_if = { #Mechanized
					limit = {
						check_variable = { latest_production_method@var:bu_token = 3 }
					}
					# Jobs
					set_variable = { peasants_jobs@var:bu_token = global.building_mechanized_peasants_employment@var:bu_token }
					set_variable = { laborers_jobs@var:bu_token = global.building_mechanized_laborers_employment@var:bu_token }
					set_variable = { workers_jobs@var:bu_token = global.building_mechanized_workers_employment@var:bu_token }
					set_variable = { professionals_jobs@var:bu_token = global.building_mechanized_professionals_employment@var:bu_token }
					set_variable = { specialists_jobs@var:bu_token = global.building_mechanized_specialists_employment@var:bu_token }
					set_variable = { aristocrats_jobs@var:bu_token = global.building_mechanized_aristocrats_employment@var:bu_token }
					set_variable = { capitalists_jobs@var:bu_token = global.building_mechanized_capitalists_employment@var:bu_token }
					set_variable = { payroll_multiplier@var:bu_token = global.building_mechanized_payroll_multiplier@var:bu_token }

					# Max Production
					set_variable = { max_production_1@var:bu_token = global.building_mechanized_output_1@var:bu_token }
					set_variable = { max_production_2@var:bu_token = global.building_mechanized_output_2@var:bu_token }
					set_variable = { max_production_3@var:bu_token = global.building_mechanized_output_3@var:bu_token }
					set_variable = { max_production_4@var:bu_token = global.building_mechanized_output_4@var:bu_token }
					set_variable = { max_production_5@var:bu_token = global.building_mechanized_output_5@var:bu_token }
					
					# Inputs
					set_variable = { input_1_type@var:bu_token = global.building_mechanized_input_resource_1@var:bu_token }
					set_variable = { input_2_type@var:bu_token = global.building_mechanized_input_resource_2@var:bu_token }
					set_variable = { input_3_type@var:bu_token = global.building_mechanized_input_resource_3@var:bu_token }
					set_variable = { input_4_type@var:bu_token = global.building_mechanized_input_resource_4@var:bu_token }
					set_variable = { input_5_type@var:bu_token = global.building_mechanized_input_resource_5@var:bu_token }

					set_variable = { input_1_amount@var:bu_token = global.building_mechanized_input_amount_1@var:bu_token }
					set_variable = { input_2_amount@var:bu_token = global.building_mechanized_input_amount_2@var:bu_token }
					set_variable = { input_3_amount@var:bu_token = global.building_mechanized_input_amount_3@var:bu_token }
					set_variable = { input_4_amount@var:bu_token = global.building_mechanized_input_amount_4@var:bu_token }
					set_variable = { input_5_amount@var:bu_token = global.building_mechanized_input_amount_5@var:bu_token }

					# Capacities
					set_variable = { industrial_capacity_use@var:bu_token = global.building_mechanized_industrial_capacity_use@var:bu_token }
					set_variable = { shipping_capacity@var:bu_token = global.building_mechanized_output_shipping_capacity@var:bu_token }
					set_variable = { industrial_capacity@var:bu_token = global.building_mechanized_output_industrial_capacity@var:bu_token }
				}
				else_if = { #Electrified
					limit = {
						check_variable = { latest_production_method@var:bu_token = 4 }
					}
					# Jobs
					set_variable = { peasants_jobs@var:bu_token = global.building_electrified_peasants_employment@var:bu_token }
					set_variable = { laborers_jobs@var:bu_token = global.building_electrified_laborers_employment@var:bu_token }
					set_variable = { workers_jobs@var:bu_token = global.building_electrified_workers_employment@var:bu_token }
					set_variable = { professionals_jobs@var:bu_token = global.building_electrified_professionals_employment@var:bu_token }
					set_variable = { specialists_jobs@var:bu_token = global.building_electrified_specialists_employment@var:bu_token }
					set_variable = { aristocrats_jobs@var:bu_token = global.building_electrified_aristocrats_employment@var:bu_token }
					set_variable = { capitalists_jobs@var:bu_token = global.building_electrified_capitalists_employment@var:bu_token }
					set_variable = { payroll_multiplier@var:bu_token = global.building_electrified_payroll_multiplier@var:bu_token }

					# Max Production
					set_variable = { max_production_1@var:bu_token = global.building_electrified_output_1@var:bu_token }
					set_variable = { max_production_2@var:bu_token = global.building_electrified_output_2@var:bu_token }
					set_variable = { max_production_3@var:bu_token = global.building_electrified_output_3@var:bu_token }
					set_variable = { max_production_4@var:bu_token = global.building_electrified_output_4@var:bu_token }
					set_variable = { max_production_5@var:bu_token = global.building_electrified_output_5@var:bu_token }
					
					# Inputs
					set_variable = { input_1_type@var:bu_token = global.building_electrified_input_resource_1@var:bu_token }
					set_variable = { input_2_type@var:bu_token = global.building_electrified_input_resource_2@var:bu_token }
					set_variable = { input_3_type@var:bu_token = global.building_electrified_input_resource_3@var:bu_token }
					set_variable = { input_4_type@var:bu_token = global.building_electrified_input_resource_4@var:bu_token }
					set_variable = { input_5_type@var:bu_token = global.building_electrified_input_resource_5@var:bu_token }

					set_variable = { input_1_amount@var:bu_token = global.building_electrified_input_amount_1@var:bu_token }
					set_variable = { input_2_amount@var:bu_token = global.building_electrified_input_amount_2@var:bu_token }
					set_variable = { input_3_amount@var:bu_token = global.building_electrified_input_amount_3@var:bu_token }
					set_variable = { input_4_amount@var:bu_token = global.building_electrified_input_amount_4@var:bu_token }
					set_variable = { input_5_amount@var:bu_token = global.building_electrified_input_amount_5@var:bu_token }

					# Capacities
					set_variable = { industrial_capacity_use@var:bu_token = global.building_electrified_industrial_capacity_use@var:bu_token }
					set_variable = { shipping_capacity@var:bu_token = global.building_electrified_output_shipping_capacity@var:bu_token }
					set_variable = { industrial_capacity@var:bu_token = global.building_electrified_output_industrial_capacity@var:bu_token }
				}
				else_if = { #Motorized
					limit = {
						check_variable = { latest_production_method@var:bu_token = 5 }
					}
					# Jobs
					set_variable = { peasants_jobs@var:bu_token = global.building_motorized_peasants_employment@var:bu_token }
					set_variable = { laborers_jobs@var:bu_token = global.building_motorized_laborers_employment@var:bu_token }
					set_variable = { workers_jobs@var:bu_token = global.building_motorized_workers_employment@var:bu_token }
					set_variable = { professionals_jobs@var:bu_token = global.building_motorized_professionals_employment@var:bu_token }
					set_variable = { specialists_jobs@var:bu_token = global.building_motorized_specialists_employment@var:bu_token }
					set_variable = { aristocrats_jobs@var:bu_token = global.building_motorized_aristocrats_employment@var:bu_token }
					set_variable = { capitalists_jobs@var:bu_token = global.building_motorized_capitalists_employment@var:bu_token }
					set_variable = { payroll_multiplier@var:bu_token = global.building_motorized_payroll_multiplier@var:bu_token }

					# Max Production
					set_variable = { max_production_1@var:bu_token = global.building_motorized_output_1@var:bu_token }
					set_variable = { max_production_2@var:bu_token = global.building_motorized_output_2@var:bu_token }
					set_variable = { max_production_3@var:bu_token = global.building_motorized_output_3@var:bu_token }
					set_variable = { max_production_4@var:bu_token = global.building_motorized_output_4@var:bu_token }
					set_variable = { max_production_5@var:bu_token = global.building_motorized_output_5@var:bu_token }
					
					# Inputs
					set_variable = { input_1_type@var:bu_token = global.building_motorized_input_resource_1@var:bu_token }
					set_variable = { input_2_type@var:bu_token = global.building_motorized_input_resource_2@var:bu_token }
					set_variable = { input_3_type@var:bu_token = global.building_motorized_input_resource_3@var:bu_token }
					set_variable = { input_4_type@var:bu_token = global.building_motorized_input_resource_4@var:bu_token }
					set_variable = { input_5_type@var:bu_token = global.building_motorized_input_resource_5@var:bu_token }

					set_variable = { input_1_amount@var:bu_token = global.building_motorized_input_amount_1@var:bu_token }
					set_variable = { input_2_amount@var:bu_token = global.building_motorized_input_amount_2@var:bu_token }
					set_variable = { input_3_amount@var:bu_token = global.building_motorized_input_amount_3@var:bu_token }
					set_variable = { input_4_amount@var:bu_token = global.building_motorized_input_amount_4@var:bu_token }
					set_variable = { input_5_amount@var:bu_token = global.building_motorized_input_amount_5@var:bu_token }

					# Capacities
					set_variable = { industrial_capacity_use@var:bu_token = global.building_motorized_industrial_capacity_use@var:bu_token }
					set_variable = { shipping_capacity@var:bu_token = global.building_motorized_output_shipping_capacity@var:bu_token }
					set_variable = { industrial_capacity@var:bu_token = global.building_motorized_output_industrial_capacity@var:bu_token }
				}
				else_if = { #Modernized
					limit = {
						check_variable = { latest_production_method@var:bu_token = 6 }
					}
					# Jobs
					set_variable = { peasants_jobs@var:bu_token = global.building_modernized_peasants_employment@var:bu_token }
					set_variable = { laborers_jobs@var:bu_token = global.building_modernized_laborers_employment@var:bu_token }
					set_variable = { workers_jobs@var:bu_token = global.building_modernized_workers_employment@var:bu_token }
					set_variable = { professionals_jobs@var:bu_token = global.building_modernized_professionals_employment@var:bu_token }
					set_variable = { specialists_jobs@var:bu_token = global.building_modernized_specialists_employment@var:bu_token }
					set_variable = { aristocrats_jobs@var:bu_token = global.building_modernized_aristocrats_employment@var:bu_token }
					set_variable = { capitalists_jobs@var:bu_token = global.building_modernized_capitalists_employment@var:bu_token }
					set_variable = { payroll_multiplier@var:bu_token = global.building_modernized_payroll_multiplier@var:bu_token }

					# Max Production
					set_variable = { max_production_1@var:bu_token = global.building_modernized_output_1@var:bu_token }
					set_variable = { max_production_2@var:bu_token = global.building_modernized_output_2@var:bu_token }
					set_variable = { max_production_3@var:bu_token = global.building_modernized_output_3@var:bu_token }
					set_variable = { max_production_4@var:bu_token = global.building_modernized_output_4@var:bu_token }
					set_variable = { max_production_5@var:bu_token = global.building_modernized_output_5@var:bu_token }
					
					# Inputs
					set_variable = { input_1_type@var:bu_token = global.building_modernized_input_resource_1@var:bu_token }
					set_variable = { input_2_type@var:bu_token = global.building_modernized_input_resource_2@var:bu_token }
					set_variable = { input_3_type@var:bu_token = global.building_modernized_input_resource_3@var:bu_token }
					set_variable = { input_4_type@var:bu_token = global.building_modernized_input_resource_4@var:bu_token }
					set_variable = { input_5_type@var:bu_token = global.building_modernized_input_resource_5@var:bu_token }

					set_variable = { input_1_amount@var:bu_token = global.building_modernized_input_amount_1@var:bu_token }
					set_variable = { input_2_amount@var:bu_token = global.building_modernized_input_amount_2@var:bu_token }
					set_variable = { input_3_amount@var:bu_token = global.building_modernized_input_amount_3@var:bu_token }
					set_variable = { input_4_amount@var:bu_token = global.building_modernized_input_amount_4@var:bu_token }
					set_variable = { input_5_amount@var:bu_token = global.building_modernized_input_amount_5@var:bu_token }

					# Capacities
					set_variable = { industrial_capacity_use@var:bu_token = global.building_modernized_industrial_capacity_use@var:bu_token }
					set_variable = { shipping_capacity@var:bu_token = global.building_modernized_output_shipping_capacity@var:bu_token }
					set_variable = { industrial_capacity@var:bu_token = global.building_modernized_output_industrial_capacity@var:bu_token }
				}
				else_if = { #Roboticized
					limit = {
						check_variable = { latest_production_method@var:bu_token = 7 }
					}
					# Jobs
					set_variable = { peasants_jobs@var:bu_token = global.building_roboticized_peasants_employment@var:bu_token }
					set_variable = { laborers_jobs@var:bu_token = global.building_roboticized_laborers_employment@var:bu_token }
					set_variable = { workers_jobs@var:bu_token = global.building_roboticized_workers_employment@var:bu_token }
					set_variable = { professionals_jobs@var:bu_token = global.building_roboticized_professionals_employment@var:bu_token }
					set_variable = { specialists_jobs@var:bu_token = global.building_roboticized_specialists_employment@var:bu_token }
					set_variable = { aristocrats_jobs@var:bu_token = global.building_roboticized_aristocrats_employment@var:bu_token }
					set_variable = { capitalists_jobs@var:bu_token = global.building_roboticized_capitalists_employment@var:bu_token }
					set_variable = { payroll_multiplier@var:bu_token = global.building_roboticized_payroll_multiplier@var:bu_token }

					# Max Production
					set_variable = { max_production_1@var:bu_token = global.building_roboticized_output_1@var:bu_token }
					set_variable = { max_production_2@var:bu_token = global.building_roboticized_output_2@var:bu_token }
					set_variable = { max_production_3@var:bu_token = global.building_roboticized_output_3@var:bu_token }
					set_variable = { max_production_4@var:bu_token = global.building_roboticized_output_4@var:bu_token }
					set_variable = { max_production_5@var:bu_token = global.building_roboticized_output_5@var:bu_token }
					
					# Inputs
					set_variable = { input_1_type@var:bu_token = global.building_roboticized_input_resource_1@var:bu_token }
					set_variable = { input_2_type@var:bu_token = global.building_roboticized_input_resource_2@var:bu_token }
					set_variable = { input_3_type@var:bu_token = global.building_roboticized_input_resource_3@var:bu_token }
					set_variable = { input_4_type@var:bu_token = global.building_roboticized_input_resource_4@var:bu_token }
					set_variable = { input_5_type@var:bu_token = global.building_roboticized_input_resource_5@var:bu_token }

					set_variable = { input_1_amount@var:bu_token = global.building_roboticized_input_amount_1@var:bu_token }
					set_variable = { input_2_amount@var:bu_token = global.building_roboticized_input_amount_2@var:bu_token }
					set_variable = { input_3_amount@var:bu_token = global.building_roboticized_input_amount_3@var:bu_token }
					set_variable = { input_4_amount@var:bu_token = global.building_roboticized_input_amount_4@var:bu_token }
					set_variable = { input_5_amount@var:bu_token = global.building_roboticized_input_amount_5@var:bu_token }

					# Capacities
					set_variable = { industrial_capacity_use@var:bu_token = global.building_roboticized_industrial_capacity_use@var:bu_token }
					set_variable = { shipping_capacity@var:bu_token = global.building_roboticized_output_shipping_capacity@var:bu_token }
					set_variable = { industrial_capacity@var:bu_token = global.building_roboticized_output_industrial_capacity@var:bu_token }
				}
				else_if = { #Computerized
					limit = {
						check_variable = { latest_production_method@var:bu_token = 8 }
					}
					# Jobs
					set_variable = { peasants_jobs@var:bu_token = global.building_computerized_peasants_employment@var:bu_token }
					set_variable = { laborers_jobs@var:bu_token = global.building_computerized_laborers_employment@var:bu_token }
					set_variable = { workers_jobs@var:bu_token = global.building_computerized_workers_employment@var:bu_token }
					set_variable = { professionals_jobs@var:bu_token = global.building_computerized_professionals_employment@var:bu_token }
					set_variable = { specialists_jobs@var:bu_token = global.building_computerized_specialists_employment@var:bu_token }
					set_variable = { aristocrats_jobs@var:bu_token = global.building_computerized_aristocrats_employment@var:bu_token }
					set_variable = { capitalists_jobs@var:bu_token = global.building_computerized_capitalists_employment@var:bu_token }
					set_variable = { payroll_multiplier@var:bu_token = global.building_computerized_payroll_multiplier@var:bu_token }

					# Max Production
					set_variable = { max_production_1@var:bu_token = global.building_computerized_output_1@var:bu_token }
					set_variable = { max_production_2@var:bu_token = global.building_computerized_output_2@var:bu_token }
					set_variable = { max_production_3@var:bu_token = global.building_computerized_output_3@var:bu_token }
					set_variable = { max_production_4@var:bu_token = global.building_computerized_output_4@var:bu_token }
					set_variable = { max_production_5@var:bu_token = global.building_computerized_output_5@var:bu_token }
					
					# Inputs
					set_variable = { input_1_type@var:bu_token = global.building_computerized_input_resource_1@var:bu_token }
					set_variable = { input_2_type@var:bu_token = global.building_computerized_input_resource_2@var:bu_token }
					set_variable = { input_3_type@var:bu_token = global.building_computerized_input_resource_3@var:bu_token }
					set_variable = { input_4_type@var:bu_token = global.building_computerized_input_resource_4@var:bu_token }
					set_variable = { input_5_type@var:bu_token = global.building_computerized_input_resource_5@var:bu_token }

					set_variable = { input_1_amount@var:bu_token = global.building_computerized_input_amount_1@var:bu_token }
					set_variable = { input_2_amount@var:bu_token = global.building_computerized_input_amount_2@var:bu_token }
					set_variable = { input_3_amount@var:bu_token = global.building_computerized_input_amount_3@var:bu_token }
					set_variable = { input_4_amount@var:bu_token = global.building_computerized_input_amount_4@var:bu_token }
					set_variable = { input_5_amount@var:bu_token = global.building_computerized_input_amount_5@var:bu_token }

					# Capacities
					set_variable = { industrial_capacity_use@var:bu_token = global.building_computerized_industrial_capacity_use@var:bu_token }
					set_variable = { shipping_capacity@var:bu_token = global.building_computerized_output_shipping_capacity@var:bu_token }
					set_variable = { industrial_capacity@var:bu_token = global.building_computerized_output_industrial_capacity@var:bu_token }
				}
				else_if = { #Digitalized
					limit = {
						check_variable = { latest_production_method@var:bu_token = 9 }
					}
					# Jobs
					set_variable = { peasants_jobs@var:bu_token = global.building_digitalized_peasants_employment@var:bu_token }
					set_variable = { laborers_jobs@var:bu_token = global.building_digitalized_laborers_employment@var:bu_token }
					set_variable = { workers_jobs@var:bu_token = global.building_digitalized_workers_employment@var:bu_token }
					set_variable = { professionals_jobs@var:bu_token = global.building_digitalized_professionals_employment@var:bu_token }
					set_variable = { specialists_jobs@var:bu_token = global.building_digitalized_specialists_employment@var:bu_token }
					set_variable = { aristocrats_jobs@var:bu_token = global.building_digitalized_aristocrats_employment@var:bu_token }
					set_variable = { capitalists_jobs@var:bu_token = global.building_digitalized_capitalists_employment@var:bu_token }
					set_variable = { payroll_multiplier@var:bu_token = global.building_digitalized_payroll_multiplier@var:bu_token }

					# Max Production
					set_variable = { max_production_1@var:bu_token = global.building_digitalized_output_1@var:bu_token }
					set_variable = { max_production_2@var:bu_token = global.building_digitalized_output_2@var:bu_token }
					set_variable = { max_production_3@var:bu_token = global.building_digitalized_output_3@var:bu_token }
					set_variable = { max_production_4@var:bu_token = global.building_digitalized_output_4@var:bu_token }
					set_variable = { max_production_5@var:bu_token = global.building_digitalized_output_5@var:bu_token }
					
					# Inputs
					set_variable = { input_1_type@var:bu_token = global.building_digitalized_input_resource_1@var:bu_token }
					set_variable = { input_2_type@var:bu_token = global.building_digitalized_input_resource_2@var:bu_token }
					set_variable = { input_3_type@var:bu_token = global.building_digitalized_input_resource_3@var:bu_token }
					set_variable = { input_4_type@var:bu_token = global.building_digitalized_input_resource_4@var:bu_token }
					set_variable = { input_5_type@var:bu_token = global.building_digitalized_input_resource_5@var:bu_token }

					set_variable = { input_1_amount@var:bu_token = global.building_digitalized_input_amount_1@var:bu_token }
					set_variable = { input_2_amount@var:bu_token = global.building_digitalized_input_amount_2@var:bu_token }
					set_variable = { input_3_amount@var:bu_token = global.building_digitalized_input_amount_3@var:bu_token }
					set_variable = { input_4_amount@var:bu_token = global.building_digitalized_input_amount_4@var:bu_token }
					set_variable = { input_5_amount@var:bu_token = global.building_digitalized_input_amount_5@var:bu_token }

					# Capacities
					set_variable = { industrial_capacity_use@var:bu_token = global.building_digitalized_industrial_capacity_use@var:bu_token }
					set_variable = { shipping_capacity@var:bu_token = global.building_digitalized_output_shipping_capacity@var:bu_token }
					set_variable = { industrial_capacity@var:bu_token = global.building_digitalized_output_industrial_capacity@var:bu_token }
				}
				else_if = { #Automatized
					limit = {
						check_variable = { latest_production_method@var:bu_token = 10 }
					}
					# Jobs
					set_variable = { peasants_jobs@var:bu_token = global.building_automatized_peasants_employment@var:bu_token }
					set_variable = { laborers_jobs@var:bu_token = global.building_automatized_laborers_employment@var:bu_token }
					set_variable = { workers_jobs@var:bu_token = global.building_automatized_workers_employment@var:bu_token }
					set_variable = { professionals_jobs@var:bu_token = global.building_automatized_professionals_employment@var:bu_token }
					set_variable = { specialists_jobs@var:bu_token = global.building_automatized_specialists_employment@var:bu_token }
					set_variable = { aristocrats_jobs@var:bu_token = global.building_automatized_aristocrats_employment@var:bu_token }
					set_variable = { capitalists_jobs@var:bu_token = global.building_automatized_capitalists_employment@var:bu_token }
					set_variable = { payroll_multiplier@var:bu_token = global.building_automatized_payroll_multiplier@var:bu_token }

					# Max Production
					set_variable = { max_production_1@var:bu_token = global.building_automatized_output_1@var:bu_token }
					set_variable = { max_production_2@var:bu_token = global.building_automatized_output_2@var:bu_token }
					set_variable = { max_production_3@var:bu_token = global.building_automatized_output_3@var:bu_token }
					set_variable = { max_production_4@var:bu_token = global.building_automatized_output_4@var:bu_token }
					set_variable = { max_production_5@var:bu_token = global.building_automatized_output_5@var:bu_token }
					
					# Inputs
					set_variable = { input_1_type@var:bu_token = global.building_automatized_input_resource_1@var:bu_token }
					set_variable = { input_2_type@var:bu_token = global.building_automatized_input_resource_2@var:bu_token }
					set_variable = { input_3_type@var:bu_token = global.building_automatized_input_resource_3@var:bu_token }
					set_variable = { input_4_type@var:bu_token = global.building_automatized_input_resource_4@var:bu_token }
					set_variable = { input_5_type@var:bu_token = global.building_automatized_input_resource_5@var:bu_token }

					set_variable = { input_1_amount@var:bu_token = global.building_automatized_input_amount_1@var:bu_token }
					set_variable = { input_2_amount@var:bu_token = global.building_automatized_input_amount_2@var:bu_token }
					set_variable = { input_3_amount@var:bu_token = global.building_automatized_input_amount_3@var:bu_token }
					set_variable = { input_4_amount@var:bu_token = global.building_automatized_input_amount_4@var:bu_token }
					set_variable = { input_5_amount@var:bu_token = global.building_automatized_input_amount_5@var:bu_token }

					# Capacities
					set_variable = { industrial_capacity_use@var:bu_token = global.building_automatized_industrial_capacity_use@var:bu_token }
					set_variable = { shipping_capacity@var:bu_token = global.building_automatized_output_shipping_capacity@var:bu_token }
					set_variable = { industrial_capacity@var:bu_token = global.building_automatized_output_industrial_capacity@var:bu_token }
				}
				else_if = { #Futurized
					limit = {
						check_variable = { latest_production_method@var:bu_token = 11 }
					}
					# Jobs
					set_variable = { peasants_jobs@var:bu_token = global.building_futurized_peasants_employment@var:bu_token }
					set_variable = { laborers_jobs@var:bu_token = global.building_futurized_laborers_employment@var:bu_token }
					set_variable = { workers_jobs@var:bu_token = global.building_futurized_workers_employment@var:bu_token }
					set_variable = { professionals_jobs@var:bu_token = global.building_futurized_professionals_employment@var:bu_token }
					set_variable = { specialists_jobs@var:bu_token = global.building_futurized_specialists_employment@var:bu_token }
					set_variable = { aristocrats_jobs@var:bu_token = global.building_futurized_aristocrats_employment@var:bu_token }
					set_variable = { capitalists_jobs@var:bu_token = global.building_futurized_capitalists_employment@var:bu_token }
					set_variable = { payroll_multiplier@var:bu_token = global.building_futurized_payroll_multiplier@var:bu_token }

					# Max Production
					set_variable = { max_production_1@var:bu_token = global.building_futurized_output_1@var:bu_token }
					set_variable = { max_production_2@var:bu_token = global.building_futurized_output_2@var:bu_token }
					set_variable = { max_production_3@var:bu_token = global.building_futurized_output_3@var:bu_token }
					set_variable = { max_production_4@var:bu_token = global.building_futurized_output_4@var:bu_token }
					set_variable = { max_production_5@var:bu_token = global.building_futurized_output_5@var:bu_token }
					
					# Inputs
					set_variable = { input_1_type@var:bu_token = global.building_futurized_input_resource_1@var:bu_token }
					set_variable = { input_2_type@var:bu_token = global.building_futurized_input_resource_2@var:bu_token }
					set_variable = { input_3_type@var:bu_token = global.building_futurized_input_resource_3@var:bu_token }
					set_variable = { input_4_type@var:bu_token = global.building_futurized_input_resource_4@var:bu_token }
					set_variable = { input_5_type@var:bu_token = global.building_futurized_input_resource_5@var:bu_token }

					set_variable = { input_1_amount@var:bu_token = global.building_futurized_input_amount_1@var:bu_token }
					set_variable = { input_2_amount@var:bu_token = global.building_futurized_input_amount_2@var:bu_token }
					set_variable = { input_3_amount@var:bu_token = global.building_futurized_input_amount_3@var:bu_token }
					set_variable = { input_4_amount@var:bu_token = global.building_futurized_input_amount_4@var:bu_token }
					set_variable = { input_5_amount@var:bu_token = global.building_futurized_input_amount_5@var:bu_token }

					# Capacities
					set_variable = { industrial_capacity_use@var:bu_token = global.building_futurized_industrial_capacity_use@var:bu_token }
					set_variable = { shipping_capacity@var:bu_token = global.building_futurized_output_shipping_capacity@var:bu_token }
					set_variable = { industrial_capacity@var:bu_token = global.building_futurized_output_industrial_capacity@var:bu_token }
				}

			#

			set_temp_variable = { input_r_1 = input_1_type@var:bu_token }
			set_temp_variable = { input_r_2 = input_2_type@var:bu_token }
			set_temp_variable = { input_r_3 = input_3_type@var:bu_token }
			set_temp_variable = { input_r_4 = input_4_type@var:bu_token }
			set_temp_variable = { input_r_5 = input_5_type@var:bu_token }

			# Modifiers
				set_temp_variable = { output_modifier_temp = industry_output_factor@var:bu_token }
				add_to_temp_variable = { output_modifier_temp = 1 }

				set_temp_variable = { throughput_modifier_temp = industry_throughput_factor@var:bu_token }
				add_to_temp_variable = { throughput_modifier_temp = 1 }

				set_temp_variable = { input_modifier_temp = industry_input_factor@var:bu_token }
				add_to_temp_variable = { input_modifier_temp = 1 }
			#

			set_variable = { jobs@var:bu_token = peasants_jobs@var:bu_token  }
			add_to_variable = { jobs@var:bu_token = laborers_jobs@var:bu_token }
			add_to_variable = { jobs@var:bu_token = workers_jobs@var:bu_token }
			add_to_variable = { jobs@var:bu_token = professionals_jobs@var:bu_token }
			add_to_variable = { jobs@var:bu_token = specialists_jobs@var:bu_token }
			add_to_variable = { jobs@var:bu_token = aristocrats_jobs@var:bu_token }
			add_to_variable = { jobs@var:bu_token = capitalists_jobs@var:bu_token }

			# Output 1 - Always does output 1
				multiply_variable = { max_production_1@var:bu_token = throughput_modifier_temp }
				multiply_variable = { max_production_1@var:bu_token = output_modifier_temp }

				set_variable = { revenue_goods_1@var:bu_token = max_production_1@var:bu_token }
				multiply_variable = { revenue_goods_1@var:bu_token = price@var:bu_resource_1 }
				
				set_variable = { revenue_goods@var:bu_token = revenue_goods_1@var:bu_token }
			#

			if = { # Output 2-5
				limit = {
					check_variable = { max_production_2@var:bu_token > 0 }
				}
				multiply_variable = { max_production_2@var:bu_token = throughput_modifier_temp }
				multiply_variable = { max_production_2@var:bu_token = output_modifier_temp }

				set_variable = { revenue_goods_2@var:bu_token = max_production_2@var:bu_token }
				multiply_variable = { revenue_goods_2@var:bu_token = price@var:bu_resource_2 }

				add_to_variable = { revenue_goods@var:bu_token = revenue_goods_2@var:bu_token }
				
				if = { # Output 3
					limit = {
						check_variable = { max_production_3@var:bu_token > 0 }
					}
					multiply_variable = { max_production_3@var:bu_token = throughput_modifier_temp }
					multiply_variable = { max_production_3@var:bu_token = output_modifier_temp }

					set_variable = { revenue_goods_3@var:bu_token = max_production_3@var:bu_token }
					multiply_variable = { revenue_goods_3@var:bu_token = price@var:bu_resource_3 }
					
					add_to_variable = { revenue_goods@var:bu_token = revenue_goods_3@var:bu_token }
					
					if = { # Output 4
						limit = {
							check_variable = { max_production_4@var:bu_token > 0 }
						}
						multiply_variable = { max_production_4@var:bu_token = throughput_modifier_temp }
						multiply_variable = { max_production_4@var:bu_token = output_modifier_temp }

						set_variable = { revenue_goods_4@var:bu_token = max_production_4@var:bu_token }
						multiply_variable = { revenue_goods_4@var:bu_token = price@var:bu_resource_4 }
						
						add_to_variable = { revenue_goods@var:bu_token = revenue_goods_4@var:bu_token }

						if = { # Output 5
							limit = {
								check_variable = { max_production_5@var:bu_token > 0 }
							}
							multiply_variable = { max_production_5@var:bu_token = throughput_modifier_temp }
							multiply_variable = { max_production_5@var:bu_token = output_modifier_temp }

							set_variable = { revenue_goods_5@var:bu_token = max_production_5@var:bu_token }
							multiply_variable = { revenue_goods_5@var:bu_token = price@var:bu_resource_5 }
							
							add_to_variable = { revenue_goods@var:bu_token = revenue_goods_5@var:bu_token }
						}
						else = {
							set_variable = { revenue_goods_5@var:bu_token = 0 }
						}
					}
					else = {
						set_variable = { revenue_goods_4@var:bu_token = 0 }
						set_variable = { revenue_goods_5@var:bu_token = 0 }
					}
				}
				else = {
					set_variable = { revenue_goods_3@var:bu_token = 0 }
					set_variable = { revenue_goods_4@var:bu_token = 0 }
					set_variable = { revenue_goods_5@var:bu_token = 0 }
				}
			}
			else = {
				set_variable = { revenue_goods_2@var:bu_token = 0 }
				set_variable = { revenue_goods_3@var:bu_token = 0 }
				set_variable = { revenue_goods_4@var:bu_token = 0 }
				set_variable = { revenue_goods_5@var:bu_token = 0 }
			}

			# Input 1 - Always does input 1
				multiply_variable = { input_1_amount@var:bu_token = throughput_modifier_temp }
				multiply_variable = { input_1_amount@var:bu_token = input_modifier_temp }

				set_variable = { input_1_expenses@var:bu_token = input_1_amount@var:bu_token }
				multiply_variable = { input_1_expenses@var:bu_token = price@var:input_r_1 }
				set_variable = { expenses_input@var:bu_token = input_1_expenses@var:bu_token }
			#

			if = { # Input 2-5
				limit = {
					check_variable = { input_2_amount@var:bu_token > 0 }
				}
				multiply_variable = { input_2_amount@var:bu_token = throughput_modifier_temp }
				multiply_variable = { input_2_amount@var:bu_token = input_modifier_temp }

				set_variable = { input_2_expenses@var:bu_token = input_2_amount@var:bu_token }
				multiply_variable = { input_2_expenses@var:bu_token = price@var:input_r_2 }
				add_to_variable = { expenses_input@var:bu_token = input_2_expenses@var:bu_token }
				
				if = { # Input 3
					limit = {
						check_variable = { input_3_amount@var:bu_token > 0 }
					}
					multiply_variable = { input_3_amount@var:bu_token = throughput_modifier_temp }
					multiply_variable = { input_3_amount@var:bu_token = input_modifier_temp }

					set_variable = { input_3_expenses@var:bu_token = input_3_amount@var:bu_token }
					multiply_variable = { input_3_expenses@var:bu_token = price@var:input_r_3 }
					add_to_variable = { expenses_input@var:bu_token = input_3_expenses@var:bu_token }
					
					if = { # Input 4
						limit = {
							check_variable = { input_4_amount@var:bu_token > 0 }
						}
						multiply_variable = { input_4_amount@var:bu_token = throughput_modifier_temp }
						multiply_variable = { input_4_amount@var:bu_token = input_modifier_temp }

						set_variable = { input_4_expenses@var:bu_token = input_4_amount@var:bu_token }
						multiply_variable = { input_4_expenses@var:bu_token = price@var:input_r_4 }
						add_to_variable = { expenses_input@var:bu_token = input_4_expenses@var:bu_token }
						
						if = { # Input 5
							limit = {
								check_variable = { input_5_amount@var:bu_token > 0 }
							}
							multiply_variable = { input_5_amount@var:bu_token = throughput_modifier_temp }
							multiply_variable = { input_5_amount@var:bu_token = input_modifier_temp }

							set_variable = { input_5_expenses@var:bu_token = input_5_amount@var:bu_token }
							multiply_variable = { input_5_expenses@var:bu_token = price@var:input_r_5 }
							add_to_variable = { expenses_input@var:bu_token = input_5_expenses@var:bu_token }
							
						}
						else = {
							set_variable = { input_5_expenses@var:bu_token = 0 }
						}
					}
					else = {
						set_variable = { input_4_expenses@var:bu_token = 0 }
						set_variable = { input_5_expenses@var:bu_token = 0 }
					}
				}
				else = {
					set_variable = { input_3_expenses@var:bu_token = 0 }
					set_variable = { input_4_expenses@var:bu_token = 0 }
					set_variable = { input_5_expenses@var:bu_token = 0 }
				}
			}
			else = {
				set_variable = { input_2_expenses@var:bu_token = 0 }
				set_variable = { input_3_expenses@var:bu_token = 0 }
				set_variable = { input_4_expenses@var:bu_token = 0 }
				set_variable = { input_5_expenses@var:bu_token = 0 }
			}
			
			#Capacities
				set_variable = { industrial_capacity_use@var:bu_token = global.building_industrial_capacity_use@var:bu_token } # remove
				multiply_variable = { industrial_capacity_use@var:bu_token = throughput_modifier_temp }
				multiply_variable = { industrial_capacity_use@var:bu_token = input_modifier_temp }
				set_variable = { expenses_industrial_capacity@var:bu_token = industrial_capacity_use@var:bu_token }
				multiply_variable = { expenses_industrial_capacity@var:bu_token = global.base_price_industrial_capacity }

				multiply_variable = { industrial_capacity@var:bu_token = throughput_modifier_temp }
				multiply_variable = { industrial_capacity@var:bu_token = output_modifier_temp }
				set_variable = { revenue_industrial_capacity@var:bu_token = industrial_capacity@var:bu_token }
				multiply_variable = { revenue_industrial_capacity@var:bu_token = global.base_price_industrial_capacity }
			#
		
			#Productivity
				set_variable = { revenue@var:bu_token = revenue_goods@var:bu_token }
				add_to_variable = { revenue@var:bu_token = revenue_industrial_capacity@var:bu_token }

				set_variable = { expenses@var:bu_token = expenses_input@var:bu_token }
				add_to_variable = { expenses@var:bu_token = expenses_industrial_capacity@var:bu_token }

				set_variable = { productivity@var:bu_token = revenue@var:bu_token }
				subtract_from_variable = { productivity@var:bu_token = expenses@var:bu_token }
				divide_variable = { productivity@var:bu_token = jobs@var:bu_token }
				
				set_variable = { base_productivity@var:bu_token = revenue@var:bu_token }
				subtract_from_variable = { base_productivity@var:bu_token = expenses@var:bu_token }
				divide_variable = { base_productivity@var:bu_token = payroll_multiplier@var:bu_token }
			#
		}
	}
#

# Production Methods Update
	update_national_production_methods = {
		for_each_loop = { # Industries
			array = global.industry_token_array
			value = industry_token

			# UNLOCKED PRODUCTION METHODS
			set_variable = { latest_production_method@var:industry_token = 0 }
			clear_array = building_unlocked_pms@var:industry_token
			for_each_loop = {
				array = global.building_production_methods@var:industry_token
				value = pm_token
				if = {
					limit = {
						OR = {
							check_variable = { global.pm_tech_unlock@var:pm_token = 0 }
							AND = {
								NOT = { check_variable = { global.pm_tech_unlock@var:pm_token = -1 } }
								set_temp_variable = { tech_temp = global.pm_tech_unlock@var:pm_token }
								has_tech = var:tech_temp
							}
						}
					}
					add_to_array = { building_unlocked_pms@var:industry_token = pm_token }
					set_variable = { latest_production_method@var:industry_token = pm_token }
				}
			}
			# UNLOCKED AUTOMATION METHODS
			set_variable = { latest_automation_method@var:industry_token = 0 }
			clear_array = building_unlocked_ams@var:industry_token
			for_each_loop = {
				array = global.building_automation_methods@var:industry_token
				value = pm_token
				if = {
					limit = {
						OR = {
							check_variable = { global.pm_tech_unlock@var:pm_token = 0 }
							AND = {
								NOT = { check_variable = { global.pm_tech_unlock@var:pm_token = -1 } }
								set_temp_variable = { tech_temp = global.pm_tech_unlock@var:pm_token }
								has_tech = var:tech_temp
							}
						}
					}
					add_to_array = { building_unlocked_ams@var:industry_token = pm_token }
					set_variable = { latest_automation_method@var:industry_token = pm_token }
				}
			}
		}

		for_each_loop = { # Loop through PM token array to add them to country
			array = global.pm_token_array
			value = pm_token

			set_variable = { pm_output_multiplier@var:pm_token = global.pm_output_multiplier@var:pm_token }
			
			set_variable = { pm_shipping_capacity@var:pm_token = global.pm_shipping_capacity@var:pm_token }
			set_variable = { pm_industrial_capacity@var:pm_token = global.pm_industrial_capacity@var:pm_token }
			set_variable = { pm_industrial_capacity_use@var:pm_token = global.pm_industrial_capacity_use@var:pm_token }

			set_variable = { pm_construction_duration@var:pm_token = global.pm_construction_duration@var:pm_token }
			clear_array = pm_construction_input@var:pm_token
			clear_array = pm_construction_input_amount@var:pm_token
			for_each_loop = { # Add inputs
				array = global.pm_construction_input@var:pm_token
				value = input_token
				index = pm_input_i

				add_to_array = { pm_construction_input@var:pm_token = input_token }
				add_to_array = { pm_construction_input_amount@var:pm_token = global.pm_construction_input_amount@var:pm_token^pm_input_i }
			}

			set_variable = { pm_retooling_duration@var:pm_token = global.pm_retooling_duration@var:pm_token }
			
			clear_array = pm_input@var:pm_token
			clear_array = pm_input_amount@var:pm_token
			for_each_loop = { # Add inputs
				array = global.pm_input@var:pm_token
				value = input_token
				index = pm_input_i

				add_to_array = { pm_input@var:pm_token = input_token }
				add_to_array = { pm_input_amount@var:pm_token = global.pm_input_amount@var:pm_token^pm_input_i }
			}
			
			set_variable = { pm_workforce_peasants@var:pm_token = global.pm_workforce_peasants@var:pm_token }
			set_variable = { pm_workforce_laborers@var:pm_token = global.pm_workforce_laborers@var:pm_token }
			set_variable = { pm_workforce_workers@var:pm_token = global.pm_workforce_workers@var:pm_token }
			set_variable = { pm_workforce_professionals@var:pm_token = global.pm_workforce_professionals@var:pm_token }
			set_variable = { pm_workforce_specialists@var:pm_token = global.pm_workforce_specialists@var:pm_token }
		}

		# Apply Tech Modiifers
		# Govt
			add_to_variable = { pm_workforce_laborers@token:pm_arms_factory = modifier@pm_arms_factory_laborers_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_arms_factory = modifier@pm_arms_factory_workers_modifier }
			add_to_variable = { pm_workforce_professionals@token:pm_arms_factory = modifier@pm_arms_factory_professionals_modifier }
			add_to_variable = { pm_workforce_specialists@token:pm_arms_factory = modifier@pm_arms_factory_specialists_modifier }
			
			add_to_variable = { pm_workforce_laborers@token:pm_industrial_complex = modifier@pm_industrial_complex_laborers_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_industrial_complex = modifier@pm_industrial_complex_workers_modifier }
			add_to_variable = { pm_workforce_professionals@token:pm_industrial_complex = modifier@pm_industrial_complex_professionals_modifier }
			add_to_variable = { pm_workforce_specialists@token:pm_industrial_complex = modifier@pm_industrial_complex_specialists_modifier }
			
			add_to_variable = { pm_workforce_laborers@token:pm_dockyard = modifier@pm_dockyard_laborers_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_dockyard = modifier@pm_dockyard_workers_modifier }
			add_to_variable = { pm_workforce_professionals@token:pm_dockyard = modifier@pm_dockyard_professionals_modifier }
			add_to_variable = { pm_workforce_specialists@token:pm_dockyard = modifier@pm_dockyard_specialists_modifier }
		#
		# Infrastructure
			## Infrastructure
			# Production
			add_to_variable = { pm_output_multiplier@token:pm_dirt_paths = modifier@pm_dirt_paths_output_modifier }
			add_to_variable = { pm_industrial_capacity@token:pm_dirt_paths = modifier@pm_dirt_paths_industrial_capacity_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_gravel_roads = modifier@pm_gravel_roads_output_modifier }
			add_to_variable = { pm_industrial_capacity@token:pm_gravel_roads = modifier@pm_gravel_roads_industrial_capacity_modifier }
			add_to_variable = { pm_input_amount@token:pm_gravel_roads^0 = modifier@pm_gravel_roads_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_gravel_roads^1 = modifier@pm_gravel_roads_wood_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_paved_streets = modifier@pm_paved_streets_output_modifier }
			add_to_variable = { pm_industrial_capacity@token:pm_paved_streets = modifier@pm_paved_streets_industrial_capacity_modifier }
			add_to_variable = { pm_input_amount@token:pm_paved_streets^0 = modifier@pm_paved_streets_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_paved_streets^1 = modifier@pm_paved_streets_consumer_goods_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_paved_streets^2 = modifier@pm_paved_streets_machinery_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_highways = modifier@pm_highways_output_modifier }
			add_to_variable = { pm_industrial_capacity@token:pm_highways = modifier@pm_highways_industrial_capacity_modifier }
			add_to_variable = { pm_input_amount@token:pm_highways^0 = modifier@pm_highways_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_highways^1 = modifier@pm_highways_consumer_goods_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_highways^2 = modifier@pm_highways_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_highways^3 = modifier@pm_highways_steel_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_motorways = modifier@pm_motorways_output_modifier }
			add_to_variable = { pm_industrial_capacity@token:pm_motorways = modifier@pm_motorways_industrial_capacity_modifier }
			add_to_variable = { pm_input_amount@token:pm_motorways^0 = modifier@pm_motorways_steel_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_motorways^1 = modifier@pm_motorways_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_motorways^2 = modifier@pm_motorways_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_motorways^3 = modifier@pm_motorways_consumer_goods_input_modifier }

			## Railways
			# Production
			add_to_variable = { pm_output_multiplier@token:pm_steam_locomotives = modifier@pm_steam_locomotives_output_modifier }
			add_to_variable = { pm_industrial_capacity@token:pm_steam_locomotives = modifier@pm_steam_locomotives_industrial_capacity_modifier }
			add_to_variable = { pm_input_amount@token:pm_steam_locomotives^0 = modifier@pm_steam_locomotives_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_steam_locomotives^1 = modifier@pm_steam_locomotives_coal_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_steam_locomotives^2 = modifier@pm_steam_locomotives_iron_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_steam_locomotives^3 = modifier@pm_steam_locomotives_steel_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_steam_locomotives^4 = modifier@pm_steam_locomotives_wood_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_steam_locomotives^5 = modifier@pm_steam_locomotives_tools_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_diesel_locomotives = modifier@pm_diesel_locomotives_output_modifier }
			add_to_variable = { pm_industrial_capacity@token:pm_diesel_locomotives = modifier@pm_diesel_locomotives_industrial_capacity_modifier }
			add_to_variable = { pm_input_amount@token:pm_diesel_locomotives^0 = modifier@pm_diesel_locomotives_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_diesel_locomotives^1 = modifier@pm_diesel_locomotives_oil_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_diesel_locomotives^2 = modifier@pm_diesel_locomotives_steel_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_diesel_locomotives^3 = modifier@pm_diesel_locomotives_wood_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_diesel_locomotives^4 = modifier@pm_diesel_locomotives_tools_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_electric_locomotives = modifier@pm_electric_locomotives_output_modifier }
			add_to_variable = { pm_industrial_capacity@token:pm_electric_locomotives = modifier@pm_electric_locomotives_industrial_capacity_modifier }
			add_to_variable = { pm_input_amount@token:pm_electric_locomotives^0 = modifier@pm_electric_locomotives_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_electric_locomotives^1 = modifier@pm_electric_locomotives_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_electric_locomotives^2 = modifier@pm_electric_locomotives_steel_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_electric_locomotives^3 = modifier@pm_electric_locomotives_electronics_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_electric_locomotives^4 = modifier@pm_electric_locomotives_wood_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_electric_locomotives^5 = modifier@pm_electric_locomotives_tools_input_modifier }

			# Automation

			## Ports
			# Production

			# Automation
		#
		# Logging
			# Production
			add_to_variable = { pm_output_multiplier@token:pm_simple_forestry = modifier@pm_simple_forestry_output_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_saw_mills = modifier@pm_saw_mills_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_saw_mills = modifier@pm_saw_mills_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_laborers@token:pm_saw_mills = modifier@pm_saw_mills_laborers_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_saw_mills = modifier@pm_saw_mills_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_saw_mills^0 = modifier@pm_saw_mills_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_saw_mills^1 = modifier@pm_saw_mills_tools_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_chainsaws = modifier@pm_chainsaws_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_chainsaws = modifier@pm_chainsaws_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_chainsaws = modifier@pm_chainsaws_workers_required_modifier }
			add_to_variable = { pm_workforce_professionals@token:pm_chainsaws = modifier@pm_chainsaws_professionals_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_chainsaws^0 = modifier@pm_chainsaws_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_chainsaws^1 = modifier@pm_chainsaws_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_chainsaws^2 = modifier@pm_chainsaws_oil_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_precision_forestry = modifier@pm_precision_forestry_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_precision_forestry = modifier@pm_precision_forestry_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_professionals@token:pm_precision_forestry = modifier@pm_precision_forestry_professionals_required_modifier }
			add_to_variable = { pm_workforce_specialists@token:pm_precision_forestry = modifier@pm_precision_forestry_specialists_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_precision_forestry^0 = modifier@pm_precision_forestry_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_precision_forestry^1 = modifier@pm_precision_forestry_oil_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_precision_forestry^2 = modifier@pm_precision_forestry_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_precision_forestry^3 = modifier@pm_precision_forestry_computers_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_precision_forestry^4 = modifier@pm_precision_forestry_tools_input_modifier }

			# Automation
			add_to_variable = { pm_workforce_laborers@token:pm_river_power = modifier@pm_river_power_laborers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_river_power^0 = modifier@pm_river_power_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_river_power^1 = modifier@pm_river_power_wood_input_modifier }

			add_to_variable = { pm_workforce_laborers@token:pm_steam_power = modifier@pm_steam_power_laborers_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_steam_power = modifier@pm_steam_power_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_steam_power^0 = modifier@pm_steam_power_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_steam_power^1 = modifier@pm_steam_power_coal_input_modifier }
			
			add_to_variable = { pm_workforce_laborers@token:pm_diesel_power = modifier@pm_diesel_power_laborers_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_diesel_power = modifier@pm_diesel_power_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_diesel_power^0 = modifier@pm_diesel_power_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_diesel_power^1 = modifier@pm_diesel_power_oil_input_modifier }
			
			add_to_variable = { pm_workforce_workers@token:pm_electrical_power = modifier@pm_electrical_power_workers_required_modifier }
			add_to_variable = { pm_workforce_professionals@token:pm_electrical_power = modifier@pm_electrical_power_professionals_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_electrical_power^0 = modifier@pm_electrical_power_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_electrical_power^1 = modifier@pm_electrical_power_electronics_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_electrical_power^2 = modifier@pm_electrical_power_electricity_input_modifier }
			
			add_to_variable = { pm_workforce_professionals@token:pm_logging_machines = modifier@pm_logging_machines_professionals_required_modifier }
			add_to_variable = { pm_workforce_specialists@token:pm_logging_machines = modifier@pm_logging_machines_specialists_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_logging_machines^0 = modifier@pm_logging_machines_vehicles_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_logging_machines^1 = modifier@pm_logging_machines_oil_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_logging_machines^2 = modifier@pm_logging_machines_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_logging_machines^3 = modifier@pm_logging_machines_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_logging_machines^4 = modifier@pm_logging_machines_electronics_input_modifier }
		#
		# Mining
			# Production
			add_to_variable = { pm_output_multiplier@token:pm_basic_extraction = modifier@pm_basic_extraction_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_basic_extraction = modifier@pm_basic_extraction_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_laborers@token:pm_basic_extraction = modifier@pm_basic_extraction_laborers_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_basic_extraction = modifier@pm_basic_extraction_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_basic_extraction^0 = modifier@pm_basic_extraction_wood_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_basic_extraction^1 = modifier@pm_basic_extraction_tools_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_shaft_mining = modifier@pm_shaft_mining_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_shaft_mining = modifier@pm_shaft_mining_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_laborers@token:pm_shaft_mining = modifier@pm_shaft_mining_laborers_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_shaft_mining = modifier@pm_shaft_mining_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_shaft_mining^0 = modifier@pm_shaft_mining_wood_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_shaft_mining^1 = modifier@pm_shaft_mining_tools_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_blasting = modifier@pm_blasting_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_blasting = modifier@pm_blasting_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_laborers@token:pm_blasting = modifier@pm_blasting_laborers_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_blasting = modifier@pm_blasting_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_blasting^0 = modifier@pm_blasting_wood_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_blasting^1 = modifier@pm_blasting_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_blasting^2 = modifier@pm_blasting_chemicals_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_drilling = modifier@pm_drilling_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_drilling = modifier@pm_drilling_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_laborers@token:pm_drilling = modifier@pm_drilling_laborers_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_drilling = modifier@pm_drilling_workers_required_modifier }
			add_to_variable = { pm_workforce_professionals@token:pm_drilling = modifier@pm_drilling_professionals_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_drilling^0 = modifier@pm_drilling_steel_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_drilling^1 = modifier@pm_drilling_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_drilling^2 = modifier@pm_drilling_coal_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_drilling^3 = modifier@pm_drilling_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_drilling^4 = modifier@pm_drilling_chemicals_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_excavation = modifier@pm_excavation_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_excavation = modifier@pm_excavation_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_excavation = modifier@pm_excavation_workers_required_modifier }
			add_to_variable = { pm_workforce_professionals@token:pm_excavation = modifier@pm_excavation_professionals_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_excavation^0 = modifier@pm_excavation_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_excavation^1 = modifier@pm_excavation_steel_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_excavation^2 = modifier@pm_excavation_vehicles_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_excavation^3 = modifier@pm_excavation_chemicals_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_excavation^4 = modifier@pm_excavation_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_excavation^5 = modifier@pm_excavation_oil_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_excavation^6 = modifier@pm_excavation_tungsten_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_precision_mining = modifier@pm_precision_mining_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_precision_mining = modifier@pm_precision_mining_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_professionals@token:pm_precision_mining = modifier@pm_precision_mining_professionals_required_modifier }
			add_to_variable = { pm_workforce_specialists@token:pm_precision_mining = modifier@pm_precision_mining_specialists_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_precision_mining^0 = modifier@pm_precision_mining_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_precision_mining^1 = modifier@pm_precision_mining_vehicles_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_precision_mining^2 = modifier@pm_precision_mining_computers_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_precision_mining^3 = modifier@pm_precision_mining_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_precision_mining^4 = modifier@pm_precision_mining_oil_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_precision_mining^5 = modifier@pm_precision_mining_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_precision_mining^6 = modifier@pm_precision_mining_chemicals_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_precision_mining^7 = modifier@pm_precision_mining_tungsten_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_mantle_extraction = modifier@pm_mantle_extraction_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_mantle_extraction = modifier@pm_mantle_extraction_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_mantle_extraction^0 = modifier@pm_mantle_extraction_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mantle_extraction^1 = modifier@pm_mantle_extraction_vehicles_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mantle_extraction^2 = modifier@pm_mantle_extraction_computers_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mantle_extraction^3 = modifier@pm_mantle_extraction_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mantle_extraction^4 = modifier@pm_mantle_extraction_chemicals_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mantle_extraction^5 = modifier@pm_mantle_extraction_oil_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mantle_extraction^6 = modifier@pm_mantle_extraction_tungsten_input_modifier }
			
			# Automation
			add_to_variable = { pm_workforce_laborers@token:pm_steam_pump = modifier@pm_steam_pump_laborers_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_steam_pump = modifier@pm_steam_pump_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_steam_pump^0 = modifier@pm_steam_pump_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_steam_pump^1 = modifier@pm_steam_pump_coal_input_modifier }
			
			add_to_variable = { pm_workforce_workers@token:pm_conveyor_belts = modifier@pm_conveyor_belts_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_conveyor_belts^0 = modifier@pm_conveyor_belts_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_conveyor_belts^1 = modifier@pm_conveyor_belts_coal_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_conveyor_belts^2 = modifier@pm_conveyor_belts_iron_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_conveyor_belts^3 = modifier@pm_conveyor_belts_steel_input_modifier }
			
			add_to_variable = { pm_workforce_workers@token:pm_mine_electrification = modifier@pm_mine_electrification_workers_required_modifier }
			add_to_variable = { pm_workforce_professionals@token:pm_mine_electrification = modifier@pm_mine_electrification_professionals_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_mine_electrification^0 = modifier@pm_mine_electrification_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mine_electrification^1 = modifier@pm_mine_electrification_coal_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mine_electrification^2 = modifier@pm_mine_electrification_steel_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mine_electrification^3 = modifier@pm_mine_electrification_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mine_electrification^4 = modifier@pm_mine_electrification_electronics_input_modifier }
			
			add_to_variable = { pm_workforce_professionals@token:pm_mine_computerization = modifier@pm_mine_computerization_professionals_required_modifier }
			add_to_variable = { pm_workforce_specialists@token:pm_mine_computerization = modifier@pm_mine_computerization_specialists_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_mine_computerization^0 = modifier@pm_mine_computerization_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mine_computerization^1 = modifier@pm_mine_computerization_oil_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mine_computerization^2 = modifier@pm_mine_computerization_computers_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mine_computerization^3 = modifier@pm_mine_computerization_electricity_input_modifier }
			
			add_to_variable = { pm_workforce_specialists@token:pm_autonomous_mining = modifier@pm_autonomous_mining_specialists_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_autonomous_mining^0 = modifier@pm_autonomous_mining_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_autonomous_mining^1 = modifier@pm_autonomous_mining_computers_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_autonomous_mining^2 = modifier@pm_autonomous_mining_electricity_input_modifier }
		#
		# Oil
			# Production
			add_to_variable = { pm_output_multiplier@token:pm_basic_oil_production = modifier@pm_basic_oil_production_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_basic_oil_production = modifier@pm_basic_oil_production_industrial_capacity_use_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_crude_oil_distillation = modifier@pm_crude_oil_distillation_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_crude_oil_distillation = modifier@pm_crude_oil_distillation_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_crude_oil_distillation^0 = modifier@pm_crude_oil_distillation_iron_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_crude_oil_distillation^1 = modifier@pm_crude_oil_distillation_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_crude_oil_distillation^2 = modifier@pm_crude_oil_distillation_chemicals_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_cracking = modifier@pm_cracking_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_cracking = modifier@pm_cracking_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_cracking^0 = modifier@pm_cracking_steel_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_cracking^1 = modifier@pm_cracking_chemicals_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_cracking^2 = modifier@pm_cracking_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_cracking^3 = modifier@pm_cracking_tools_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_catalytic_cracking = modifier@pm_catalytic_cracking_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_catalytic_cracking = modifier@pm_catalytic_cracking_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_catalytic_cracking^0 = modifier@pm_catalytic_cracking_steel_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_catalytic_cracking^1 = modifier@pm_catalytic_cracking_chemicals_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_catalytic_cracking^2 = modifier@pm_catalytic_cracking_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_catalytic_cracking^3 = modifier@pm_catalytic_cracking_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_catalytic_cracking^4 = modifier@pm_catalytic_cracking_electronics_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_catalytic_cracking^5 = modifier@pm_catalytic_cracking_tools_input_modifier }
			
			# Automation
			add_to_variable = { pm_workforce_laborers@token:pm_oil_drilling = modifier@pm_oil_drilling_laborers_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_oil_drilling = modifier@pm_oil_drilling_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_oil_drilling^0 = modifier@pm_oil_drilling_wood_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_oil_drilling^1 = modifier@pm_oil_drilling_iron_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_oil_drilling^2 = modifier@pm_oil_drilling_machinery_input_modifier }
			
			add_to_variable = { pm_workforce_workers@token:pm_steam_powered_derricks = modifier@pm_steam_powered_derricks_workers_required_modifier }
			add_to_variable = { pm_workforce_professionals@token:pm_steam_powered_derricks = modifier@pm_steam_powered_derricks_professionals_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_steam_powered_derricks^0 = modifier@pm_steam_powered_derricks_steel_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_steam_powered_derricks^1 = modifier@pm_steam_powered_derricks_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_steam_powered_derricks^2 = modifier@pm_steam_powered_derricks_coal_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_steam_powered_derricks^3 = modifier@pm_steam_powered_derricks_chemicals_input_modifier }

			add_to_variable = { pm_workforce_workers@token:pm_diesel_powered_derricks = modifier@pm_diesel_powered_derricks_workers_required_modifier }
			add_to_variable = { pm_workforce_professionals@token:pm_diesel_powered_derricks = modifier@pm_diesel_powered_derricks_professionals_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_diesel_powered_derricks^0 = modifier@pm_diesel_powered_derricks_steel_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_diesel_powered_derricks^1 = modifier@pm_diesel_powered_derricks_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_diesel_powered_derricks^2 = modifier@pm_diesel_powered_derricks_oil_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_diesel_powered_derricks^3 = modifier@pm_diesel_powered_derricks_appliances_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_diesel_powered_derricks^4 = modifier@pm_diesel_powered_derricks_electricity_input_modifier }
			
			add_to_variable = { pm_workforce_specialists@token:pm_smart_drilling = modifier@pm_smart_drilling_specialists_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_smart_drilling^0 = modifier@pm_smart_drilling_steel_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_smart_drilling^1 = modifier@pm_smart_drilling_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_smart_drilling^2 = modifier@pm_smart_drilling_oil_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_smart_drilling^3 = modifier@pm_smart_drilling_computers_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_smart_drilling^4 = modifier@pm_smart_drilling_electricity_input_modifier }
		#
		# Farming
			# Production
			add_to_variable = { pm_output_multiplier@token:pm_subsistence_farming = modifier@pm_subsistence_farming_output_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_basic_planting = modifier@pm_basic_planting_output_modifier }
			add_to_variable = { pm_input_amount@token:pm_basic_planting^0 = modifier@pm_basic_planting_wood_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_basic_planting^1 = modifier@pm_basic_planting_tools_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_intensive_agriculture = modifier@pm_intensive_agriculture_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_intensive_agriculture = modifier@pm_intensive_agriculture_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_laborers@token:pm_intensive_agriculture = modifier@pm_intensive_agriculture_laborers_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_intensive_agriculture = modifier@pm_intensive_agriculture_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_intensive_agriculture^0 = modifier@pm_intensive_agriculture_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_intensive_agriculture^1 = modifier@pm_intensive_agriculture_chemicals_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_chemical_fertilizers = modifier@pm_chemical_fertilizers_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_chemical_fertilizers = modifier@pm_chemical_fertilizers_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_laborers@token:pm_chemical_fertilizers = modifier@pm_chemical_fertilizers_laborers_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_chemical_fertilizers = modifier@pm_chemical_fertilizers_workers_required_modifier }
			add_to_variable = { pm_workforce_professionals@token:pm_chemical_fertilizers = modifier@pm_chemical_fertilizers_professionals_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_chemical_fertilizers^0 = modifier@pm_chemical_fertilizers_chemicals_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_chemical_fertilizers^1 = modifier@pm_chemical_fertilizers_tools_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_chemical_fertilizers = modifier@pm_chemical_fertilizers_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_chemical_fertilizers = modifier@pm_chemical_fertilizers_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_chemical_fertilizers^0 = modifier@pm_chemical_fertilizers_chemicals_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_chemical_fertilizers^1 = modifier@pm_chemical_fertilizers_tools_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_animal_husbandry = modifier@pm_animal_husbandry_output_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_slaughterhouses = modifier@pm_slaughterhouses_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_slaughterhouses = modifier@pm_slaughterhouses_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_laborers@token:pm_slaughterhouses = modifier@pm_slaughterhouses_laborers_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_slaughterhouses = modifier@pm_slaughterhouses_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_slaughterhouses^0 = modifier@pm_slaughterhouses_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_slaughterhouses^1 = modifier@pm_slaughterhouses_chemicals_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_factory_farms = modifier@pm_factory_farms_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_factory_farms = modifier@pm_factory_farms_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_factory_farms = modifier@pm_factory_farms_workers_required_modifier }
			add_to_variable = { pm_workforce_professionals@token:pm_factory_farms = modifier@pm_factory_farms_professionals_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_factory_farms^0 = modifier@pm_factory_farms_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_factory_farms^1 = modifier@pm_factory_farms_chemicals_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_factory_farms^2 = modifier@pm_factory_farms_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_factory_farms^3 = modifier@pm_factory_farms_oil_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_factory_farms^4 = modifier@pm_factory_farms_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_factory_farms^5 = modifier@pm_factory_farms_electronics_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_lab_grown_meat = modifier@pm_lab_grown_meat_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_lab_grown_meat = modifier@pm_lab_grown_meat_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_lab_grown_meat = modifier@pm_lab_grown_meat_workers_required_modifier }
			add_to_variable = { pm_workforce_professionals@token:pm_lab_grown_meat = modifier@pm_lab_grown_meat_professionals_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_lab_grown_meat^0 = modifier@pm_lab_grown_meat_chemicals_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_lab_grown_meat^1 = modifier@pm_lab_grown_meat_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_lab_grown_meat^2 = modifier@pm_lab_grown_meat_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_lab_grown_meat^3 = modifier@pm_lab_grown_meat_computers_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_lab_grown_meat^4 = modifier@pm_lab_grown_meat_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_lab_grown_meat^5 = modifier@pm_lab_grown_meat_electronics_input_modifier }

			# Automation
			add_to_variable = { pm_workforce_laborers@token:pm_farm_equipment = modifier@pm_farm_equipment_laborers_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_farm_equipment = modifier@pm_farm_equipment_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_farm_equipment^0 = modifier@pm_farm_equipment_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_farm_equipment^1 = modifier@pm_farm_equipment_machinery_input_modifier }
			
			add_to_variable = { pm_workforce_laborers@token:pm_automatic_irrigation = modifier@pm_automatic_irrigation_laborers_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_automatic_irrigation = modifier@pm_automatic_irrigation_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_automatic_irrigation^0 = modifier@pm_automatic_irrigation_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_automatic_irrigation^1 = modifier@pm_automatic_irrigation_machinery_input_modifier }
			
			add_to_variable = { pm_workforce_workers@token:pm_plantation_machinery = modifier@pm_plantation_machinery_workers_required_modifier }
			add_to_variable = { pm_workforce_professionals@token:pm_plantation_machinery = modifier@pm_plantation_machinery_professionals_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_plantation_machinery^0 = modifier@pm_plantation_machinery_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_plantation_machinery^1 = modifier@pm_plantation_machinery_oil_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_plantation_machinery^2 = modifier@pm_plantation_machinery_tools_input_modifier }
			
			add_to_variable = { pm_workforce_laborers@token:pm_traction_engine = modifier@pm_traction_engine_laborers_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_traction_engine = modifier@pm_traction_engine_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_traction_engine^0 = modifier@pm_traction_engine_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_traction_engine^1 = modifier@pm_traction_engine_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_traction_engine^2 = modifier@pm_traction_engine_coal_input_modifier }

			add_to_variable = { pm_workforce_professionals@token:pm_tractors = modifier@pm_tractors_professionals_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_tractors = modifier@pm_tractors_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_tractors^0 = modifier@pm_tractors_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_tractors^1 = modifier@pm_tractors_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_tractors^2 = modifier@pm_tractors_oil_input_modifier }
			
			add_to_variable = { pm_workforce_professionals@token:pm_agricultural_machines = modifier@pm_agricultural_machines_professionals_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_agricultural_machines = modifier@pm_agricultural_machines_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_agricultural_machines^0 = modifier@pm_agricultural_machines_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_agricultural_machines^1 = modifier@pm_agricultural_machines_oil_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_agricultural_machines^2 = modifier@pm_agricultural_machines_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_agricultural_machines^3 = modifier@pm_agricultural_machines_electricity_input_modifier }
			
			add_to_variable = { pm_workforce_professionals@token:pm_automated_agriculture = modifier@pm_automated_agriculture_professionals_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_automated_agriculture = modifier@pm_automated_agriculture_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_automated_agriculture^0 = modifier@pm_automated_agriculture_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_automated_agriculture^1 = modifier@pm_automated_agriculture_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_automated_agriculture^2 = modifier@pm_automated_agriculture_oil_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_automated_agriculture^3 = modifier@pm_automated_agriculture_computers_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_automated_agriculture^4 = modifier@pm_automated_agriculture_tools_input_modifier }
			
			add_to_variable = { pm_workforce_laborers@token:pm_ranching = modifier@pm_ranching_laborers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_ranching^0 = modifier@pm_ranching_wood_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_ranching^1 = modifier@pm_ranching_tools_input_modifier }
			
			add_to_variable = { pm_workforce_workers@token:pm_barbed_wire = modifier@pm_barbed_wire_workers_required_modifier }
			add_to_variable = { pm_workforce_professionals@token:pm_barbed_wire = modifier@pm_barbed_wire_professionals_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_barbed_wire^0 = modifier@pm_barbed_wire_wood_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_barbed_wire^1 = modifier@pm_barbed_wire_steel_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_barbed_wire^2 = modifier@pm_barbed_wire_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_barbed_wire^3 = modifier@pm_barbed_wire_tools_input_modifier }
			
			add_to_variable = { pm_workforce_professionals@token:pm_milking_machines = modifier@pm_milking_machines_professionals_required_modifier }
			add_to_variable = { pm_workforce_specialists@token:pm_milking_machines = modifier@pm_milking_machines_specialists_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_milking_machines^0 = modifier@pm_milking_machines_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_milking_machines^1 = modifier@pm_milking_machines_steel_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_milking_machines^2 = modifier@pm_milking_machines_wood_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_milking_machines^3 = modifier@pm_milking_machines_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_milking_machines^4 = modifier@pm_milking_machines_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_milking_machines^5 = modifier@pm_milking_machines_appliances_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_milking_machines^6 = modifier@pm_milking_machines_computers_input_modifier }
		#
		# Factories
			# Textiles
			add_to_variable = { pm_output_multiplier@token:pm_manual_sewing = modifier@pm_manual_sewing_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_manual_sewing = modifier@pm_manual_sewing_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_laborers@token:pm_manual_sewing = modifier@pm_manual_sewing_laborers_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_manual_sewing = modifier@pm_manual_sewing_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_manual_sewing^0 = modifier@pm_manual_sewing_fiber_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_spinning_machines = modifier@pm_spinning_machines_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_spinning_machines = modifier@pm_spinning_machines_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_laborers@token:pm_spinning_machines = modifier@pm_spinning_machines_laborers_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_spinning_machines = modifier@pm_spinning_machines_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_spinning_machines^0 = modifier@pm_spinning_machines_fiber_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_spinning_machines^1 = modifier@pm_spinning_machines_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_spinning_machines^2 = modifier@pm_spinning_machines_chemicals_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_sewing_machines = modifier@pm_sewing_machines_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_sewing_machines = modifier@pm_sewing_machines_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_laborers@token:pm_sewing_machines = modifier@pm_sewing_machines_laborers_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_sewing_machines = modifier@pm_sewing_machines_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_sewing_machines^0 = modifier@pm_sewing_machines_fiber_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_sewing_machines^1 = modifier@pm_sewing_machines_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_sewing_machines^2 = modifier@pm_sewing_machines_chemicals_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_electric_sewing_machines = modifier@pm_electric_sewing_machines_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_electric_sewing_machines = modifier@pm_electric_sewing_machines_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_electric_sewing_machines = modifier@pm_electric_sewing_machines_workers_required_modifier }
			add_to_variable = { pm_workforce_professionals@token:pm_electric_sewing_machines = modifier@pm_electric_sewing_machines_professionals_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_electric_sewing_machines^0 = modifier@pm_electric_sewing_machines_fiber_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_electric_sewing_machines^1 = modifier@pm_electric_sewing_machines_chemicals_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_electric_sewing_machines^2 = modifier@pm_electric_sewing_machines_appliances_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_electric_sewing_machines^3 = modifier@pm_electric_sewing_machines_electricity_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_laser_printers = modifier@pm_laser_printers_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_laser_printers = modifier@pm_laser_printers_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_professionals@token:pm_laser_printers = modifier@pm_laser_printers_professionals_required_modifier }
			add_to_variable = { pm_workforce_specialists@token:pm_laser_printers = modifier@pm_laser_printers_specialists_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_laser_printers^0 = modifier@pm_laser_printers_fiber_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_laser_printers^1 = modifier@pm_laser_printers_appliances_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_laser_printers^2 = modifier@pm_laser_printers_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_laser_printers^3 = modifier@pm_laser_printers_chemicals_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_3d_printed_textiles = modifier@pm_3d_printed_textiles_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_3d_printed_textiles = modifier@pm_3d_printed_textiles_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_3d_printed_textiles^0 = modifier@pm_3d_printed_textiles_fiber_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_3d_printed_textiles^1 = modifier@pm_3d_printed_textiles_appliances_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_3d_printed_textiles^2 = modifier@pm_3d_printed_textiles_computers_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_3d_printed_textiles^3 = modifier@pm_3d_printed_textiles_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_3d_printed_textiles^4 = modifier@pm_3d_printed_textiles_chemicals_input_modifier }

			# Steel
			add_to_variable = { pm_output_multiplier@token:pm_primitive_steelmaking = modifier@pm_primitive_steelmaking_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_primitive_steelmaking = modifier@pm_primitive_steelmaking_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_laborers@token:pm_primitive_steelmaking = modifier@pm_primitive_steelmaking_laborers_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_primitive_steelmaking = modifier@pm_primitive_steelmaking_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_primitive_steelmaking^0 = modifier@pm_primitive_steelmaking_iron_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_primitive_steelmaking^1 = modifier@pm_primitive_steelmaking_coal_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_primitive_steelmaking^2 = modifier@pm_primitive_steelmaking_tools_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_blister_steel_process = modifier@pm_blister_steel_process_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_blister_steel_process = modifier@pm_blister_steel_process_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_laborers@token:pm_blister_steel_process = modifier@pm_blister_steel_process_laborers_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_blister_steel_process = modifier@pm_blister_steel_process_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_blister_steel_process^0 = modifier@pm_blister_steel_process_iron_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_blister_steel_process^1 = modifier@pm_blister_steel_process_coal_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_blister_steel_process^2 = modifier@pm_blister_steel_process_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_blister_steel_process^3 = modifier@pm_blister_steel_process_tools_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_hot_blast_process = modifier@pm_hot_blast_process_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_hot_blast_process = modifier@pm_hot_blast_process_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_laborers@token:pm_hot_blast_process = modifier@pm_hot_blast_process_laborers_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_hot_blast_process = modifier@pm_hot_blast_process_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_hot_blast_process^0 = modifier@pm_hot_blast_process_iron_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_hot_blast_process^1 = modifier@pm_hot_blast_process_coal_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_hot_blast_process^2 = modifier@pm_hot_blast_process_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_hot_blast_process^3 = modifier@pm_hot_blast_process_tools_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_bessemer_process = modifier@pm_bessemer_process_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_bessemer_process = modifier@pm_bessemer_process_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_laborers@token:pm_bessemer_process = modifier@pm_bessemer_process_laborers_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_bessemer_process = modifier@pm_bessemer_process_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_bessemer_process^0 = modifier@pm_bessemer_process_iron_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_bessemer_process^1 = modifier@pm_bessemer_process_coal_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_bessemer_process^2 = modifier@pm_bessemer_process_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_bessemer_process^3 = modifier@pm_bessemer_process_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_bessemer_process^4 = modifier@pm_bessemer_process_chromium_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_bessemer_process^5 = modifier@pm_bessemer_process_tungsten_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_electric_arc_process = modifier@pm_electric_arc_process_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_electric_arc_process = modifier@pm_electric_arc_process_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_electric_arc_process = modifier@pm_electric_arc_process_workers_required_modifier }
			add_to_variable = { pm_workforce_professionals@token:pm_electric_arc_process = modifier@pm_electric_arc_process_professionals_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_electric_arc_process^0 = modifier@pm_electric_arc_process_iron_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_electric_arc_process^1 = modifier@pm_electric_arc_process_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_electric_arc_process^2 = modifier@pm_electric_arc_process_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_electric_arc_process^3 = modifier@pm_electric_arc_process_coal_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_electric_arc_process^4 = modifier@pm_electric_arc_process_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_electric_arc_process^5 = modifier@pm_electric_arc_process_electronics_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_electric_arc_process^6 = modifier@pm_electric_arc_process_chromium_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_electric_arc_process^7 = modifier@pm_electric_arc_process_tungsten_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_oxygen_converter_process = modifier@pm_oxygen_converter_process_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_oxygen_converter_process = modifier@pm_oxygen_converter_process_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_professionals@token:pm_oxygen_converter_process = modifier@pm_oxygen_converter_process_professionals_required_modifier }
			add_to_variable = { pm_workforce_specialists@token:pm_oxygen_converter_process = modifier@pm_oxygen_converter_process_specialists_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_oxygen_converter_process^0 = modifier@pm_oxygen_converter_process_iron_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_oxygen_converter_process^1 = modifier@pm_oxygen_converter_process_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_oxygen_converter_process^2 = modifier@pm_oxygen_converter_process_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_oxygen_converter_process^3 = modifier@pm_oxygen_converter_process_coal_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_oxygen_converter_process^4 = modifier@pm_oxygen_converter_process_electronics_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_oxygen_converter_process^5 = modifier@pm_oxygen_converter_process_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_oxygen_converter_process^6 = modifier@pm_oxygen_converter_process_chromium_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_oxygen_converter_process^7 = modifier@pm_oxygen_converter_process_tungsten_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_energy_optimizing_process = modifier@pm_energy_optimizing_process_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_energy_optimizing_process = modifier@pm_energy_optimizing_process_industrial_capacity_use_modifier }
			add_to_variable = { pm_workforce_professionals@token:pm_energy_optimizing_process = modifier@pm_energy_optimizing_process_professionals_required_modifier }
			add_to_variable = { pm_workforce_specialists@token:pm_energy_optimizing_process = modifier@pm_energy_optimizing_process_specialists_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_energy_optimizing_process^0 = modifier@pm_energy_optimizing_process_iron_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_energy_optimizing_process^1 = modifier@pm_energy_optimizing_process_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_energy_optimizing_process^2 = modifier@pm_energy_optimizing_process_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_energy_optimizing_process^3 = modifier@pm_energy_optimizing_process_coal_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_energy_optimizing_process^4 = modifier@pm_energy_optimizing_process_electronics_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_energy_optimizing_process^5 = modifier@pm_energy_optimizing_process_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_energy_optimizing_process^6 = modifier@pm_energy_optimizing_process_chromium_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_energy_optimizing_process^7 = modifier@pm_energy_optimizing_process_tungsten_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_hydrogen_steel_process = modifier@pm_hydrogen_steel_process_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_hydrogen_steel_process = modifier@pm_hydrogen_steel_process_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_hydrogen_steel_process^0 = modifier@pm_hydrogen_steel_process_iron_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_hydrogen_steel_process^1 = modifier@pm_hydrogen_steel_process_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_hydrogen_steel_process^2 = modifier@pm_hydrogen_steel_process_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_hydrogen_steel_process^3 = modifier@pm_hydrogen_steel_process_chemicals_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_hydrogen_steel_process^4 = modifier@pm_hydrogen_steel_process_electronics_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_hydrogen_steel_process^5 = modifier@pm_hydrogen_steel_process_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_hydrogen_steel_process^6 = modifier@pm_hydrogen_steel_process_chromium_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_hydrogen_steel_process^7 = modifier@pm_hydrogen_steel_process_tungsten_input_modifier }

			# Machinery
			add_to_variable = { pm_output_multiplier@token:pm_machine_tools = modifier@pm_machine_tools_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_machine_tools = modifier@pm_machine_tools_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_machine_tools^0 = modifier@pm_machine_tools_steel_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_machine_tools^1 = modifier@pm_machine_tools_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_machine_tools^2 = modifier@pm_machine_tools_copper_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_specialized_machinery = modifier@pm_specialized_machinery_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_specialized_machinery = modifier@pm_specialized_machinery_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_specialized_machinery^0 = modifier@pm_specialized_machinery_steel_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_specialized_machinery^1 = modifier@pm_specialized_machinery_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_specialized_machinery^2 = modifier@pm_specialized_machinery_copper_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_specialized_machinery^3 = modifier@pm_specialized_machinery_chromium_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_modern_machinery = modifier@pm_modern_machinery_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_modern_machinery = modifier@pm_modern_machinery_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_modern_machinery^0 = modifier@pm_modern_machinery_steel_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_modern_machinery^1 = modifier@pm_modern_machinery_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_modern_machinery^2 = modifier@pm_modern_machinery_chromium_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_modern_machinery^3 = modifier@pm_modern_machinery_electronics_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_modern_machinery^4 = modifier@pm_modern_machinery_copper_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_machining_robots = modifier@pm_machining_robots_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_machining_robots = modifier@pm_machining_robots_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_machining_robots^0 = modifier@pm_machining_robots_steel_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_machining_robots^1 = modifier@pm_machining_robots_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_machining_robots^2 = modifier@pm_machining_robots_electronics_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_machining_robots^3 = modifier@pm_machining_robots_aluminum_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_machining_robots^4 = modifier@pm_machining_robots_chromium_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_machining_robots^5 = modifier@pm_machining_robots_silicon_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_assembly_robots = modifier@pm_assembly_robots_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_assembly_robots = modifier@pm_assembly_robots_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_assembly_robots^0 = modifier@pm_assembly_robots_steel_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_assembly_robots^1 = modifier@pm_assembly_robots_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_assembly_robots^2 = modifier@pm_assembly_robots_appliances_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_assembly_robots^3 = modifier@pm_assembly_robots_aluminum_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_assembly_robots^4 = modifier@pm_assembly_robots_plastics_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_assembly_robots^5 = modifier@pm_assembly_robots_chromium_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_assembly_robots^6 = modifier@pm_assembly_robots_silicon_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_smart_robots = modifier@pm_smart_robots_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_smart_robots = modifier@pm_smart_robots_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_smart_robots^0 = modifier@pm_smart_robots_computers_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_smart_robots^1 = modifier@pm_smart_robots_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_smart_robots^2 = modifier@pm_smart_robots_plastics_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_smart_robots^3 = modifier@pm_smart_robots_steel_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_smart_robots^4 = modifier@pm_smart_robots_aluminum_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_smart_robots^5 = modifier@pm_smart_robots_chromium_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_smart_robots^6 = modifier@pm_smart_robots_silicon_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_mobile_robots = modifier@pm_mobile_robots_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_mobile_robots = modifier@pm_mobile_robots_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_mobile_robots^0 = modifier@pm_mobile_robots_plastics_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mobile_robots^1 = modifier@pm_mobile_robots_computers_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mobile_robots^2 = modifier@pm_mobile_robots_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mobile_robots^3 = modifier@pm_mobile_robots_portable_power_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mobile_robots^4 = modifier@pm_mobile_robots_aluminum_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mobile_robots^5 = modifier@pm_mobile_robots_silicon_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_intelligent_robots = modifier@pm_intelligent_robots_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_intelligent_robots = modifier@pm_intelligent_robots_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_intelligent_robots^0 = modifier@pm_intelligent_robots_plastics_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_intelligent_robots^1 = modifier@pm_intelligent_robots_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_intelligent_robots^2 = modifier@pm_intelligent_robots_computers_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_intelligent_robots^3 = modifier@pm_intelligent_robots_portable_power_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_intelligent_robots^4 = modifier@pm_intelligent_robots_aluminum_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_intelligent_robots^5 = modifier@pm_intelligent_robots_silicon_input_modifier }
			
			# Tools
			add_to_variable = { pm_output_multiplier@token:pm_crude_tools = modifier@pm_crude_tools_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_crude_tools = modifier@pm_crude_tools_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_crude_tools^0 = modifier@pm_crude_tools_wood_input_modifier }
			
			add_to_variable = { pm_output_multiplier@token:pm_iron_tools = modifier@pm_iron_tools_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_iron_tools = modifier@pm_iron_tools_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_iron_tools^0 = modifier@pm_iron_tools_wood_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_iron_tools^1 = modifier@pm_iron_tools_iron_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_steel_tools = modifier@pm_steel_tools_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_steel_tools = modifier@pm_steel_tools_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_steel_tools^0 = modifier@pm_steel_tools_wood_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_steel_tools^1 = modifier@pm_steel_tools_steel_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_power_tools = modifier@pm_power_tools_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_power_tools = modifier@pm_power_tools_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_power_tools^0 = modifier@pm_power_tools_steel_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_power_tools^1 = modifier@pm_power_tools_electronics_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_power_tools^2 = modifier@pm_power_tools_wood_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_power_tools^3 = modifier@pm_power_tools_tungsten_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_power_tools^4 = modifier@pm_power_tools_plastics_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_cordless_tools = modifier@pm_cordless_tools_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_cordless_tools = modifier@pm_cordless_tools_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_cordless_tools^0 = modifier@pm_cordless_tools_plastics_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_cordless_tools^1 = modifier@pm_cordless_tools_appliances_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_cordless_tools^2 = modifier@pm_cordless_tools_portable_power_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_cordless_tools^3 = modifier@pm_cordless_tools_tungsten_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_smart_tools = modifier@pm_smart_tools_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_smart_tools = modifier@pm_smart_tools_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_smart_tools^0 = modifier@pm_smart_tools_plastics_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_smart_tools^1 = modifier@pm_smart_tools_portable_power_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_smart_tools^2 = modifier@pm_smart_tools_computers_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_smart_tools^3 = modifier@pm_smart_tools_titanium_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_smart_tools^4 = modifier@pm_smart_tools_tungsten_input_modifier }
			

			# Electronics

			# Portable Power

			# Consumer Goods
			add_to_variable = { pm_output_multiplier@token:pm_basic_consumer_goods = modifier@pm_basic_consumer_goods_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_basic_consumer_goods = modifier@pm_basic_consumer_goods_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_basic_consumer_goods^0 = modifier@pm_basic_consumer_goods_wood_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_basic_consumer_goods^1 = modifier@pm_basic_consumer_goods_iron_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_luxury_goods = modifier@pm_luxury_goods_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_luxury_goods = modifier@pm_luxury_goods_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_luxury_goods^0 = modifier@pm_luxury_goods_wood_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_luxury_goods^1 = modifier@pm_luxury_goods_textiles_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_luxury_goods^2 = modifier@pm_luxury_goods_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_luxury_goods^3 = modifier@pm_luxury_goods_iron_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_luxury_goods^4 = modifier@pm_luxury_goods_copper_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_mechanical_goods = modifier@pm_mechanical_goods_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_mechanical_goods = modifier@pm_mechanical_goods_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_mechanical_goods^0 = modifier@pm_mechanical_goods_wood_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mechanical_goods^1 = modifier@pm_mechanical_goods_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mechanical_goods^2 = modifier@pm_mechanical_goods_iron_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mechanical_goods^3 = modifier@pm_mechanical_goods_textiles_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mechanical_goods^4 = modifier@pm_mechanical_goods_steel_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mechanical_goods^5 = modifier@pm_mechanical_goods_copper_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mechanical_goods^6 = modifier@pm_mechanical_goods_rubber_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_plasticware = modifier@pm_plasticware_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_plasticware = modifier@pm_plasticware_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_plasticware^0 = modifier@pm_plasticware_plastics_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_plasticware^1 = modifier@pm_plasticware_composites_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_plasticware^2 = modifier@pm_plasticware_wood_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_plasticware^3 = modifier@pm_plasticware_steel_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_plasticware^4 = modifier@pm_plasticware_textiles_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_plasticware^5 = modifier@pm_plasticware_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_plasticware^6 = modifier@pm_plasticware_iron_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_plasticware^7 = modifier@pm_plasticware_copper_input_modifier }
			add_to_variable = { pm_output_multiplier@token:pm_modern_goods = modifier@pm_modern_goods_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_modern_goods = modifier@pm_modern_goods_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_modern_goods^0 = modifier@pm_modern_goods_plastics_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_modern_goods^1 = modifier@pm_modern_goods_composites_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_modern_goods^2 = modifier@pm_modern_goods_steel_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_modern_goods^3 = modifier@pm_modern_goods_textiles_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_modern_goods^4 = modifier@pm_modern_goods_wood_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_modern_goods^5 = modifier@pm_modern_goods_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_modern_goods^6 = modifier@pm_modern_goods_copper_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_modern_goods^7 = modifier@pm_modern_goods_titanium_input_modifier }

			# Appliances

			# Vehicles

			# Computers

			# Plastics

			# Fibers

			# Rubber

			# Chemicals
			add_to_variable = { pm_output_multiplier@token:pm_lead_chamber_process = modifier@pm_lead_chamber_process_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_lead_chamber_process = modifier@pm_lead_chamber_process_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_lead_chamber_process^0 = modifier@pm_lead_chamber_process_iron_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_leblanc_process = modifier@pm_leblanc_process_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_leblanc_process = modifier@pm_leblanc_process_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_leblanc_process^0 = modifier@pm_leblanc_process_iron_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_leblanc_process^1 = modifier@pm_leblanc_process_tools_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_ammonia_soda_process = modifier@pm_ammonia_soda_process_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_ammonia_soda_process = modifier@pm_ammonia_soda_process_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_ammonia_soda_process^0 = modifier@pm_ammonia_soda_process_iron_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_ammonia_soda_process^1 = modifier@pm_ammonia_soda_process_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_ammonia_soda_process^2 = modifier@pm_ammonia_soda_process_machinery_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_brine_electrolysis = modifier@pm_brine_electrolysis_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_brine_electrolysis = modifier@pm_brine_electrolysis_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_brine_electrolysis^0 = modifier@pm_brine_electrolysis_iron_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_brine_electrolysis^1 = modifier@pm_brine_electrolysis_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_brine_electrolysis^2 = modifier@pm_brine_electrolysis_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_brine_electrolysis^3 = modifier@pm_brine_electrolysis_machinery_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_haber_bosch_process = modifier@pm_haber_bosch_process_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_haber_bosch_process = modifier@pm_haber_bosch_process_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_haber_bosch_process^0 = modifier@pm_haber_bosch_process_iron_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_haber_bosch_process^1 = modifier@pm_haber_bosch_process_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_haber_bosch_process^2 = modifier@pm_haber_bosch_process_tools_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_haber_bosch_process^3 = modifier@pm_haber_bosch_process_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_haber_bosch_process^4 = modifier@pm_haber_bosch_process_coal_input_modifier }

			add_to_variable = { pm_output_multiplier@token:pm_petrochemicals = modifier@pm_petrochemicals_output_modifier }
			add_to_variable = { pm_industrial_capacity_use@token:pm_petrochemicals = modifier@pm_petrochemicals_industrial_capacity_use_modifier }
			add_to_variable = { pm_input_amount@token:pm_petrochemicals^0 = modifier@pm_petrochemicals_oil_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_petrochemicals^1 = modifier@pm_petrochemicals_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_petrochemicals^2 = modifier@pm_petrochemicals_iron_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_petrochemicals^3 = modifier@pm_petrochemicals_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_petrochemicals^4 = modifier@pm_petrochemicals_tools_input_modifier }

			# Composites

			# Electricity

			# Automation
			add_to_variable = { pm_workforce_laborers@token:pm_steam_engine = modifier@pm_steam_engine_laborers_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_steam_engine = modifier@pm_steam_engine_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_steam_engine^0 = modifier@pm_steam_engine_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_steam_engine^1 = modifier@pm_steam_engine_coal_input_modifier }
			
			add_to_variable = { pm_workforce_laborers@token:pm_industrial_machinery = modifier@pm_industrial_machinery_laborers_required_modifier }
			add_to_variable = { pm_workforce_workers@token:pm_industrial_machinery = modifier@pm_industrial_machinery_workers_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_industrial_machinery^0 = modifier@pm_industrial_machinery_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_industrial_machinery^1 = modifier@pm_industrial_machinery_coal_input_modifier }
			
			add_to_variable = { pm_workforce_workers@token:pm_industrial_electrification = modifier@pm_industrial_electrification_workers_required_modifier }
			add_to_variable = { pm_workforce_professionals@token:pm_industrial_electrification = modifier@pm_industrial_electrification_professionals_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_industrial_electrification^0 = modifier@pm_industrial_electrification_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_industrial_electrification^1 = modifier@pm_industrial_electrification_electronics_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_industrial_electrification^2 = modifier@pm_industrial_electrification_electricity_input_modifier }
			
			add_to_variable = { pm_workforce_professionals@token:pm_assembly_lines = modifier@pm_assembly_lines_professionals_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_assembly_lines^0 = modifier@pm_assembly_lines_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_assembly_lines^1 = modifier@pm_assembly_lines_electronics_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_assembly_lines^2 = modifier@pm_assembly_lines_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_assembly_lines^3 = modifier@pm_assembly_lines_rubber_input_modifier }
			
			add_to_variable = { pm_workforce_professionals@token:pm_robots = modifier@pm_robots_professionals_required_modifier }
			add_to_variable = { pm_workforce_specialists@token:pm_robots = modifier@pm_robots_specialists_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_robots^0 = modifier@pm_robots_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_robots^1 = modifier@pm_robots_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_robots^2 = modifier@pm_robots_appliances_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_robots^3 = modifier@pm_robots_rubber_input_modifier }
			
			add_to_variable = { pm_workforce_professionals@token:pm_data_servers = modifier@pm_data_servers_professionals_required_modifier }
			add_to_variable = { pm_workforce_specialists@token:pm_data_servers = modifier@pm_data_servers_specialists_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_data_servers^0 = modifier@pm_data_servers_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_data_servers^1 = modifier@pm_data_servers_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_data_servers^2 = modifier@pm_data_servers_appliances_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_data_servers^3 = modifier@pm_data_servers_computers_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_data_servers^4 = modifier@pm_data_servers_rubber_input_modifier }
			
			add_to_variable = { pm_workforce_specialists@token:pm_artificial_intelligence = modifier@pm_artificial_intelligence_specialists_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_artificial_intelligence^0 = modifier@pm_artificial_intelligence_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_artificial_intelligence^1 = modifier@pm_artificial_intelligence_computers_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_artificial_intelligence^2 = modifier@pm_artificial_intelligence_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_artificial_intelligence^3 = modifier@pm_artificial_intelligence_rubber_input_modifier }
			
			add_to_variable = { pm_workforce_specialists@token:pm_mass_automation = modifier@pm_mass_automation_specialists_required_modifier }
			add_to_variable = { pm_input_amount@token:pm_mass_automation^0 = modifier@pm_mass_automation_machinery_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mass_automation^1 = modifier@pm_mass_automation_electricity_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mass_automation^2 = modifier@pm_mass_automation_computers_input_modifier }
			add_to_variable = { pm_input_amount@token:pm_mass_automation^3 = modifier@pm_mass_automation_rubber_input_modifier }
		#
	}
#

#Global/National Bank
	national_debt_update = {
		#Country Scope

		# National Bank
			set_variable = { national_bank_amount_k = gdp_amount }
			divide_variable = { national_bank_amount_k = 1000 }
			multiply_variable = { national_bank_amount_k = 24 }
			
			set_variable = { national_bank_amount_lent_k = 0 }
			for_each_loop = {
				array = money_lent_country
				value = borrower_country_temp
				add_to_variable = { national_bank_amount_lent_k = money_lent_k@var:borrower_country_temp }
			}

			set_variable = { national_bank_amount_left_k = national_bank_amount_k }
			subtract_from_variable = { national_bank_amount_left_k = national_bank_amount_lent_k }

			# Money Scarcity
			if = {
				limit = {
					check_variable = { national_bank_amount_left_k < 0 }
				}
				set_variable = { national_bank_interest_from_scarcity = 1 }
			}
			else = {
				set_variable = { national_bank_interest_from_scarcity = national_bank_amount_lent_k }
				divide_variable = { national_bank_interest_from_scarcity = national_bank_amount_k }
			}
			multiply_variable = { national_bank_interest_from_scarcity = global.loan_scarcity_rate }


			set_variable = { domestic_interest_rate = global.default_interest_rate } # TODO - 8.0%
			add_to_variable = { domestic_interest_rate = national_bank_interest_from_scarcity } # Up to 10.0%
			if = {
				limit = {
					is_great_power = yes
				}
				subtract_from_variable = { domestic_interest_rate = 2 }
			}
			else_if = {
				limit = {
					is_secondary_power = yes
				}
				subtract_from_variable = { domestic_interest_rate = 1 }
			}
			add_to_variable = { domestic_interest_rate = modifier@interest_rate_modifier }
			add_to_variable = { domestic_interest_rate = modifier@domestic_interest_rate_modifier }

			set_temp_variable = { modifier_temp = modifier@interest_rate_factor }
			add_to_temp_variable = { modifier_temp = modifier@domestic_interest_rate_factor }
			add_to_temp_variable = { modifier_temp = 1 }
			multiply_variable = { domestic_interest_rate = modifier_temp }

			set_variable = { foreign_interest_rate = global.default_interest_rate } # TODO - 8.0%
			add_to_variable = { foreign_interest_rate = global.base_international_interest_rate } # 2.0%
			if = {
				limit = {
					is_great_power = yes
				}
				subtract_from_variable = { foreign_interest_rate = 2 }
			}
			else_if = {
				limit = {
					is_secondary_power = yes
				}
				subtract_from_variable = { foreign_interest_rate = 1 }
			}
			add_to_variable = { foreign_interest_rate = modifier@interest_rate_modifier }
			add_to_variable = { foreign_interest_rate = modifier@foreign_interest_rate_modifier }

			set_temp_variable = { modifier_temp = modifier@interest_rate_factor }
			add_to_temp_variable = { modifier_temp = modifier@foreign_interest_rate_factor }
			add_to_temp_variable = { modifier_temp = 1 }
			multiply_variable = { domestic_interest_rate = modifier_temp }
			
			if = { # 1st rank GP gets 10% cheaper debt (factor)
				limit = {
					check_variable = { score_array_position_var = 1 }
				}
				multiply_variable = { domestic_interest_rate = 0.9 }
				multiply_variable = { foreign_interest_rate = 0.9 }
			}
		#

		#Money owed to foreign countries & interest
			set_variable = { debt_to_foreign_countries_k = 0 }
			set_variable = { debt_to_national_bank_k = 0 }
			for_each_loop = {
				array = debt_to_bank_country
				value = country_temp
				if = {
					limit = {
						tag = country_temp
					}
					set_variable = { debt_to_national_bank_k = debt_to_bank_k@var:country_temp }
				}
				else = {
					add_to_variable = { debt_to_foreign_countries_k = debt_to_bank_k@var:country_temp }
				}
			}
		#

		set_variable = { national_debt_k = debt_to_national_bank_k }
		add_to_variable = { national_debt_k = debt_to_foreign_countries_k }
		
		if = {
			limit = {
				check_variable = { national_debt_k > 2000 }
			}
			set_variable = { debt_to_gdp_ratio = national_debt_k }
			multiply_variable = { debt_to_gdp_ratio = 10 }
			divide_variable = { debt_to_gdp_ratio = gdp_amount }
			multiply_variable = { debt_to_gdp_ratio = 1000 }
			divide_variable = { debt_to_gdp_ratio = 12 }
			multiply_variable = { debt_to_gdp_ratio = 10 }
		}
		else = {
			set_variable = { debt_to_gdp_ratio = national_debt_k }
			multiply_variable = { debt_to_gdp_ratio = 1000 }
			divide_variable = { debt_to_gdp_ratio = gdp_amount }
			multiply_variable = { debt_to_gdp_ratio = 100 }
			divide_variable = { debt_to_gdp_ratio = 12 }
		}

		#Debt Level - for integration
		set_variable = { debt_level = debt_to_gdp_ratio }
		divide_variable = { debt_level = 4 }

		debt_level_checks_effect = yes

		#Total Interest Rate
		set_temp_variable = { local_debt_payment_temp = debt_to_national_bank_k }
		multiply_temp_variable = { local_debt_payment_temp = domestic_interest_rate }
		divide_temp_variable = { local_debt_payment_temp = 1.2 }
		set_temp_variable = { foreign_debt_payment_temp = debt_to_foreign_countries_k }
		multiply_temp_variable = { foreign_debt_payment_temp = foreign_interest_rate }
		divide_temp_variable = { foreign_debt_payment_temp = 1.2 }
		set_variable = { national_debt_interest = local_debt_payment_temp }
		add_to_variable = { national_debt_interest = foreign_debt_payment_temp }

		if = {
			limit = {
				check_variable = { national_debt_k > 0 }
			}
			set_variable = { national_debt_interest_rate = national_debt_interest }
			multiply_variable = { national_debt_interest_rate = 1.2 }
			divide_variable = { national_debt_interest_rate = national_debt_k }
		}
		else = {
			set_variable = { national_debt_interest_rate = domestic_interest_rate }
		}

		#Update spending
		set_variable = { mandatory_spending = national_debt_interest }
		add_to_variable = { mandatory_spending = administration_spending }
		add_to_variable = { mandatory_spending = military_mandatory_spending }
		add_to_variable = { mandatory_spending = order_and_intel_spending }
		add_to_variable = { mandatory_spending = social_spending }
		add_to_variable = { mandatory_spending = other_spending }
		
		set_variable = { spending = discretionary_spending }
		add_to_variable = { spending = mandatory_spending }
		add_to_variable = { spending = trade_subsidy }

		set_variable = { net_budget = revenue }
		subtract_from_variable = { net_budget = spending }
		
		if = {
			limit = {
				is_ai = no
			}
			create_pie_chart_spending = yes
		}

		debt_related_country_content_effects = yes
	}

	set_debt_to_gdp = {
		# x_temp
		# Sets the debt to gdp % to x_temp (0-100)

		multiply_temp_variable = { x_temp = 0.12 }
		add_to_temp_variable = { x_temp = 0.001 } # dunno why this is needed to make it exactly the percentage you give it, but apparently it is
		if = {
			limit = {
				check_variable = { x_temp > 1 }
			}
			divide_temp_variable = { x_temp = 1000 }
			multiply_temp_variable = { x_temp = gdp_amount }
		}
		else = {
			multiply_temp_variable = { x_temp = gdp_amount }
			divide_temp_variable = { x_temp = 1000 }
		}
		set_debt = yes
	}
	set_debt = {
		# x_temp
		# country_temp
		# Sets the debt to x_temp (thousands)
		
		if = {
			limit = { check_variable = { country_temp = 0 } }
			subtract_from_temp_variable = { x_temp = debt_to_bank_k@THIS }
		}
		else = {
			subtract_from_temp_variable = { x_temp = debt_to_bank_k@var:country_temp }
		}
		add_debt = yes
	}
	add_debt_to_gdp = {
		# x_temp
		# Adds debt to gdp % at x_temp (0-100)

		multiply_temp_variable = { x_temp = 0.12 }
		multiply_temp_variable = { x_temp = gdp_amount }
		divide_temp_variable = { x_temp = 1000 }
		add_debt = yes
	}
	add_debt = {
		#Scope: Country
		#Adds debt without granting money. Automatically caps at the maximum amount you can borrow.
		#INPUT:
			#x_temp - Amount of money to borrow in thousands.
			#country_temp - Which country to specifically borrow from, set to 0 to borrow money from any country
			#ignore_limits_temp - Ignores borrowing limits
			
		if = {
			limit = {
				check_variable = { x_temp > 0 }
			}

			set_temp_variable = { borrow_temp_k = x_temp }
			add_to_temp_variable = { 
				var = nonsense_var
				value = borrow_temp_k
				tooltip = debt_change_negative_tooltip
			}

			if = {
				limit = {
					check_variable = { country_temp = 0 }
				}
				set_temp_variable = { country_temp = THIS }
			}

			#log = "Country: [?country_temp.GetName]"

			if = {
				limit = {
					check_variable = { borrow_temp_k > country_temp:national_bank_amount_left_k }
					check_variable = { ignore_limits_temp = 0 }
				}
				set_temp_variable = { borrow_temp_k = country_temp:national_bank_amount_left_k }
			}
			#log = "Borrow Amount: [?borrow_temp_k]K"
			if = {
				limit = {
					check_variable = { borrow_temp_k < 0 }
				}
				set_temp_variable = { borrow_temp_k = 0 }
				set_temp_variable = { borrow_temp = 0 }
			}
			else = {
				set_temp_variable = { borrow_temp = borrow_temp_k }
				multiply_temp_variable = { borrow_temp = 1000 }
				if = {
					limit = {
						is_in_array = { array = debt_to_bank_country value = country_temp }
					}
					add_to_variable = { debt_to_bank_k@var:country_temp = borrow_temp_k }
					add_to_variable = { country_temp:money_lent_k@THIS = borrow_temp_k }
				}
				else = {
					add_to_array = { debt_to_bank_country = country_temp }
					set_variable = { debt_to_bank_k@var:country_temp = borrow_temp_k }
					add_to_array = { country_temp:money_lent_country = THIS }
					set_variable = { country_temp:money_lent_k@THIS = borrow_temp_k }
				}
				#log = "Debt to Bank K ([THIS.GetName]): [?debt_to_bank_k@var:country_temp]K"
				#log = "Money Lent K ([?country_temp.GetName]): [?country_temp:money_lent_k@THIS]K"

				if = {
					limit = {
						NOT = { check_variable = { country_temp = THIS } }
					}
					var:country_temp = {
						national_debt_update = yes
					}
				}
			}

			national_debt_update = yes
		}
		else_if = {
			limit = {
				check_variable = { x_temp < 0 }
			}
			multiply_temp_variable = { x_temp = -1 }
			remove_debt = yes
		}
		else = {
			set_temp_variable = { borrow_temp = 0 }
		}
		set_temp_variable = { ignore_limits_temp = 0 }
		set_temp_variable = { country_temp = 0 }
	}
	remove_debt = {
		#Scope: Country
		#Repays oustanding debt. Automatically caps at treasury amount.
		#INPUT:
			#x_temp - Amount of debt to repay. Non-integer amounts are accepted but integers are preferable
			#country_temp - Which country to specifically repay to, set to 0 to repay debts owed to any country
			#			  - If the repay amount is higher than the owed amount, only the owed amount is payed. The excess is not payed out further

		set_temp_variable = { debt_repayed_k = 0 }
		if = {
			limit = {
				check_variable = { x_temp > 0 }
			}

			#log = "Country: [?country_temp.GetName]"

			set_temp_variable = { repay_temp_k = x_temp }
			subtract_from_temp_variable = { 
				var = nonsense_var
				value = repay_temp_k
				tooltip = debt_change_positive_tooltip
			}

			if = {
				limit = {
					check_variable = { country_temp = 0 }
				}
				set_temp_variable = { country_temp = THIS }
				remove_debt_internal = yes
				add_to_temp_variable = { debt_repayed_k = repay_temp_k }

				set_temp_variable = { bank_temp = 0 }
				while_loop_effect = {
					limit = {
						check_variable = { debt_repayed_k < x_temp }
						check_variable = { debt_to_bank_country^num > 0 }
					}
					set_temp_variable = { repay_temp_k = x_temp }
					subtract_from_temp_variable = { repay_temp_k = debt_repayed_k }
					set_temp_variable = { country_temp = debt_to_bank_country^0 }
					remove_debt_internal = yes
					add_to_temp_variable = { debt_repayed_k = repay_temp_k }
				}
			}
			else = {
				remove_debt_internal = yes
				add_to_temp_variable = { debt_repayed_k = repay_temp_k }
			}


			national_debt_update = yes
		}
		set_temp_variable = { repay_temp = debt_repayed_k }
		multiply_temp_variable = { repay_temp = 1000 }
		set_temp_variable = { country_temp = 0 }
	}
	remove_debt_internal = {
		# Takes in repay_temp_k and country_temp and removes that amount of money from that.
		# Outputs repay_temp_k which is the amount of debt actually repaid

		if = {
			limit = {
				check_variable = { repay_temp_k > debt_to_bank_k@var:country_temp }
			}
			set_temp_variable = { repay_temp_k = debt_to_bank_k@var:country_temp }
		}
		#log = "Repay Amount: [?repay_temp_k]K"
		
		if = {
			limit = {
				check_variable = { repay_temp_k < 0 }
			}
			set_temp_variable = { repay_temp_k = 0 }
		}
		else = {
			if = {
				limit = {
					check_variable = { repay_temp_k < debt_to_bank_k@var:country_temp }
				}
				subtract_from_variable = { debt_to_bank_k@var:country_temp = repay_temp_k }
				subtract_from_variable = { country_temp:money_lent_k@THIS = repay_temp_k }
			}
			else = {
				remove_from_array = { array = debt_to_bank_country value = country_temp }
				remove_from_array = { array = country_temp:money_lent_country value = THIS }
				clear_variable = debt_to_bank_k@var:country_temp
				clear_variable = country_temp:money_lent_k@THIS
			}
			#log = "Debt to Bank K ([THIS.GetName]): [?debt_to_bank_k@var:country_temp]K"
			#log = "Money Lent K ([?country_temp.GetName]): [?country_temp:money_lent_k@THIS]K"

			if = {
				limit = {
					NOT = { check_variable = { country_temp = THIS } }
				}
				var:country_temp = {
					national_debt_update = yes
				}
			}
		}
	}
	borrow_money = {
		#Scope: Country
		#Borrows money. Automatically caps at the maximum amount you can borrow.
		#INPUT:
			#x_temp - Amount of money to borrow. Non-integer amounts are accepted but integers are preferable
			#country_temp - Which country to specifically borrow from, set to 0 to borrow money from any country

		add_debt = yes
		if = {
			limit = {
				check_variable = { borrow_temp > 0 }
			}
			add_to_variable = { treasury = borrow_temp }
			add_to_temp_variable = { 
				var = nonsense_var
				value = borrow_temp
				tooltip = treasury_change_positive_tooltip
			}
		}

	}
	repay_debt = {
		#Scope: Country
		#Repays oustanding debt. Automatically caps at treasury amount.
		#INPUT:
			#x_temp - Amount of debt to repay. Non-integer amounts are accepted but integers are preferable
			#country_temp - Which country to specifically repay to, set to 0 to repay debts owed to any country
			#			  - If the repay amount is higher than the owed amount, only the owed amount is payed. The excess is not payed out further

		multiply_temp_variable = { x_temp = 1000 }
		if = {
			limit = {
				check_variable = { x_temp > treasury }
			}
			set_temp_variable = { x_temp = treasury }
			subtract_from_temp_variable = { x_temp = 0.5 }
			round_temp_variable = x_temp
		}
		divide_temp_variable = { x_temp = 1000 }
		if = {
			limit = {
				check_variable = { treasury > 0.999 }
			}
			remove_debt = yes
			if = {
				limit = {
					check_variable = { repay_temp > 0 }
				}
				subtract_from_variable = { treasury = repay_temp }
				subtract_from_temp_variable = { 
					var = nonsense_var
					value = repay_temp
					tooltip = treasury_change_negative_tooltip
				}
			}
		}
	}
#

#Statistics
	battalion_count_update = {
		# Land:
		#	Infantry
		#	Militia
		#	Artillery
		#	Cavalry
		#	Mobile
		#	Armor
		#	Robotic
		#	Support
		#	Total
		#	Excess (For when people add unit types without adding to this list)

		# Naval:
		#	Screen
		#	Capital
		#	Submarine
		#	Total
		#	Excess (For when people add ship types without adding to this list)

		# There is also a weighted_ count, for costing purposes

		#For air, use num_deployed_planes

		set_variable = { infantry_battalions = num_battalions_with_type@infantry }
		add_to_variable = { infantry_battalions = num_battalions_with_type@cold_war_infantry }
		add_to_variable = { infantry_battalions = num_battalions_with_type@pa_infantry }
		#add_to_variable = { infantry_battalions = num_battalions_with_type@bicycle_infantry }
		add_to_variable = { infantry_battalions = num_battalions_with_type@feudal_infantry }
		add_to_variable = { infantry_battalions = num_battalions_with_type@line_infantry }
		add_to_variable = { infantry_battalions = num_battalions_with_type@guard_infantry }
		add_to_variable = { infantry_battalions = num_battalions_with_type@great_war_infantry }
		add_to_variable = { infantry_battalions = num_battalions_with_type@light_infantry }
		add_to_variable = { infantry_battalions = num_battalions_with_type@tribal_infantry }
		add_to_variable = { infantry_battalions = num_battalions_with_type@native_mountaineers }
		add_to_variable = { infantry_battalions = num_battalions_with_type@mounted_infantry }
		add_to_variable = { infantry_battalions = num_battalions_with_type@early_marine }
		add_to_variable = { infantry_battalions = num_battalions_with_type@marine }
		add_to_variable = { infantry_battalions = num_battalions_with_type@kustjagare_battalion }
		add_to_variable = { infantry_battalions = num_battalions_with_type@mountaineers }
		add_to_variable = { infantry_battalions = num_battalions_with_type@shock_troops }

		set_variable = { militia_battalions = 0 }
		#add_to_variable = { militia_battalions = num_battalions_with_type@state_militia_infantry }
		#add_to_variable = { militia_battalions = num_battalions_with_type@dutch_colonial_militia_infantry }
		add_to_variable = { militia_battalions = num_battalions_with_type@irregular_infantry }
		add_to_variable = { militia_battalions = num_battalions_with_type@armed_peasants }

		set_variable = { artillery_battalions = num_battalions_with_type@anti_tank_brigade }
		add_to_variable = { artillery_battalions = num_battalions_with_type@mot_anti_tank_brigade }
		add_to_variable = { artillery_battalions = num_battalions_with_type@anti_air_brigade }
		add_to_variable = { artillery_battalions = num_battalions_with_type@mot_anti_air_brigade }
		add_to_variable = { artillery_battalions = num_battalions_with_type@field_artillery }
		add_to_variable = { artillery_battalions = num_battalions_with_type@field_artillery_towed }
		add_to_variable = { artillery_battalions = num_battalions_with_type@howitzer_artillery }
		add_to_variable = { artillery_battalions = num_battalions_with_type@howitzer_artillery_towed }
		add_to_variable = { artillery_battalions = num_battalions_with_type@siege_artillery }
		add_to_variable = { artillery_battalions = num_battalions_with_type@siege_artillery_towed }
		add_to_variable = { artillery_battalions = num_battalions_with_type@artillery_brigade }
		add_to_variable = { artillery_battalions = num_battalions_with_type@mot_artillery_brigade }
		add_to_variable = { artillery_battalions = num_battalions_with_type@rocket_artillery_brigade }
		add_to_variable = { artillery_battalions = num_battalions_with_type@mot_rocket_artillery_brigade }
		add_to_variable = { artillery_battalions = num_battalions_with_type@motorized_rocket_brigade }
		add_to_variable = { artillery_battalions = num_battalions_with_type@railway_gun }

		set_variable = { cavalry_battalions = num_battalions_with_type@tribal_cavalry }
		#add_to_variable = { cavalry_battalions = num_battalions_with_type@tribal_camel_cavalry }
		add_to_variable = { cavalry_battalions = num_battalions_with_type@tribal_pistoleer_cavalry }
		add_to_variable = { cavalry_battalions = num_battalions_with_type@state_levy_cavalry }
		add_to_variable = { cavalry_battalions = num_battalions_with_type@feudal_cavalry }
		add_to_variable = { cavalry_battalions = num_battalions_with_type@light_cavalry }
		add_to_variable = { cavalry_battalions = num_battalions_with_type@heavy_cavalry }
		add_to_variable = { cavalry_battalions = num_battalions_with_type@uhlans }
		add_to_variable = { cavalry_battalions = num_battalions_with_type@camel_cavalry }
		add_to_variable = { cavalry_battalions = num_battalions_with_type@dragoon }
		add_to_variable = { cavalry_battalions = num_battalions_with_type@great_war_cavalry }

		set_variable = { mobile_battalions = num_battalions_with_type@motorized }
		add_to_variable = { mobile_battalions = num_battalions_with_type@mechanized }
		add_to_variable = { mobile_battalions = num_battalions_with_type@airborne }
		add_to_variable = { mobile_battalions = num_battalions_with_type@amphibious_mechanized }
		add_to_variable = { mobile_battalions = num_battalions_with_type@armored_car }
		add_to_variable = { mobile_battalions = num_battalions_with_type@technicals }

		set_variable = { armor_battalions = num_battalions_with_type@amphibious_armor }
		add_to_variable = { armor_battalions = num_battalions_with_type@light_armor }
		add_to_variable = { armor_battalions = num_battalions_with_type@medium_armor }
		add_to_variable = { armor_battalions = num_battalions_with_type@heavy_armor }
		add_to_variable = { armor_battalions = num_battalions_with_type@super_heavy_armor }
		add_to_variable = { armor_battalions = num_battalions_with_type@modern_armor }
		add_to_variable = { armor_battalions = num_battalions_with_type@light_sp_anti_air_brigade }
		add_to_variable = { armor_battalions = num_battalions_with_type@medium_sp_anti_air_brigade }
		add_to_variable = { armor_battalions = num_battalions_with_type@heavy_sp_anti_air_brigade }
		add_to_variable = { armor_battalions = num_battalions_with_type@super_heavy_sp_anti_air_brigade }
		add_to_variable = { armor_battalions = num_battalions_with_type@modern_sp_anti_air_brigade }
		add_to_variable = { armor_battalions = num_battalions_with_type@light_sp_artillery_brigade }
		add_to_variable = { armor_battalions = num_battalions_with_type@medium_sp_artillery_brigade }
		add_to_variable = { armor_battalions = num_battalions_with_type@heavy_sp_artillery_brigade }
		add_to_variable = { armor_battalions = num_battalions_with_type@super_heavy_sp_artillery_brigade }
		add_to_variable = { armor_battalions = num_battalions_with_type@modern_sp_artillery_brigade }
		add_to_variable = { armor_battalions = num_battalions_with_type@light_tank_destroyer_brigade }
		add_to_variable = { armor_battalions = num_battalions_with_type@medium_tank_destroyer_brigade }
		add_to_variable = { armor_battalions = num_battalions_with_type@heavy_tank_destroyer_brigade }
		add_to_variable = { armor_battalions = num_battalions_with_type@super_heavy_tank_destroyer_brigade }
		add_to_variable = { armor_battalions = num_battalions_with_type@modern_tank_destroyer_brigade }

		set_variable = { robotic_battalions = num_battalions_with_type@light_robots }
		add_to_variable = { robotic_battalions = num_battalions_with_type@medium_robots }
		add_to_variable = { robotic_battalions = num_battalions_with_type@heavy_robots }
		add_to_variable = { robotic_battalions = num_battalions_with_type@armor_walker }

		set_variable = { support_battalions = num_battalions_with_type@anti_tank }
		add_to_variable = { support_battalions = num_battalions_with_type@field_artillery_support }
		add_to_variable = { support_battalions = num_battalions_with_type@field_artillery_towed_support }
		add_to_variable = { support_battalions = num_battalions_with_type@howitzer_artillery_support }
		add_to_variable = { support_battalions = num_battalions_with_type@howitzer_artillery_towed_support }
		add_to_variable = { support_battalions = num_battalions_with_type@siege_artillery_support }
		add_to_variable = { support_battalions = num_battalions_with_type@machine_gun_company }
		add_to_variable = { support_battalions = num_battalions_with_type@artillery }
		add_to_variable = { support_battalions = num_battalions_with_type@rocket_artillery }
		add_to_variable = { support_battalions = num_battalions_with_type@engineer }
		add_to_variable = { support_battalions = num_battalions_with_type@field_hospital }
		add_to_variable = { support_battalions = num_battalions_with_type@logistics_company }
		add_to_variable = { support_battalions = num_battalions_with_type@maintenance_company }
		add_to_variable = { support_battalions = num_battalions_with_type@military_police }
		add_to_variable = { support_battalions = num_battalions_with_type@recon }
		add_to_variable = { support_battalions = num_battalions_with_type@wired_signal_company }
		add_to_variable = { support_battalions = num_battalions_with_type@signal_company }
		add_to_variable = { support_battalions = num_battalions_with_type@bicycle_signal_company }
		add_to_variable = { support_battalions = num_battalions_with_type@motorcycle_signal_company }
		add_to_variable = { support_battalions = num_battalions_with_type@steam_car_support_company }
		add_to_variable = { support_battalions = num_battalions_with_type@flamethrower_support_company }
		add_to_variable = { support_battalions = num_battalions_with_type@sniper_team_support }
		add_to_variable = { support_battalions = num_battalions_with_type@armored_train_company }

		set_variable = { total_battalions = infantry_battalions }
		add_to_variable = { total_battalions = artillery_battalions }
		add_to_variable = { total_battalions = cavalry_battalions }
		add_to_variable = { total_battalions = mobile_battalions }
		add_to_variable = { total_battalions = armor_battalions }
		add_to_variable = { total_battalions = robotic_battalions }
		add_to_variable = { total_battalions = support_battalions }

		set_variable = { excess_battalions = total_battalions }
		subtract_from_variable = { excess_battalions = num_battalions }


		set_variable = { screen_ships = num_ships_with_type@corvette }
		add_to_variable = { screen_ships = num_ships_with_type@destroyer }
		add_to_variable = { screen_ships = num_ships_with_type@light_cruiser }
		add_to_variable = { screen_ships = num_ships_with_type@monitor }
		add_to_variable = { screen_ships = num_ships_with_type@primitive_rowboat }
		add_to_variable = { screen_ships = num_ships_with_type@torpedo_boat }

		set_variable = { capital_ships = num_ships_with_type@battle_cruiser }
		add_to_variable = { capital_ships = num_ships_with_type@battleship }
		add_to_variable = { capital_ships = num_ships_with_type@carrier }
		add_to_variable = { capital_ships = num_ships_with_type@dreadnought }
		add_to_variable = { capital_ships = num_ships_with_type@cruiser }
		add_to_variable = { capital_ships = num_ships_with_type@frigate }
		add_to_variable = { screen_ships = num_ships_with_type@gunboat }
		add_to_variable = { capital_ships = num_ships_with_type@heavy_cruiser }
		add_to_variable = { capital_ships = num_ships_with_type@ironclad }
		add_to_variable = { capital_ships = num_ships_with_type@lineship }
		add_to_variable = { capital_ships = num_ships_with_type@primitive_sailing_boat }

		set_variable = { submarine_ships = num_ships_with_type@coastal_submarine }
		add_to_variable = { submarine_ships = num_ships_with_type@submarine }

		set_variable = { total_ships = screen_ships }
		add_to_variable = { total_ships = capital_ships }
		add_to_variable = { total_ships = submarine_ships }

		set_variable = { excess_ships = num_ships }
		subtract_from_variable = { excess_ships = total_ships }

		#WEIGHTED
		set_variable = { infantry_battalions_weighted = num_battalions_with_type@infantry }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@infantry }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@cold_war_infantry }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@cold_war_infantry }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@pa_infantry }
		#add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@bicycle_infantry }
		#add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@bicycle_infantry }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@feudal_infantry }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@line_infantry }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@guard_infantry }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@guard_infantry }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@great_war_infantry }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@great_war_infantry }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@light_infantry }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@tribal_infantry }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@native_mountaineers }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@mounted_infantry }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@mounted_infantry }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@early_marine }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@early_marine }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@marine }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@marine }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@marine }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@kustjagare_battalion }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@kustjagare_battalion }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@mountaineers }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@mountaineers }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@mountaineers }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@shock_troops }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@shock_troops }
		add_to_variable = { infantry_battalions_weighted = num_battalions_with_type@shock_troops }

		set_variable = { militia_battalions_weighted = 0 }
		#add_to_variable = { militia_battalions_weighted = num_battalions_with_type@state_militia_infantry }
		#add_to_variable = { militia_battalions_weighted = num_battalions_with_type@dutch_colonial_militia_infantry }
		add_to_variable = { militia_battalions_weighted = num_battalions_with_type@irregular_infantry }
		add_to_variable = { militia_battalions_weighted = num_battalions_with_type@armed_peasants }

		set_variable = { artillery_battalions_weighted = num_battalions_with_type@anti_tank_brigade }
		add_to_variable = { artillery_battalions_weighted = num_battalions_with_type@mot_anti_tank_brigade }
		add_to_variable = { artillery_battalions_weighted = num_battalions_with_type@anti_air_brigade }
		add_to_variable = { artillery_battalions_weighted = num_battalions_with_type@mot_anti_air_brigade }
		add_to_variable = { artillery_battalions_weighted = num_battalions_with_type@field_artillery }
		add_to_variable = { artillery_battalions_weighted = num_battalions_with_type@field_artillery_towed }
		add_to_variable = { artillery_battalions_weighted = num_battalions_with_type@howitzer_artillery }
		add_to_variable = { artillery_battalions_weighted = num_battalions_with_type@howitzer_artillery_towed }
		add_to_variable = { artillery_battalions_weighted = num_battalions_with_type@siege_artillery }
		add_to_variable = { artillery_battalions_weighted = num_battalions_with_type@siege_artillery }
		add_to_variable = { artillery_battalions_weighted = num_battalions_with_type@siege_artillery_towed }
		add_to_variable = { artillery_battalions_weighted = num_battalions_with_type@siege_artillery_towed }
		add_to_variable = { artillery_battalions_weighted = num_battalions_with_type@artillery_brigade }
		add_to_variable = { artillery_battalions_weighted = num_battalions_with_type@mot_artillery_brigade }
		add_to_variable = { artillery_battalions_weighted = num_battalions_with_type@rocket_artillery_brigade }
		add_to_variable = { artillery_battalions_weighted = num_battalions_with_type@mot_rocket_artillery_brigade }
		add_to_variable = { artillery_battalions_weighted = num_battalions_with_type@motorized_rocket_brigade }
		add_to_variable = { artillery_battalions_weighted = num_battalions_with_type@railway_gun }
		add_to_variable = { artillery_battalions_weighted = num_battalions_with_type@railway_gun }
		add_to_variable = { artillery_battalions_weighted = num_battalions_with_type@railway_gun }

		set_variable = { cavalry_battalions_weighted = num_battalions_with_type@tribal_cavalry }
		#add_to_variable = { cavalry_battalions_weighted = num_battalions_with_type@tribal_camel_cavalry }
		add_to_variable = { cavalry_battalions_weighted = num_battalions_with_type@tribal_pistoleer_cavalry }
		add_to_variable = { cavalry_battalions_weighted = num_battalions_with_type@state_levy_cavalry }
		add_to_variable = { cavalry_battalions_weighted = num_battalions_with_type@feudal_cavalry }
		add_to_variable = { cavalry_battalions_weighted = num_battalions_with_type@light_cavalry }
		add_to_variable = { cavalry_battalions_weighted = num_battalions_with_type@light_cavalry }
		add_to_variable = { cavalry_battalions_weighted = num_battalions_with_type@heavy_cavalry }
		add_to_variable = { cavalry_battalions_weighted = num_battalions_with_type@heavy_cavalry }
		add_to_variable = { cavalry_battalions_weighted = num_battalions_with_type@heavy_cavalry }
		add_to_variable = { cavalry_battalions_weighted = num_battalions_with_type@uhlans }
		add_to_variable = { cavalry_battalions_weighted = num_battalions_with_type@camel_cavalry }
		add_to_variable = { cavalry_battalions_weighted = num_battalions_with_type@dragoon }
		add_to_variable = { cavalry_battalions_weighted = num_battalions_with_type@dragoon }
		add_to_variable = { cavalry_battalions_weighted = num_battalions_with_type@great_war_cavalry }
		add_to_variable = { cavalry_battalions_weighted = num_battalions_with_type@great_war_cavalry }

		set_variable = { mobile_battalions_weighted = num_battalions_with_type@motorized }
		add_to_variable = { mobile_battalions_weighted = num_battalions_with_type@motorized }
		add_to_variable = { mobile_battalions_weighted = num_battalions_with_type@mechanized }
		add_to_variable = { mobile_battalions_weighted = num_battalions_with_type@mechanized }
		add_to_variable = { mobile_battalions_weighted = num_battalions_with_type@mechanized }
		add_to_variable = { mobile_battalions_weighted = num_battalions_with_type@airborne }
		add_to_variable = { mobile_battalions_weighted = num_battalions_with_type@airborne }
		add_to_variable = { mobile_battalions_weighted = num_battalions_with_type@airborne }
		add_to_variable = { mobile_battalions_weighted = num_battalions_with_type@airborne }
		add_to_variable = { mobile_battalions_weighted = num_battalions_with_type@amphibious_mechanized }
		add_to_variable = { mobile_battalions_weighted = num_battalions_with_type@amphibious_mechanized }
		add_to_variable = { mobile_battalions_weighted = num_battalions_with_type@amphibious_mechanized }
		add_to_variable = { mobile_battalions_weighted = num_battalions_with_type@amphibious_mechanized }
		add_to_variable = { mobile_battalions_weighted = num_battalions_with_type@armored_car }
		add_to_variable = { mobile_battalions_weighted = num_battalions_with_type@technicals }

		set_variable = { armor_battalions_weighted = num_battalions_with_type@amphibious_armor }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@amphibious_armor }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@light_armor }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@light_armor }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@medium_armor }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@medium_armor }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@medium_armor }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@heavy_armor }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@heavy_armor }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@heavy_armor }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@heavy_armor }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@super_heavy_armor }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@super_heavy_armor }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@super_heavy_armor }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@super_heavy_armor }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@super_heavy_armor }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@modern_armor }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@modern_armor }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@modern_armor }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@modern_armor }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@light_sp_anti_air_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@light_sp_anti_air_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@medium_sp_anti_air_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@medium_sp_anti_air_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@medium_sp_anti_air_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@heavy_sp_anti_air_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@heavy_sp_anti_air_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@heavy_sp_anti_air_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@heavy_sp_anti_air_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@super_heavy_sp_anti_air_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@super_heavy_sp_anti_air_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@super_heavy_sp_anti_air_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@super_heavy_sp_anti_air_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@super_heavy_sp_anti_air_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@modern_sp_anti_air_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@modern_sp_anti_air_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@modern_sp_anti_air_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@modern_sp_anti_air_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@light_sp_artillery_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@light_sp_artillery_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@medium_sp_artillery_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@medium_sp_artillery_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@medium_sp_artillery_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@heavy_sp_artillery_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@heavy_sp_artillery_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@heavy_sp_artillery_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@heavy_sp_artillery_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@super_heavy_sp_artillery_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@super_heavy_sp_artillery_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@super_heavy_sp_artillery_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@super_heavy_sp_artillery_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@super_heavy_sp_artillery_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@modern_sp_artillery_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@modern_sp_artillery_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@modern_sp_artillery_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@modern_sp_artillery_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@light_tank_destroyer_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@light_tank_destroyer_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@medium_tank_destroyer_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@medium_tank_destroyer_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@medium_tank_destroyer_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@heavy_tank_destroyer_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@heavy_tank_destroyer_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@heavy_tank_destroyer_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@heavy_tank_destroyer_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@super_heavy_tank_destroyer_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@super_heavy_tank_destroyer_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@super_heavy_tank_destroyer_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@super_heavy_tank_destroyer_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@super_heavy_tank_destroyer_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@modern_tank_destroyer_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@modern_tank_destroyer_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@modern_tank_destroyer_brigade }
		add_to_variable = { armor_battalions_weighted = num_battalions_with_type@modern_tank_destroyer_brigade }

		set_variable = { robotic_battalions_weighted = num_battalions_with_type@light_robots }
		add_to_variable = { robotic_battalions_weighted = num_battalions_with_type@medium_robots }
		add_to_variable = { robotic_battalions_weighted = num_battalions_with_type@medium_robots }
		add_to_variable = { robotic_battalions_weighted = num_battalions_with_type@heavy_robots }
		add_to_variable = { robotic_battalions_weighted = num_battalions_with_type@heavy_robots }
		add_to_variable = { robotic_battalions_weighted = num_battalions_with_type@heavy_robots }
		add_to_variable = { robotic_battalions_weighted = num_battalions_with_type@heavy_robots }
		add_to_variable = { robotic_battalions_weighted = num_battalions_with_type@armor_walker }
		add_to_variable = { robotic_battalions_weighted = num_battalions_with_type@armor_walker }

		set_variable = { support_battalions_weighted = num_battalions_with_type@anti_tank }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@field_artillery_support }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@field_artillery_towed_support }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@howitzer_artillery_support }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@howitzer_artillery_towed_support }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@siege_artillery_support }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@siege_artillery_support }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@machine_gun_company }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@artillery }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@rocket_artillery }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@engineer }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@field_hospital }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@field_hospital }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@logistics_company }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@maintenance_company }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@military_police }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@recon }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@wired_signal_company }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@signal_company }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@bicycle_signal_company }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@motorcycle_signal_company }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@steam_car_support_company }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@flamethrower_support_company }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@sniper_team_support }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@armored_train_company }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@armored_train_company }
		add_to_variable = { support_battalions_weighted = num_battalions_with_type@armored_train_company }


		set_variable = { screen_ships_weighted = num_ships_with_type@corvette }
		add_to_variable = { screen_ships_weighted = num_ships_with_type@destroyer }
		add_to_variable = { screen_ships_weighted = num_ships_with_type@destroyer }
		add_to_variable = { screen_ships_weighted = num_ships_with_type@light_cruiser }
		add_to_variable = { screen_ships_weighted = num_ships_with_type@light_cruiser }
		add_to_variable = { screen_ships_weighted = num_ships_with_type@light_cruiser }
		add_to_variable = { screen_ships_weighted = num_ships_with_type@monitor }
		add_to_variable = { screen_ships_weighted = num_ships_with_type@monitor }
		add_to_variable = { screen_ships_weighted = num_ships_with_type@primitive_rowboat }
		add_to_variable = { screen_ships_weighted = num_ships_with_type@torpedo_boat }

		set_variable = { capital_ships_weighted = num_ships_with_type@battle_cruiser }
		add_to_variable = { capital_ships_weighted = num_ships_with_type@battle_cruiser }
		add_to_variable = { capital_ships_weighted = num_ships_with_type@battleship }
		add_to_variable = { capital_ships_weighted = num_ships_with_type@battleship }
		add_to_variable = { capital_ships_weighted = num_ships_with_type@battleship }
		add_to_variable = { capital_ships_weighted = num_ships_with_type@carrier }
		add_to_variable = { capital_ships_weighted = num_ships_with_type@carrier }
		add_to_variable = { capital_ships_weighted = num_ships_with_type@carrier }
		add_to_variable = { capital_ships_weighted = num_ships_with_type@dreadnought }
		add_to_variable = { capital_ships_weighted = num_ships_with_type@dreadnought }
		add_to_variable = { capital_ships_weighted = num_ships_with_type@dreadnought }
		add_to_variable = { capital_ships_weighted = num_ships_with_type@dreadnought }
		add_to_variable = { capital_ships_weighted = num_ships_with_type@cruiser }
		add_to_variable = { capital_ships_weighted = num_ships_with_type@cruiser }
		add_to_variable = { capital_ships_weighted = num_ships_with_type@frigate }
		add_to_variable = { screen_ships_weighted = num_ships_with_type@gunboat }
		add_to_variable = { capital_ships_weighted = num_ships_with_type@heavy_cruiser }
		add_to_variable = { capital_ships_weighted = num_ships_with_type@heavy_cruiser }
		add_to_variable = { capital_ships_weighted = num_ships_with_type@ironclad }
		add_to_variable = { capital_ships_weighted = num_ships_with_type@ironclad }
		add_to_variable = { capital_ships_weighted = num_ships_with_type@lineship }
		add_to_variable = { capital_ships_weighted = num_ships_with_type@lineship }
		add_to_variable = { capital_ships_weighted = num_ships_with_type@primitive_sailing_boat }

		set_variable = { submarine_ships_weighted = num_ships_with_type@coastal_submarine }
		add_to_variable = { submarine_ships_weighted = num_ships_with_type@submarine }
		add_to_variable = { submarine_ships_weighted = num_ships_with_type@submarine }


	}
	manpower_count_update = {
		# Adds up the total manpower being used in your country
		# Broken up by unit file


		set_variable = { military_manpower_k = 0 }
		set_variable = { army_manpower_k = 0 }
		set_variable = { navy_manpower_k = 0 }
		set_variable = { air_manpower_k = 0 }

		## ARMY ##

		# amphibious_armor
			set_temp_variable = { manpower_temp = num_battalions_with_type@amphibious_armor }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# amphibious_mech
			set_temp_variable = { manpower_temp = num_battalions_with_type@amphibious_mechanized }
			multiply_temp_variable = { manpower_temp = 1.2 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# anti_tank_brigade
			set_temp_variable = { manpower_temp = num_battalions_with_type@mot_anti_tank_brigade }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# anti_tank
		#
		# anti-air_brigade
			set_temp_variable = { manpower_temp = num_battalions_with_type@anti_air_brigade }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@mot_anti_air_brigade }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# anti-air
			set_temp_variable = { manpower_temp = num_battalions_with_type@anti_air }
			multiply_temp_variable = { manpower_temp = 0.3 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# armored_car_battalion
			set_temp_variable = { manpower_temp = num_battalions_with_type@armored_car }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@technicals }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# artillery_brigade
			set_temp_variable = { manpower_temp = num_battalions_with_type@field_artillery }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@field_artillery_towed }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@howitzer_artillery }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@howitzer_artillery_towed }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@siege_artillery }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@siege_artillery_towed }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@artillery_brigade }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@mot_artillery_brigade }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@rocket_artillery_brigade }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@mot_rocket_artillery_brigade }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@motorized_rocket_brigade }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# artillery
			set_temp_variable = { manpower_temp = num_battalions_with_type@field_artillery_support }
			multiply_temp_variable = { manpower_temp = 0.3 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@field_artillery_towed_support }
			multiply_temp_variable = { manpower_temp = 0.3 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@howitzer_artillery_support }
			multiply_temp_variable = { manpower_temp = 0.3 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@howitzer_artillery_towed_support }
			multiply_temp_variable = { manpower_temp = 0.3 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@siege_artillery_support }
			multiply_temp_variable = { manpower_temp = 0.3 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@machine_gun_company }
			multiply_temp_variable = { manpower_temp = 0.3 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@artillery }
			multiply_temp_variable = { manpower_temp = 0.3 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@rocket_artillery }
			multiply_temp_variable = { manpower_temp = 0.3 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# cavalry
			set_temp_variable = { manpower_temp = num_battalions_with_type@tribal_cavalry }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@camelry }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@tribal_pistoleer_cavalry }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@state_levy_cavalry }
			multiply_temp_variable = { manpower_temp = 1.0 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@feudal_cavalry }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@light_cavalry }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@heavy_cavalry }
			multiply_temp_variable = { manpower_temp = 1.0 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@uhlans }
			multiply_temp_variable = { manpower_temp = 1.0 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@camel_cavalry }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@dragoon }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@great_war_cavalry }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@cuirasse }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# engineer
			set_temp_variable = { manpower_temp = num_battalions_with_type@engineer }
			multiply_temp_variable = { manpower_temp = 0.1 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# field_hospital
			set_temp_variable = { manpower_temp = num_battalions_with_type@field_hospital }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# flame_tank
		#
		# infantry
			set_temp_variable = { manpower_temp = num_battalions_with_type@armed_peasants }
			multiply_temp_variable = { manpower_temp = 2.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@tribal_infantry }
			multiply_temp_variable = { manpower_temp = 1.0 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@native_mountaineers }
			multiply_temp_variable = { manpower_temp = 1.0 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@feudal_infantry }
			multiply_temp_variable = { manpower_temp = 1.0 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@irregular_infantry }
			multiply_temp_variable = { manpower_temp = 1.0 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@light_infantry }
			multiply_temp_variable = { manpower_temp = 1.0 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@line_infantry }
			multiply_temp_variable = { manpower_temp = 1.0 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@guard_infantry }
			multiply_temp_variable = { manpower_temp = 1.0 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@mounted_infantry }
			multiply_temp_variable = { manpower_temp = 1.0 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@early_marine }
			multiply_temp_variable = { manpower_temp = 1.0 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@bicycle_battalion }
			multiply_temp_variable = { manpower_temp = 1.0 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@great_war_infantry }
			multiply_temp_variable = { manpower_temp = 1.0 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@infantry }
			multiply_temp_variable = { manpower_temp = 1.0 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@marine }
			multiply_temp_variable = { manpower_temp = 1.0 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@kustjagare_battalion }
			multiply_temp_variable = { manpower_temp = 0.8 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@mountaineers }
			multiply_temp_variable = { manpower_temp = 1.0 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@shock_troops }
			multiply_temp_variable = { manpower_temp = 1.0 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@motorized }
			multiply_temp_variable = { manpower_temp = 1.2 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@mechanized }
			multiply_temp_variable = { manpower_temp = 1.2 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@airborne }
			multiply_temp_variable = { manpower_temp = 1.2 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@cold_war_infantry }
			multiply_temp_variable = { manpower_temp = 1.0 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@digital_infantry }
			multiply_temp_variable = { manpower_temp = 1.0 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@future_infantry }
			multiply_temp_variable = { manpower_temp = 1.0 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@pa_infantry }
			multiply_temp_variable = { manpower_temp = 1.0 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# light_armor
			set_temp_variable = { manpower_temp = num_battalions_with_type@light_armor }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# logistics
			set_temp_variable = { manpower_temp = num_battalions_with_type@logistics_company }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# maintenance
			set_temp_variable = { manpower_temp = num_battalions_with_type@maintenance_company }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# medium_armor
			set_temp_variable = { manpower_temp = num_battalions_with_type@medium_armor }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# military_police
			set_temp_variable = { manpower_temp = num_battalions_with_type@military_police }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# modern_armor
			set_temp_variable = { manpower_temp = num_battalions_with_type@modern_armor }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# modern_armor
			set_temp_variable = { manpower_temp = num_battalions_with_type@modern_armor }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# recon
			set_temp_variable = { manpower_temp = num_battalions_with_type@recon_cav }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@recon }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# robots
			set_temp_variable = { manpower_temp = num_battalions_with_type@light_robots }
			multiply_temp_variable = { manpower_temp = 0.01 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@medium_robots }
			multiply_temp_variable = { manpower_temp = 0.01 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@heavy_robots }
			multiply_temp_variable = { manpower_temp = 0.01 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# signal
			set_temp_variable = { manpower_temp = num_battalions_with_type@wired_signal_company }
			multiply_temp_variable = { manpower_temp = 0.1 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@signal_company }
			multiply_temp_variable = { manpower_temp = 0.1 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# sp_anti-air_brigade
			set_temp_variable = { manpower_temp = num_battalions_with_type@light_sp_anti_air_brigade }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@medium_sp_anti_air_brigade }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@heavy_sp_anti_air_brigade }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@super_heavy_sp_anti_air_brigade }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@modern_sp_anti_air_brigade }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# sp_artillery_brigade
			set_temp_variable = { manpower_temp = num_battalions_with_type@light_sp_artillery_brigade }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@medium_sp_artillery_brigade }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@heavy_sp_artillery_brigade }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@super_heavy_sp_artillery_brigade }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@modern_sp_artillery_brigade }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# super_heavy_armor
			set_temp_variable = { manpower_temp = num_battalions_with_type@super_heavy_armor }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# support
			set_temp_variable = { manpower_temp = num_battalions_with_type@bicycle_signal_company }
			multiply_temp_variable = { manpower_temp = 0.1 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@motorcycle_signal_company }
			multiply_temp_variable = { manpower_temp = 0.1 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@steam_car_support_company }
			multiply_temp_variable = { manpower_temp = 0.1 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@flamethrower_support_company }
			multiply_temp_variable = { manpower_temp = 0.1 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@sniper_team_support }
			multiply_temp_variable = { manpower_temp = 0.1 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# tank_destroyer_brigade
			set_temp_variable = { manpower_temp = num_battalions_with_type@light_tank_destroyer_brigade }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@medium_tank_destroyer_brigade }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@heavy_tank_destroyer_brigade }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@super_heavy_tank_destroyer_brigade }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_battalions_with_type@modern_tank_destroyer_brigade }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# train
			set_temp_variable = { manpower_temp = num_battalions_with_type@armored_train_company }
			multiply_temp_variable = { manpower_temp = 0.4 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#
		# walkers_armor
			set_temp_variable = { manpower_temp = num_battalions_with_type@armor_walker }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { army_manpower_k = manpower_temp }
		#

		## NAVY ##

		# battlecruiser
			set_temp_variable = { manpower_temp = num_ships_with_type@battle_cruiser }
			multiply_temp_variable = { manpower_temp = 0.75 }
			add_to_variable = { navy_manpower_k = manpower_temp }
		#
		# battleship
			set_temp_variable = { manpower_temp = num_ships_with_type@battleship }
			multiply_temp_variable = { manpower_temp = 2.5 } # 800, 2250 to 3200
			add_to_variable = { navy_manpower_k = manpower_temp }
		#
		# carrier
			set_temp_variable = { manpower_temp = num_ships_with_type@carrier }
			multiply_temp_variable = { manpower_temp = 3.5 } # 3050 to 4090
			add_to_variable = { navy_manpower_k = manpower_temp }
		#
		# coastal_submarine
			set_temp_variable = { manpower_temp = num_ships_with_type@coastal_submarine }
			multiply_temp_variable = { manpower_temp = 0.1 }
			add_to_variable = { navy_manpower_k = manpower_temp }
		#
		# corvette
			set_temp_variable = { manpower_temp = num_ships_with_type@corvette }
			multiply_temp_variable = { manpower_temp = 0.15 } # 120 to 225
			add_to_variable = { navy_manpower_k = manpower_temp }
		#
		# cruiser
			set_temp_variable = { manpower_temp = num_ships_with_type@cruiser }
			multiply_temp_variable = { manpower_temp = 0.6 } # 400 to 750
			add_to_variable = { navy_manpower_k = manpower_temp }
		#
		# cruiser_intermediate
			set_temp_variable = { manpower_temp = num_ships_with_type@unprotected_cruiser }
			multiply_temp_variable = { manpower_temp = 0.45 }
			add_to_variable = { navy_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_ships_with_type@protected_cruiser }
			multiply_temp_variable = { manpower_temp = 0.45 }
			add_to_variable = { navy_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_ships_with_type@armored_cruiser }
			multiply_temp_variable = { manpower_temp = 0.45 }
			add_to_variable = { navy_manpower_k = manpower_temp }
		#
		# destroyer
			set_temp_variable = { manpower_temp = num_ships_with_type@destroyer }
			multiply_temp_variable = { manpower_temp = 0.25 } # 150 to 300
			add_to_variable = { navy_manpower_k = manpower_temp }
		#
		# dreadnought
			set_temp_variable = { manpower_temp = num_ships_with_type@dreadnought }
			multiply_temp_variable = { manpower_temp = 1.6 } # 1200 to 2000
			add_to_variable = { navy_manpower_k = manpower_temp }
		#
		# frigate
			set_temp_variable = { manpower_temp = num_ships_with_type@frigate }
			multiply_temp_variable = { manpower_temp = 0.5 }
			add_to_variable = { navy_manpower_k = manpower_temp }
		#
		# gunboat
			set_temp_variable = { manpower_temp = num_ships_with_type@gunboat }
			multiply_temp_variable = { manpower_temp = 0.3 }
			add_to_variable = { navy_manpower_k = manpower_temp }
		#
		# heavy_cruiser
			set_temp_variable = { manpower_temp = num_ships_with_type@heavy_cruiser }
			multiply_temp_variable = { manpower_temp = 0.65 } # 500 to 800
			add_to_variable = { navy_manpower_k = manpower_temp }
		#
		# ironclad
			set_temp_variable = { manpower_temp = num_ships_with_type@ironclad }
			multiply_temp_variable = { manpower_temp = 0.5 } # 400 to 600
			add_to_variable = { navy_manpower_k = manpower_temp }
		#
		# lineship
			set_temp_variable = { manpower_temp = num_ships_with_type@lineship }
			multiply_temp_variable = { manpower_temp = 1.2 } # 1000/1200
			add_to_variable = { navy_manpower_k = manpower_temp }
		#
		# monitor
			set_temp_variable = { manpower_temp = num_ships_with_type@monitor }
			multiply_temp_variable = { manpower_temp = 0.15 }
			add_to_variable = { navy_manpower_k = manpower_temp }
		#
		# primitive_rowboat
			set_temp_variable = { manpower_temp = num_ships_with_type@primitive_rowboat }
			multiply_temp_variable = { manpower_temp = 0.015 }
			add_to_variable = { navy_manpower_k = manpower_temp }
		#
		# primitive_sailing_boat
			set_temp_variable = { manpower_temp = num_ships_with_type@primitive_sailing_boat }
			multiply_temp_variable = { manpower_temp = 0.05 }
			add_to_variable = { navy_manpower_k = manpower_temp }
		#
		# submarine
			set_temp_variable = { manpower_temp = num_ships_with_type@submarine }
			multiply_temp_variable = { manpower_temp = 0.1 }
			add_to_variable = { navy_manpower_k = manpower_temp }
		#
		# torpedo_boat
			set_temp_variable = { manpower_temp = num_ships_with_type@torpedo_boat }
			multiply_temp_variable = { manpower_temp = 0.08 } # 50 to 100
			add_to_variable = { navy_manpower_k = manpower_temp }
		#

		## AIRFORCE ##
		
		# air
			set_temp_variable = { manpower_temp = num_deployed_planes_with_type@balloon }
			multiply_temp_variable = { manpower_temp = 0.05 }
			add_to_variable = { air_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_deployed_planes_with_type@zeppelin }
			multiply_temp_variable = { manpower_temp = 0.6 }
			add_to_variable = { air_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_deployed_planes_with_type@fighter }
			multiply_temp_variable = { manpower_temp = 0.02 }
			add_to_variable = { air_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_deployed_planes_with_type@scout_plane }
			multiply_temp_variable = { manpower_temp = 0.04 }
			add_to_variable = { air_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_deployed_planes_with_type@cv_fighter }
			multiply_temp_variable = { manpower_temp = 0.02 }
			add_to_variable = { air_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_deployed_planes_with_type@heavy_fighter }
			multiply_temp_variable = { manpower_temp = 0.04 }
			add_to_variable = { air_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_deployed_planes_with_type@jet_fighter }
			multiply_temp_variable = { manpower_temp = 0.04 }
			add_to_variable = { air_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_deployed_planes_with_type@multirole_fighter }
			multiply_temp_variable = { manpower_temp = 0.04 }
			add_to_variable = { air_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_deployed_planes_with_type@cas }
			multiply_temp_variable = { manpower_temp = 0.02 }
			add_to_variable = { air_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_deployed_planes_with_type@cv_cas }
			multiply_temp_variable = { manpower_temp = 0.02 }
			add_to_variable = { air_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_deployed_planes_with_type@jet_cas }
			multiply_temp_variable = { manpower_temp = 0.04 }
			add_to_variable = { air_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_deployed_planes_with_type@nav_bomber }
			multiply_temp_variable = { manpower_temp = 0.02 }
			add_to_variable = { air_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_deployed_planes_with_type@cv_nav_bomber }
			multiply_temp_variable = { manpower_temp = 0.02 }
			add_to_variable = { air_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_deployed_planes_with_type@tac_bomber }
			multiply_temp_variable = { manpower_temp = 0.04 }
			add_to_variable = { air_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_deployed_planes_with_type@jet_tac_bomber }
			multiply_temp_variable = { manpower_temp = 0.08 }
			add_to_variable = { air_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_deployed_planes_with_type@strat_bomber }
			multiply_temp_variable = { manpower_temp = 0.08 }
			add_to_variable = { air_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_deployed_planes_with_type@jet_strat_bomber }
			multiply_temp_variable = { manpower_temp = 0.16 }
			add_to_variable = { air_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_deployed_planes_with_type@transport_plane }
			multiply_temp_variable = { manpower_temp = 0.08 }
			add_to_variable = { air_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_deployed_planes_with_type@rocket_interceptor }
			multiply_temp_variable = { manpower_temp = 0.05 }
			add_to_variable = { air_manpower_k = manpower_temp }
			
			set_temp_variable = { manpower_temp = num_deployed_planes_with_type@suicide_craft }
			multiply_temp_variable = { manpower_temp = 0.02 }
			add_to_variable = { air_manpower_k = manpower_temp }
		#

		set_variable = { military_manpower_k = army_manpower_k }
		add_to_variable = { military_manpower_k = navy_manpower_k }
		add_to_variable = { military_manpower_k = air_manpower_k }
	}

	gdp_update = {
		#State
		set_variable = { gdp_amount = 0 }
		for_each_loop = {
			array = global.resource_token_array
			value = r_token

			set_temp_variable = { gdp_temp = production@var:r_token }
			subtract_from_temp_variable = { gdp_temp = demand_input@var:r_token }
			multiply_temp_variable = { gdp_temp = controller:price@var:r_token }
			add_to_variable = { gdp_amount = gdp_temp }
		}
		set_temp_variable = { ind_tmp = industrial_capacity }
		subtract_from_temp_variable = { ind_tmp = industrial_capacity_use }
		subtract_from_temp_variable = { ind_tmp = global.base_industrial_capacity }
		subtract_from_temp_variable = { ind_tmp = modifier@local_industrial_capacity_modifier }
		#subtract_from_temp_variable = { ind_tmp = controller:modifier@industrial_capacity_modifier }
		add_to_temp_variable = { ind_tmp = modifier@local_industrial_capacity_use_modifier }
		#add_to_temp_variable = { ind_tmp = controller:modifier@industrial_capacity_use_modifier }
		multiply_temp_variable = { ind_tmp = price_industrial_capacity }
		add_to_variable = { gdp_amount = ind_tmp }
		

		set_temp_variable = { shp_tmp = shipping_capacity@port }
		multiply_temp_variable = { shp_tmp = controller:price_shipping_capacity }
		add_to_variable = { gdp_amount = shp_tmp }

		# Special
		set_temp_variable = { gdp_temp = productivity@industrial_complex }
		multiply_temp_variable = { gdp_temp = payroll_multiplier@industrial_complex }
		multiply_temp_variable = { gdp_temp = production_percentage@industrial_complex }
		divide_temp_variable = { gdp_temp = 100 }
		multiply_temp_variable = { gdp_temp = size@industrial_complex }
		add_to_variable = { gdp_amount = gdp_temp }
		
		set_temp_variable = { gdp_temp = productivity@arms_factory }
		multiply_temp_variable = { gdp_temp = payroll_multiplier@arms_factory }
		multiply_temp_variable = { gdp_temp = production_percentage@arms_factory }
		divide_temp_variable = { gdp_temp = 100 }
		multiply_temp_variable = { gdp_temp = size@arms_factory }
		add_to_variable = { gdp_amount = gdp_temp }
		
		set_temp_variable = { gdp_temp = productivity@dockyard }
		multiply_temp_variable = { gdp_temp = payroll_multiplier@dockyard }
		multiply_temp_variable = { gdp_temp = production_percentage@dockyard }
		divide_temp_variable = { gdp_temp = 100 }
		multiply_temp_variable = { gdp_temp = size@dockyard }
		add_to_variable = { gdp_amount = gdp_temp }


		# GDP per Capita
		set_variable = { gdp_per_capita = gdp_amount }
		divide_variable = { gdp_per_capita = pops }
		if = {
			limit = {
				check_variable = { gdp_per_capita > global.highest_state_gdp_c }
			}
			set_variable = { global.highest_state_gdp_c = gdp_per_capita }
		}
		if = {
			limit = {
				check_variable = { gdp_amount > global.highest_state_gdp }
			}
			set_variable = { global.highest_state_gdp = gdp_amount }
		}
	}
	country_calc_gdp = {
		set_variable = { gdp_amount = 0 }

		every_controlled_state = {
			gdp_update = yes

			add_to_variable = { PREV.gdp_amount = gdp_amount }
		}

		set_variable = { gdp_per_capita = gdp_amount }
		divide_variable = { gdp_per_capita = pops }
	}
	market_calc_gdp = {
		if = {
			limit = {
				check_variable = { market_leader = THIS }
				check_variable = { market_countries^num > 1 }
			}
			set_variable = { market_gdp = 0 }
			set_variable = { market_pops = 0 }
			set_temp_variable = { home_temp = THIS }
			for_each_scope_loop = {
				array = market_countries
				country_calc_gdp = yes
				add_to_variable = { home_temp:market_gdp = gdp_amount }
				add_to_variable = { home_temp:market_pops = pops }
			}
			set_variable = { market_gdp_per_capita = market_gdp }
			divide_variable = { market_gdp_per_capita = market_pops }
		}
		else_if = {
			limit = {
				NOT = { check_variable = { market_leader = THIS } }
			}
			set_variable = { market_gdp = market_leader:market_gdp }
			set_variable = { market_pops = market_leader:market_pops }
			set_variable = { market_gdp_per_capita = market_leader:market_gdp_per_capita }
		}
		else = {
			country_calc_gdp = yes
			set_variable = { market_gdp = gdp_amount }
			set_variable = { market_pops = pops }
			set_variable = { market_gdp_per_capita = gdp_per_capita }
		}
	}

	initialize_gdp_graph = {
		# run after gdp_update
		clear_array = gdp_amount_array
		add_to_array = { gdp_amount_array = gdp_amount }
		for_loop_effect = {
			start = 0
			end = 36
			value = i

			set_temp_variable = { random_growth_temp = random }
			subtract_from_temp_variable = { random_growth_temp = 0.5 }

			set_temp_variable = { growth_rate_temp = 1.00 }
			if = {
				limit = {
					has_variable = controller:initial_gdp_growth_rate
				}
				set_temp_variable = { growth_rate_temp = controller:initial_gdp_growth_rate }
			}
			divide_temp_variable = { growth_rate_temp = 12 }
			add_to_temp_variable = { growth_rate_temp = 100 }
			add_to_temp_variable = { growth_rate_temp = random_growth_temp }
		
			set_temp_variable = { temp_val = gdp_amount_array^0 }
			if = {
				limit = {
					check_variable = { temp_val > 10000 }
				}
				divide_temp_variable = { temp_val = growth_rate_temp }
				multiply_temp_variable = { temp_val = 100 }
			}
			else = {
				multiply_temp_variable = { temp_val = 100 }
				divide_temp_variable = { temp_val = growth_rate_temp }
			}

			add_to_array = { array = gdp_amount_array index = 0 value = temp_val }
		}
		econ_rerender_gdp_graph = yes
	}
	econ_rerender_gdp_graph = {
		# Code courtesy of TNO (totally not stolen. Sorry, couldn't figure out the graph line thing on my own. I can make complicated economy systems but graphs? Nah).
		# Find the maximum and minimum GDP values for the graph
		set_temp_variable = { min = gdp_amount_array^0 }
		set_temp_variable = { max = gdp_amount_array^0 }
		for_loop_effect = {
			start = 0
			end = gdp_amount_array^num
			value = i

			if = {
				limit = { check_variable = { gdp_amount_array^i > max } }
				set_temp_variable = { max = gdp_amount_array^i }
			}
			if = {
				limit = { check_variable = { gdp_amount_array^i < min } }
				set_temp_variable = { min = gdp_amount_array^i }
			}
		}

		# Our range is (min value / 1.1) - (max value * 1.1)
		multiply_temp_variable = { max = 1.05 }
		divide_temp_variable = { min = 1.05 }


		set_temp_variable = { range = max }
		subtract_from_temp_variable = { range = min }
		divide_temp_variable = { range = 100 }

		# Get all segments Progress Bar values
		clear_array = gdp_graph_frames
		for_loop_effect = {
			start = 1
			end = gdp_amount_array^num
			value = i

			set_temp_variable = { j = i }
			add_to_temp_variable = { j = -1 }

			set_temp_variable = { hi = gdp_amount_array^i }
			set_temp_variable = { lo = gdp_amount_array^j }


			subtract_from_temp_variable = { hi = min }
			subtract_from_temp_variable = { lo = min }
			divide_temp_variable = { hi = range }
			divide_temp_variable = { lo = range }

			round_temp_variable = hi
			round_temp_variable = lo

			set_temp_variable = { endpoints = lo }
			multiply_temp_variable = { endpoints = 1000 }
			add_to_temp_variable = { endpoints = hi }
			add_to_array = { gdp_graph_frames = endpoints }
		}
		
		#Correcting the max/min
		set_variable = { gdp_graph_min = min }
		set_variable = { gdp_graph_max = max }
		if = {
			limit = {
				check_variable = { gdp_graph_max > 1000 } #gdp_graph_min should always be less than max, so there's no point to checking it
			}
			divide_variable = { gdp_graph_min = 1000 }
			divide_variable = { gdp_graph_max = 1000 }
			set_state_flag = gdp_graph_thousands
		}
		else_if = {
			limit = {
				check_variable = { gdp_graph_max > 100 }
			}
			divide_variable = { gdp_graph_min = 100 } #This gets rid of some decimals so there's only up to 4 digits
			divide_variable = { gdp_graph_max = 100 }
			multiply_variable = { gdp_graph_min = 100 }
			multiply_variable = { gdp_graph_max = 100 }
		}
		else_if = {
			limit = {
				check_variable = { gdp_graph_max > 10 }
			}
			divide_variable = { gdp_graph_min = 10 } #This gets rid of some decimals so there's only up to 4 digits
			divide_variable = { gdp_graph_max = 10 }
			multiply_variable = { gdp_graph_min = 10 }
			multiply_variable = { gdp_graph_max = 10 }
		}

		add_to_variable = { update_state_econ_window = 1 }
	}
	initialize_country_gdp_graph = {
		# run after gdp_update
		set_temp_variable = { gdp_amount_temp = gdp_amount }
		divide_temp_variable = { gdp_amount_temp = 1000 }
		multiply_temp_variable = { gdp_amount_temp = 3 }
		clear_array = gdp_amount_quarterly
		add_to_array = { gdp_amount_quarterly = gdp_amount_temp }
		for_loop_effect = {
			start = 0
			end = 40
			value = i

			set_temp_variable = { random_growth_temp = random }
			subtract_from_temp_variable = { random_growth_temp = 0.5 }

			set_temp_variable = { growth_rate_temp = 1.00 }
			if = {
				limit = {
					has_variable = controller:initial_gdp_growth_rate
				}
				set_temp_variable = { growth_rate_temp = initial_gdp_growth_rate }
			}
			divide_temp_variable = { growth_rate_temp = 4 }
			add_to_temp_variable = { growth_rate_temp = 100 }
			add_to_temp_variable = { growth_rate_temp = random_growth_temp }
		
			set_temp_variable = { temp_val = gdp_amount_quarterly^0 }
			if = {
				limit = {
					check_variable = { temp_val > 10000 }
				}
				divide_temp_variable = { temp_val = growth_rate_temp }
				multiply_temp_variable = { temp_val = 100 }
			}
			else = {
				multiply_temp_variable = { temp_val = 100 }
				divide_temp_variable = { temp_val = growth_rate_temp }
			}

			add_to_array = { array = gdp_amount_quarterly index = 0 value = temp_val }
		}
		econ_rerender_country_gdp_graph = yes
	}
	econ_rerender_country_gdp_graph = {
		# Code courtesy of TNO (totally not stolen. Sorry, couldn't figure out the graph line thing on my own. I can make complicated economy systems but graphs? Nah).
		# Find the maximum and minimum GDP values for the graph
		set_temp_variable = { min = gdp_amount_quarterly^0 }
		set_temp_variable = { max = gdp_amount_quarterly^0 }
		for_loop_effect = {
			start = 0
			end = gdp_amount_quarterly^num
			value = i

			if = {
				limit = { check_variable = { gdp_amount_quarterly^i > max } }
				set_temp_variable = { max = gdp_amount_quarterly^i }
			}
			if = {
				limit = { check_variable = { gdp_amount_quarterly^i < min } }
				set_temp_variable = { min = gdp_amount_quarterly^i }
			}
		}

		# Our range is (min value / 1.1) - (max value * 1.1)
		multiply_temp_variable = { max = 1.05 }
		divide_temp_variable = { min = 1.05 }


		set_temp_variable = { range = max }
		subtract_from_temp_variable = { range = min }
		divide_temp_variable = { range = 100 }

		# Get all segments Progress Bar values
		clear_array = gdp_graph_frames
		for_loop_effect = {
			start = 1
			end = gdp_amount_quarterly^num
			value = i

			set_temp_variable = { j = i }
			add_to_temp_variable = { j = -1 }

			set_temp_variable = { hi = gdp_amount_quarterly^i }
			set_temp_variable = { lo = gdp_amount_quarterly^j }


			subtract_from_temp_variable = { hi = min }
			subtract_from_temp_variable = { lo = min }
			divide_temp_variable = { hi = range }
			divide_temp_variable = { lo = range }

			round_temp_variable = hi
			round_temp_variable = lo

			set_temp_variable = { endpoints = lo }
			multiply_temp_variable = { endpoints = 1000 }
			add_to_temp_variable = { endpoints = hi }
			add_to_array = { gdp_graph_frames = endpoints }
		}
		
		#Correcting the max/min
		set_variable = { gdp_graph_min = min }
		set_variable = { gdp_graph_max = max }
		if = {
			limit = {
				check_variable = { gdp_graph_max > 1000 } #gdp_graph_min should always be less than max, so there's no point to checking it
			}
			divide_variable = { gdp_graph_min = 1000 }
			divide_variable = { gdp_graph_max = 1000 }
			set_country_flag = gdp_graph_thousands
		}
		else_if = {
			limit = {
				check_variable = { gdp_graph_max > 100 }
			}
			divide_variable = { gdp_graph_min = 100 } #This gets rid of some decimals so there's only up to 4 digits
			divide_variable = { gdp_graph_max = 100 }
			multiply_variable = { gdp_graph_min = 100 }
			multiply_variable = { gdp_graph_max = 100 }
		}
		else_if = {
			limit = {
				check_variable = { gdp_graph_max > 10 }
			}
			divide_variable = { gdp_graph_min = 10 } #This gets rid of some decimals so there's only up to 4 digits
			divide_variable = { gdp_graph_max = 10 }
			multiply_variable = { gdp_graph_min = 10 }
			multiply_variable = { gdp_graph_max = 10 }
		}

		add_to_variable = { update_state_econ_window = 1 }
	}
	
	initialize_country_budget_graph = {
		# run after budget_update
		clear_array = net_budget_array
		add_to_array = { net_budget_array = net_budget }
		for_loop_effect = {
			start = 0
			end = 32
			value = i

			set_temp_variable = { random_change_temp = random }
			subtract_from_temp_variable = { random_change_temp = 0.5 }
			multiply_temp_variable = { random_change_temp = revenue }
			divide_temp_variable = { random_change_temp = 50 }
		
			set_temp_variable = { temp_val = net_budget }
			add_to_temp_variable = { temp_val = random_change_temp }

			add_to_array = { array = net_budget_array index = 0 value = temp_val }
		}
		econ_rerender_country_budget_graph = yes
	}
	econ_rerender_country_budget_graph = {
		# Code courtesy of TNO (totally not stolen. Sorry, couldn't figure out the graph line thing on my own. I can make complicated economy systems but graphs? Nah).
		# Find the maximum and minimum budget values for the graph
		set_temp_variable = { min = net_budget_array^0 }
		set_temp_variable = { max = net_budget_array^0 }
		for_loop_effect = {
			start = 0
			end = net_budget_array^num
			value = i

			if = {
				limit = { check_variable = { net_budget_array^i > max } }
				set_temp_variable = { max = net_budget_array^i }
			}
			if = {
				limit = { check_variable = { net_budget_array^i < min } }
				set_temp_variable = { min = net_budget_array^i }
			}
		}

		# The range is maximum(max, min) * 2 * 1.2
		if = {
			limit = {
				check_variable = { max < 0 }
			}
			set_temp_variable = { max = min }
			multiply_temp_variable = { max = -1 }
		}
		else_if = {
			limit = {
				check_variable = { min < 0 }
			}
			multiply_temp_variable = { min = -1 }
			if = {
				limit = {
					check_variable = { max > min }
				}
				set_temp_variable = { min = max }
				multiply_temp_variable = { min = -1 }
			}
			else = {
				set_temp_variable = { max = min }
				multiply_temp_variable = { min = -1 }
			}
		}
		else = {
			set_temp_variable = { min = max }
			multiply_temp_variable = { min = -1 }
		}
		
		multiply_temp_variable = { max = 1.2 }
		multiply_temp_variable = { min = 1.2 }


		set_temp_variable = { range = max }
		subtract_from_temp_variable = { range = min }
		divide_temp_variable = { range = 100 }

		# Get all segments Progress Bar values
		clear_array = budget_graph_frames
		for_loop_effect = {
			start = 1
			end = net_budget_array^num
			value = i

			set_temp_variable = { j = i }
			add_to_temp_variable = { j = -1 }

			set_temp_variable = { hi = net_budget_array^i }
			set_temp_variable = { lo = net_budget_array^j }

			subtract_from_temp_variable = { hi = min }
			subtract_from_temp_variable = { lo = min }
			
			divide_temp_variable = { hi = range }
			divide_temp_variable = { lo = range }

			round_temp_variable = hi
			round_temp_variable = lo

			set_temp_variable = { endpoints = lo }
			multiply_temp_variable = { endpoints = 1000 }
			add_to_temp_variable = { endpoints = hi }
			add_to_array = { budget_graph_frames = endpoints }
		}
		
		set_variable = { budget_graph_min = min }
		set_variable = { budget_graph_max = max }

		add_to_variable = { update_state_econ_window = 1 }
	}

	create_buildings_under_construction_list = {
		# Country Scope
		# FIRE ONLY IF PLAYER COUNTRY. AI does not need this information
		# Creates a list of buildings under construction in your country, sorted by completion time.

		clear_array = under_construction_list_state
		clear_array = under_construction_list_building
		clear_array = under_construction_list_type
		clear_array = under_construction_list_time

		every_controlled_state = { # Iterate through each state, only going to states with constructions in it
			limit = {
				any_of = {
					array = buildings
					value = building_token
					check_variable = { construction_amount@var:building_token > 0 }
					check_variable = { construction_speed@var:building_token > 0 }
				}
			}

			for_each_loop = { # Iterate through each building, adding buildings under construction to the list
				array = buildings
				value = building_token
				if = {
					limit = {
						check_variable = { construction_amount@var:building_token > 0 }
						check_variable = { construction_speed@var:building_token > 0 }
					}
					set_temp_variable = { months_temp = construction_amount@var:building_token }
					if = {
						limit = {
							check_variable = { months_temp > 0 }
						}
					}
					divide_temp_variable = { months_temp = construction_speed@var:building_token }
					add_to_temp_variable = { months_temp = 0.499 }
					round_temp_variable = months_temp
					
					for_each_loop = { # Put buildings in list in sorted order
						array = PREV.under_construction_list_time
						index = ii
						value = vv
						break = bb

						if = {
							limit = {
								check_variable = { vv > months_temp }
							}
							add_to_array = { 
								array = PREV.under_construction_list_time 
								value = months_temp
								index = ii
							}
							add_to_array = { 
								array = PREV.under_construction_list_type 
								value = building_token
								index = ii
							}
							add_to_array = { 
								array = PREV.under_construction_list_building
								value = building_token
								index = ii
							}
							add_to_array = { 
								array = PREV.under_construction_list_state 
								value = THIS
								index = ii
							}
							set_temp_variable = { bb = 1 }
						}
					}
					if = {
						limit = {
							check_variable = { bb = 0 }
						}
						add_to_array = { PREV.under_construction_list_state = THIS }
						add_to_array = { PREV.under_construction_list_type = building_token }
						add_to_array = { PREV.under_construction_list_building = building_token }
						add_to_array = { PREV.under_construction_list_time = months_temp }
					}
				}
			}
		}
		
		# set_temp_variable = { years_temp = months_temp }
		# divide_temp_variable = { years_temp = 12 }
		# subtract_from_temp_variable = { years_temp = 0.5 }
		# round_temp_variable = years_temp

		# set_temp_variable = { months_sub_temp = years_temp }
		# multiply_temp_variable = { months_sub_temp = 12 }
		# subtract_from_temp_variable = { months_temp = months_sub_temp }
	}
#

#Modifiers
	r_update_modifiers_state_effects = {
		set_variable = { wage_factor = global.base_wage_factor }

		set_variable = { industry_construction_speed_factor = controller:modifier@industry_construction_speed_factor }
		set_variable = { industry_construction_cost_factor = controller:modifier@industry_construction_cost_factor }
		set_variable = { industry_upgrade_speed_factor = controller:modifier@industry_upgrade_speed_factor }
		set_variable = { industry_upgrade_cost_factor = controller:modifier@industry_upgrade_cost_factor }
        
        for_each_loop = {
            array = global.industry_token_array
            value = modifier_token
			set_variable = { industry_input_factor@var:modifier_token = controller:industry_input_factor@var:modifier_token }
			set_variable = { industry_output_factor@var:modifier_token = controller:industry_output_factor@var:modifier_token }
			set_variable = { industry_throughput_factor@var:modifier_token = controller:industry_throughput_factor@var:modifier_token }
			set_variable = { industry_attractiveness_modifier@var:modifier_token = controller:industry_attractiveness_modifier@var:modifier_token }
			set_variable = { industry_attractiveness_factor@var:modifier_token = controller:industry_attractiveness_factor@var:modifier_token }
        }

		#Economies of Scale
			#For all but subsistence farms
			for_each_loop = {
				array = industries
				value = modifier_token
				if = {
					limit = {
						NOT = { check_variable = { modifier_token = token:building_subsistence_farm } }
					}

					set_temp_variable = { mod_temp = size@var:modifier_token }
					multiply_temp_variable = { mod_temp = global.buildings_economy_of_scale_factor }
					add_to_variable = { industry_throughput_factor@var:modifier_token = 0 }
				}
			}

		#
	}
	r_update_modifiers_country_effects = {
		set_variable = { wage_factor = global.base_wage_factor }

		set_variable = { industry_construction_speed_factor = modifier@industry_construction_speed_factor }
		set_variable = { industry_construction_cost_factor = modifier@industry_construction_cost_factor }
		set_variable = { industry_upgrade_speed_factor = modifier@industry_upgrade_speed_factor }
		set_variable = { industry_upgrade_cost_factor = modifier@industry_upgrade_cost_factor }

        for_each_loop = {
            array = global.industry_token_array
            value = modifier_token
			set_variable = { industry_input_factor@var:modifier_token = modifier@industry_input_factor }
			set_variable = { industry_output_factor@var:modifier_token = modifier@industry_output_factor }
			set_variable = { industry_throughput_factor@var:modifier_token = modifier@industry_throughput_factor }
			set_variable = { industry_attractiveness_modifier@var:modifier_token = modifier@industry_attractiveness_modifier }
			set_variable = { industry_attractiveness_factor@var:modifier_token = modifier@industry_attractiveness_factor }

			set_variable = { industry_prospecting_ability_factor@var:modifier_token = modifier@prospecting_ability_factor }
        }

        for_each_loop = {
            array = global.factory_modifier_array
            value = modifier_token
			add_to_variable = { industry_input_factor@var:modifier_token = modifier@factory_input_factor }
			add_to_variable = { industry_output_factor@var:modifier_token = modifier@factory_output_factor }
			add_to_variable = { industry_throughput_factor@var:modifier_token = modifier@factory_throughput_factor }
			add_to_variable = { industry_attractiveness_modifier@var:modifier_token = modifier@factory_attractiveness_modifier }
			add_to_variable = { industry_attractiveness_factor@var:modifier_token = modifier@factory_attractiveness_factor }
        }

        for_each_loop = {
            array = global.agriculture_modifier_array
            value = modifier_token
			add_to_variable = { industry_input_factor@var:modifier_token = modifier@agriculture_input_factor }
			add_to_variable = { industry_output_factor@var:modifier_token = modifier@agriculture_output_factor }
			add_to_variable = { industry_throughput_factor@var:modifier_token = modifier@agriculture_throughput_factor }
			add_to_variable = { industry_attractiveness_modifier@var:modifier_token = modifier@agriculture_attractiveness_modifier }
			add_to_variable = { industry_attractiveness_factor@var:modifier_token = modifier@agriculture_attractiveness_factor }
			add_to_variable = { industry_prospecting_ability_factor@var:modifier_token = modifier@agriculture_prospecting_ability_factor }
        }
		subtract_from_variable = { industry_prospecting_ability_factor@wood = modifier@agriculture_prospecting_ability_factor }
		add_to_variable = { industry_prospecting_ability_factor@wood = modifier@logging_prospecting_ability_factor }

        for_each_loop = {
            array = global.mining_modifier_array
            value = modifier_token
			add_to_variable = { industry_input_factor@var:modifier_token = modifier@mining_input_factor }
			add_to_variable = { industry_output_factor@var:modifier_token = modifier@mining_output_factor }
			add_to_variable = { industry_throughput_factor@var:modifier_token = modifier@mining_throughput_factor }
			add_to_variable = { industry_attractiveness_modifier@var:modifier_token = modifier@mining_attractiveness_modifier }
			add_to_variable = { industry_attractiveness_factor@var:modifier_token = modifier@mining_attractiveness_factor }
			add_to_variable = { industry_prospecting_ability_factor@var:modifier_token = modifier@mining_prospecting_ability_factor }
        }
		add_to_variable = { industry_prospecting_ability_factor@oil = modifier@oil_prospecting_ability_factor }
		
        for_each_loop = {
            array = global.urban_modifier_array
            value = modifier_token
			add_to_variable = { industry_input_factor@var:modifier_token = modifier@urban_input_factor }
			add_to_variable = { industry_output_factor@var:modifier_token = modifier@urban_output_factor }
			add_to_variable = { industry_throughput_factor@var:modifier_token = modifier@urban_throughput_factor }
			add_to_variable = { industry_attractiveness_modifier@var:modifier_token = modifier@urban_attractiveness_modifier }
			add_to_variable = { industry_attractiveness_factor@var:modifier_token = modifier@urban_attractiveness_factor }
        }

        # Special Buildings
            add_to_variable = { industry_input_factor@token:infrastructure = modifier@infrastructure_input_factor }
            add_to_variable = { industry_output_factor@token:infrastructure = modifier@infrastructure_output_factor }
            add_to_variable = { industry_throughput_factor@token:infrastructure = modifier@infrastructure_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:infrastructure = modifier@infrastructure_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:infrastructure = modifier@infrastructure_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:railway = modifier@railway_input_factor }
            add_to_variable = { industry_output_factor@token:railway = modifier@railway_output_factor }
            add_to_variable = { industry_throughput_factor@token:railway = modifier@railway_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:railway = modifier@railway_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:railway = modifier@railway_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:port = modifier@port_input_factor }
            add_to_variable = { industry_output_factor@token:port = modifier@port_output_factor }
            add_to_variable = { industry_throughput_factor@token:port = modifier@port_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:port = modifier@port_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:port = modifier@port_attractiveness_factor }
        #
        # Agriculture Buildings
			add_to_variable = { industry_output_factor@token:subsistence_farm = modifier@subsistence_farm_output_factor }
			
            add_to_variable = { industry_input_factor@token:crop_farm = modifier@crop_farm_input_factor }
            add_to_variable = { industry_output_factor@token:crop_farm = modifier@crop_farm_output_factor }
            add_to_variable = { industry_throughput_factor@token:crop_farm = modifier@crop_farm_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:crop_farm = modifier@crop_farm_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:crop_farm = modifier@crop_farm_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:rice_paddy = modifier@rice_paddy_input_factor }
            add_to_variable = { industry_output_factor@token:rice_paddy = modifier@rice_paddy_output_factor }
            add_to_variable = { industry_throughput_factor@token:rice_paddy = modifier@rice_paddy_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:rice_paddy = modifier@rice_paddy_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:rice_paddy = modifier@rice_paddy_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:livestock_ranch = modifier@livestock_ranch_input_factor }
            add_to_variable = { industry_output_factor@token:livestock_ranch = modifier@livestock_ranch_output_factor }
            add_to_variable = { industry_throughput_factor@token:livestock_ranch = modifier@livestock_ranch_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:livestock_ranch = modifier@livestock_ranch_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:livestock_ranch = modifier@livestock_ranch_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:cotton_plantation = modifier@cotton_plantation_input_factor }
            add_to_variable = { industry_output_factor@token:cotton_plantation = modifier@cotton_plantation_output_factor }
            add_to_variable = { industry_throughput_factor@token:cotton_plantation = modifier@cotton_plantation_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:cotton_plantation = modifier@cotton_plantation_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:cotton_plantation = modifier@cotton_plantation_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:luxuries_plantation = modifier@luxuries_plantation_input_factor }
            add_to_variable = { industry_output_factor@token:luxuries_plantation = modifier@luxuries_plantation_output_factor }
            add_to_variable = { industry_throughput_factor@token:luxuries_plantation = modifier@luxuries_plantation_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:luxuries_plantation = modifier@luxuries_plantation_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:luxuries_plantation = modifier@luxuries_plantation_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:rubber_plantation = modifier@rubber_plantation_input_factor }
            add_to_variable = { industry_output_factor@token:rubber_plantation = modifier@rubber_plantation_output_factor }
            add_to_variable = { industry_throughput_factor@token:rubber_plantation = modifier@rubber_plantation_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:rubber_plantation = modifier@rubber_plantation_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:rubber_plantation = modifier@rubber_plantation_attractiveness_factor }
        #
        # Factory Buildings
            
            add_to_variable = { industry_input_factor@token:steel_foundry = modifier@steel_foundry_input_factor }
            add_to_variable = { industry_output_factor@token:steel_foundry = modifier@steel_foundry_output_factor }
            add_to_variable = { industry_throughput_factor@token:steel_foundry = modifier@steel_foundry_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:steel_foundry = modifier@steel_foundry_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:steel_foundry = modifier@steel_foundry_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:mechanical_works = modifier@mechanical_works_input_factor }
            add_to_variable = { industry_output_factor@token:mechanical_works = modifier@mechanical_works_output_factor }
            add_to_variable = { industry_throughput_factor@token:mechanical_works = modifier@mechanical_works_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:mechanical_works = modifier@mechanical_works_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:mechanical_works = modifier@mechanical_works_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:chemical_plant = modifier@chemical_plant_input_factor }
            add_to_variable = { industry_output_factor@token:chemical_plant = modifier@chemical_plant_output_factor }
            add_to_variable = { industry_throughput_factor@token:chemical_plant = modifier@chemical_plant_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:chemical_plant = modifier@chemical_plant_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:chemical_plant = modifier@chemical_plant_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:plastics_plant = modifier@plastics_plant_input_factor }
            add_to_variable = { industry_output_factor@token:plastics_plant = modifier@plastics_plant_output_factor }
            add_to_variable = { industry_throughput_factor@token:plastics_plant = modifier@plastics_plant_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:plastics_plant = modifier@plastics_plant_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:plastics_plant = modifier@plastics_plant_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:composites_manufactory = modifier@composites_manufactory_input_factor }
            add_to_variable = { industry_output_factor@token:composites_manufactory = modifier@composites_manufactory_output_factor }
            add_to_variable = { industry_throughput_factor@token:composites_manufactory = modifier@composites_manufactory_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:composites_manufactory = modifier@composites_manufactory_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:composites_manufactory = modifier@composites_manufactory_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:electronics_factory = modifier@electronics_factory_input_factor }
            add_to_variable = { industry_output_factor@token:electronics_factory = modifier@electronics_factory_output_factor }
            add_to_variable = { industry_throughput_factor@token:electronics_factory = modifier@electronics_factory_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:electronics_factory = modifier@electronics_factory_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:electronics_factory = modifier@electronics_factory_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:battery_plant = modifier@battery_plant_input_factor }
            add_to_variable = { industry_output_factor@token:battery_plant = modifier@battery_plant_output_factor }
            add_to_variable = { industry_throughput_factor@token:battery_plant = modifier@battery_plant_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:battery_plant = modifier@battery_plant_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:battery_plant = modifier@battery_plant_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:tooling_workshop = modifier@tooling_workshop_input_factor }
            add_to_variable = { industry_output_factor@token:tooling_workshop = modifier@tooling_workshop_output_factor }
            add_to_variable = { industry_throughput_factor@token:tooling_workshop = modifier@tooling_workshop_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:tooling_workshop = modifier@tooling_workshop_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:tooling_workshop = modifier@tooling_workshop_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:consumer_goods_factory = modifier@consumer_goods_factory_input_factor }
            add_to_variable = { industry_output_factor@token:consumer_goods_factory = modifier@consumer_goods_factory_output_factor }
            add_to_variable = { industry_throughput_factor@token:consumer_goods_factory = modifier@consumer_goods_factory_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:consumer_goods_factory = modifier@consumer_goods_factory_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:consumer_goods_factory = modifier@consumer_goods_factory_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:textile_mill = modifier@textile_mill_input_factor }
            add_to_variable = { industry_output_factor@token:textile_mill = modifier@textile_mill_output_factor }
            add_to_variable = { industry_throughput_factor@token:textile_mill = modifier@textile_mill_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:textile_mill = modifier@textile_mill_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:textile_mill = modifier@textile_mill_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:appliance_factory = modifier@appliance_factory_input_factor }
            add_to_variable = { industry_output_factor@token:appliance_factory = modifier@appliance_factory_output_factor }
            add_to_variable = { industry_throughput_factor@token:appliance_factory = modifier@appliance_factory_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:appliance_factory = modifier@appliance_factory_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:appliance_factory = modifier@appliance_factory_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:vehicle_assembly_plant = modifier@vehicle_assembly_plant_input_factor }
            add_to_variable = { industry_output_factor@token:vehicle_assembly_plant = modifier@vehicle_assembly_plant_output_factor }
            add_to_variable = { industry_throughput_factor@token:vehicle_assembly_plant = modifier@vehicle_assembly_plant_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:vehicle_assembly_plant = modifier@vehicle_assembly_plant_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:vehicle_assembly_plant = modifier@vehicle_assembly_plant_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:computer_fab_facility = modifier@computer_fab_facility_input_factor }
            add_to_variable = { industry_output_factor@token:computer_fab_facility = modifier@computer_fab_facility_output_factor }
            add_to_variable = { industry_throughput_factor@token:computer_fab_facility = modifier@computer_fab_facility_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:computer_fab_facility = modifier@computer_fab_facility_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:computer_fab_facility = modifier@computer_fab_facility_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:synthetic_fiber_plant = modifier@synthetic_fiber_plant_input_factor }
            add_to_variable = { industry_output_factor@token:synthetic_fiber_plant = modifier@synthetic_fiber_plant_output_factor }
            add_to_variable = { industry_throughput_factor@token:synthetic_fiber_plant = modifier@synthetic_fiber_plant_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:synthetic_fiber_plant = modifier@synthetic_fiber_plant_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:synthetic_fiber_plant = modifier@synthetic_fiber_plant_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:synthetic_rubber_refinery = modifier@synthetic_rubber_refinery_input_factor }
            add_to_variable = { industry_output_factor@token:synthetic_rubber_refinery = modifier@synthetic_rubber_refinery_output_factor }
            add_to_variable = { industry_throughput_factor@token:synthetic_rubber_refinery = modifier@synthetic_rubber_refinery_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:synthetic_rubber_refinery = modifier@synthetic_rubber_refinery_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:synthetic_rubber_refinery = modifier@synthetic_rubber_refinery_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:synthetic_oil_refinery = modifier@synthetic_oil_refinery_input_factor }
            add_to_variable = { industry_output_factor@token:synthetic_oil_refinery = modifier@synthetic_oil_refinery_output_factor }
            add_to_variable = { industry_throughput_factor@token:synthetic_oil_refinery = modifier@synthetic_oil_refinery_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:synthetic_oil_refinery = modifier@synthetic_oil_refinery_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:synthetic_oil_refinery = modifier@synthetic_oil_refinery_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:power_plant = modifier@power_plant_input_factor }
            add_to_variable = { industry_output_factor@token:power_plant = modifier@power_plant_output_factor }
            add_to_variable = { industry_throughput_factor@token:power_plant = modifier@power_plant_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:power_plant = modifier@power_plant_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:power_plant = modifier@power_plant_attractiveness_factor }
        #
        # Urban Buildings
            add_to_variable = { industry_input_factor@token:urban_center = modifier@urban_center_input_factor }
            add_to_variable = { industry_output_factor@token:urban_center = modifier@urban_center_output_factor }
            add_to_variable = { industry_throughput_factor@token:urban_center = modifier@urban_center_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:urban_center = modifier@urban_center_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:urban_center = modifier@urban_center_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:entertainment_hub = modifier@entertainment_hub_input_factor }
            add_to_variable = { industry_output_factor@token:entertainment_hub = modifier@entertainment_hub_output_factor }
            add_to_variable = { industry_throughput_factor@token:entertainment_hub = modifier@entertainment_hub_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:entertainment_hub = modifier@entertainment_hub_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:entertainment_hub = modifier@entertainment_hub_attractiveness_factor }
        #
        # RGOs
            add_to_variable = { industry_input_factor@token:food = modifier@food_input_factor }
            add_to_variable = { industry_output_factor@token:food = modifier@food_output_factor }
            add_to_variable = { industry_throughput_factor@token:food = modifier@food_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:food = modifier@food_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:food = modifier@food_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:luxuries = modifier@luxuries_input_factor }
            add_to_variable = { industry_output_factor@token:luxuries = modifier@luxuries_output_factor }
            add_to_variable = { industry_throughput_factor@token:luxuries = modifier@luxuries_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:luxuries = modifier@luxuries_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:luxuries = modifier@luxuries_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:wood = modifier@wood_input_factor }
            add_to_variable = { industry_output_factor@token:wood = modifier@wood_output_factor }
            add_to_variable = { industry_throughput_factor@token:wood = modifier@wood_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:wood = modifier@wood_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:wood = modifier@wood_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:fiber = modifier@fiber_input_factor }
            add_to_variable = { industry_output_factor@token:fiber = modifier@fiber_output_factor }
            add_to_variable = { industry_throughput_factor@token:fiber = modifier@fiber_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:fiber = modifier@fiber_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:fiber = modifier@fiber_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:iron = modifier@iron_input_factor }
            add_to_variable = { industry_output_factor@token:iron = modifier@iron_output_factor }
            add_to_variable = { industry_throughput_factor@token:iron = modifier@iron_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:iron = modifier@iron_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:iron = modifier@iron_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:coal = modifier@coal_input_factor }
            add_to_variable = { industry_output_factor@token:coal = modifier@coal_output_factor }
            add_to_variable = { industry_throughput_factor@token:coal = modifier@coal_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:coal = modifier@coal_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:coal = modifier@coal_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:copper = modifier@copper_input_factor }
            add_to_variable = { industry_output_factor@token:copper = modifier@copper_output_factor }
            add_to_variable = { industry_throughput_factor@token:copper = modifier@copper_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:copper = modifier@copper_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:copper = modifier@copper_attractiveness_factor }

            add_to_variable = { industry_input_factor@token:valuables = modifier@valuables_input_factor }
            add_to_variable = { industry_output_factor@token:valuables = modifier@valuables_output_factor }
            add_to_variable = { industry_throughput_factor@token:valuables = modifier@valuables_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:valuables = modifier@valuables_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:valuables = modifier@valuables_attractiveness_factor }

            
            add_to_variable = { industry_input_factor@token:oil = modifier@oil_input_factor }
            add_to_variable = { industry_output_factor@token:oil = modifier@oil_output_factor }
            add_to_variable = { industry_throughput_factor@token:oil = modifier@oil_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:oil = modifier@oil_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:oil = modifier@oil_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:rubber = modifier@rubber_input_factor }
            add_to_variable = { industry_output_factor@token:rubber = modifier@rubber_output_factor }
            add_to_variable = { industry_throughput_factor@token:rubber = modifier@rubber_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:rubber = modifier@rubber_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:rubber = modifier@rubber_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:aluminum = modifier@aluminum_input_factor }
            add_to_variable = { industry_output_factor@token:aluminum = modifier@aluminum_output_factor }
            add_to_variable = { industry_throughput_factor@token:aluminum = modifier@aluminum_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:aluminum = modifier@aluminum_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:aluminum = modifier@aluminum_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:chromium = modifier@chromium_input_factor }
            add_to_variable = { industry_output_factor@token:chromium = modifier@chromium_output_factor }
            add_to_variable = { industry_throughput_factor@token:chromium = modifier@chromium_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:chromium = modifier@chromium_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:chromium = modifier@chromium_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:tungsten = modifier@tungsten_input_factor }
            add_to_variable = { industry_output_factor@token:tungsten = modifier@tungsten_output_factor }
            add_to_variable = { industry_throughput_factor@token:tungsten = modifier@tungsten_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:tungsten = modifier@tungsten_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:tungsten = modifier@tungsten_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:titanium = modifier@titanium_input_factor }
            add_to_variable = { industry_output_factor@token:titanium = modifier@titanium_output_factor }
            add_to_variable = { industry_throughput_factor@token:titanium = modifier@titanium_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:titanium = modifier@titanium_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:titanium = modifier@titanium_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:silicon = modifier@silicon_input_factor }
            add_to_variable = { industry_output_factor@token:silicon = modifier@silicon_output_factor }
            add_to_variable = { industry_throughput_factor@token:silicon = modifier@silicon_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:silicon = modifier@silicon_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:silicon = modifier@silicon_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:rare_earths = modifier@rare_earths_input_factor }
            add_to_variable = { industry_output_factor@token:rare_earths = modifier@rare_earths_output_factor }
            add_to_variable = { industry_throughput_factor@token:rare_earths = modifier@rare_earths_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:rare_earths = modifier@rare_earths_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:rare_earths = modifier@rare_earths_attractiveness_factor }

            
            add_to_variable = { industry_input_factor@token:steel = modifier@steel_input_factor }
            add_to_variable = { industry_output_factor@token:steel = modifier@steel_output_factor }
            add_to_variable = { industry_throughput_factor@token:steel = modifier@steel_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:steel = modifier@steel_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:steel = modifier@steel_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:tools = modifier@tools_input_factor }
            add_to_variable = { industry_output_factor@token:tools = modifier@tools_output_factor }
            add_to_variable = { industry_throughput_factor@token:tools = modifier@tools_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:tools = modifier@tools_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:tools = modifier@tools_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:machinery = modifier@machinery_input_factor }
            add_to_variable = { industry_output_factor@token:machinery = modifier@machinery_output_factor }
            add_to_variable = { industry_throughput_factor@token:machinery = modifier@machinery_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:machinery = modifier@machinery_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:machinery = modifier@machinery_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:chemicals = modifier@chemicals_input_factor }
            add_to_variable = { industry_output_factor@token:chemicals = modifier@chemicals_output_factor }
            add_to_variable = { industry_throughput_factor@token:chemicals = modifier@chemicals_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:chemicals = modifier@chemicals_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:chemicals = modifier@chemicals_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:plastics = modifier@plastics_input_factor }
            add_to_variable = { industry_output_factor@token:plastics = modifier@plastics_output_factor }
            add_to_variable = { industry_throughput_factor@token:plastics = modifier@plastics_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:plastics = modifier@plastics_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:plastics = modifier@plastics_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:composites = modifier@composites_input_factor }
            add_to_variable = { industry_output_factor@token:composites = modifier@composites_output_factor }
            add_to_variable = { industry_throughput_factor@token:composites = modifier@composites_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:composites = modifier@composites_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:composites = modifier@composites_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:electronics = modifier@electronics_input_factor }
            add_to_variable = { industry_output_factor@token:electronics = modifier@electronics_output_factor }
            add_to_variable = { industry_throughput_factor@token:electronics = modifier@electronics_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:electronics = modifier@electronics_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:electronics = modifier@electronics_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:portable_power = modifier@portable_power_input_factor }
            add_to_variable = { industry_output_factor@token:portable_power = modifier@portable_power_output_factor }
            add_to_variable = { industry_throughput_factor@token:portable_power = modifier@portable_power_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:portable_power = modifier@portable_power_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:portable_power = modifier@portable_power_attractiveness_factor }

            
            add_to_variable = { industry_input_factor@token:consumer_goods = modifier@consumer_goods_input_factor }
            add_to_variable = { industry_output_factor@token:consumer_goods = modifier@consumer_goods_output_factor }
            add_to_variable = { industry_throughput_factor@token:consumer_goods = modifier@consumer_goods_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:consumer_goods = modifier@consumer_goods_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:consumer_goods = modifier@consumer_goods_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:textiles = modifier@textiles_input_factor }
            add_to_variable = { industry_output_factor@token:textiles = modifier@textiles_output_factor }
            add_to_variable = { industry_throughput_factor@token:textiles = modifier@textiles_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:textiles = modifier@textiles_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:textiles = modifier@textiles_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:vehicles = modifier@vehicles_input_factor }
            add_to_variable = { industry_output_factor@token:vehicles = modifier@vehicles_output_factor }
            add_to_variable = { industry_throughput_factor@token:vehicles = modifier@vehicles_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:vehicles = modifier@vehicles_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:vehicles = modifier@vehicles_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:appliances = modifier@appliances_input_factor }
            add_to_variable = { industry_output_factor@token:appliances = modifier@appliances_output_factor }
            add_to_variable = { industry_throughput_factor@token:appliances = modifier@appliances_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:appliances = modifier@appliances_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:appliances = modifier@appliances_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:computers = modifier@computers_input_factor }
            add_to_variable = { industry_output_factor@token:computers = modifier@computers_output_factor }
            add_to_variable = { industry_throughput_factor@token:computers = modifier@computers_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:computers = modifier@computers_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:computers = modifier@computers_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:electricity = modifier@electricity_input_factor }
            add_to_variable = { industry_output_factor@token:electricity = modifier@electricity_output_factor }
            add_to_variable = { industry_throughput_factor@token:electricity = modifier@electricity_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:electricity = modifier@electricity_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:electricity = modifier@electricity_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:services = modifier@services_input_factor }
            add_to_variable = { industry_output_factor@token:services = modifier@services_output_factor }
            add_to_variable = { industry_throughput_factor@token:services = modifier@services_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:services = modifier@services_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:services = modifier@services_attractiveness_factor }
            
            add_to_variable = { industry_input_factor@token:entertainment = modifier@entertainment_input_factor }
            add_to_variable = { industry_output_factor@token:entertainment = modifier@entertainment_output_factor }
            add_to_variable = { industry_throughput_factor@token:entertainment = modifier@entertainment_throughput_factor }
            add_to_variable = { industry_attractiveness_modifier@token:entertainment = modifier@entertainment_attractiveness_modifier }
            add_to_variable = { industry_attractiveness_factor@token:entertainment = modifier@entertainment_attractiveness_factor }
        #

		#Consumer_goods_factory
			# set_variable = { industry_input_factor@token:building_consumer_goods_factory = modifier@building_consumer_goods_factory_input_factor }
			# set_variable = { industry_output_factor@token:building_consumer_goods_factory = modifier@building_consumer_goods_factory_output_factor }
			# set_variable = { industry_throughput_factor@token:building_consumer_goods_factory = modifier@building_consumer_goods_factory_throughput_factor }
		#
        
	}
#